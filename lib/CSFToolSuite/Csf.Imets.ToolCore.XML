<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Csf.Imets.ToolCore</name>
    </assembly>
    <members>
        <member name="F:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.AnalysisOutput.m_Groups">
            <summary>
            This basically contains everything needed for this class
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.AnalysisOutput.GroupNames">
            <summary>
            Provdes the list of group names in this object.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.AnalysisOutput.Item(System.String)">
            <summary>
            Returns a list of all the output items under the
            given group name.
            </summary>
            <param name="groupName"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.AnalysisOutput.AddGroup(System.String)">
            <summary>
            Adds a group
            </summary>
            <param name="groupName"></param>
            <returns>False if group was not added (typically due to group already being present.)</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.AnalysisOutput.RemoveGroup(System.String)">
            <summary>
            Removes specified group and clears output items.
            </summary>
            <param name="groupName"></param>
            <returns>True if removed, false if not.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.AnalysisOutput.AddItem(System.String,Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.IOutputItem)">
            <summary>
            Adds an item to the specified group.  If the specified group has not
            been added, it adds the group first.
            </summary>
            <param name="groupName">The group to add the item under.</param>
            <param name="item">The item to add</param>
        </member>
        <member name="T:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.ListDirection">
            <summary>
            A direction moved on the X axis.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.PointOfInterest">
            <summary>
            This describes a specific point on an Analyzed List where the list changes direction
            on the X axis.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.AnalyzedList">
            <summary>
            This class provides a list of data (floats) along with points of interest (i.e. changes of
            direction on the X axis) and other utility methods for determining where on the list
            a tolerance slice should be.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.AnalyzedList.#ctor(System.Collections.Generic.List{System.Single})">
            <summary>
            
            </summary>
            <param name="data">Expected to be an interlaced list from a plotdataset...</param>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.AnalyzedList.Data">
            <summary>
            Expected to be an interlaced list from a plotdataset...
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.AnalyzedList.Loops">
            <summary>
            True if this list loops back upon itself.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.AnalyzedList.Direction">
            <summary>
            Gives the lists first X direction or Right.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.AnalyzedList.CloseEnough(System.Single,System.Single)">
            <summary>
            Checks to see if two values are very close to one another.
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
            <returns></returns>
        </member>
        <member name="T:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.AuralAnalysis.OctaveBand">
            <summary>
            Internal class for maintaining octave band analysis data.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.AuralAnalysis.OctaveDelta(System.Int32,System.Double)">
            <summary>
            Calculates the absolute difference between a frequency and an octave center frequency.
            </summary>
            <param name="index">The index of the octave center frequency freq is to be compared against</param>
            <param name="freq">The frequency being compared</param>
            <returns>The absolute value of exact center</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.AuralAnalysis.GetOutput(Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.AnalysisDataSetTypes,System.Boolean)">
            <summary>
            Provides output from the analysis in accordance with the IAnalysisOutput interface.
            </summary>
            <param name="type">Which data the analysis should be for (Ideal or Sim)</param>
            <param name="useNormalized">Not used</param>
            <returns>An IAnalysisOutput conforming object with data that can be displayed most effectively in
            an AuralAnalysisOutputViewer.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.BaseAnalysis.GetNonConflictingLocation(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Returns the LocationType enumeration that best places "locationPoint"'s annotation text
            given the corresponding referencePoint (typically the ideal data).
            </summary>
            <param name="referencePoint"></param>
            <param name="locationPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.BaseAnalysis.GetNonConflictingLocation(System.Drawing.PointF,System.Drawing.PointF,Csf.Imets.ToolCore.Common.Controls.LocationType)">
            <summary>
            Returns the LocationType enumeration that best places "locationPoint"'s annotation text
            given the corresponding referencePoint (typically the ideal data).
            </summary>
            <param name="referencePoint"></param>
            <param name="locationPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.BaseAnalysis.InitializeDataSet(Csf.Imets.ToolCore.Common.Controls.PlotDataSetStyle,Csf.Imets.ToolCore.Common.Controls.PlotDataSet,Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.AnalysisDataSetTypes)">
            <summary>
            Puts the default/standard values for a new PlotDataSet and returns it.  The new 
            PlotDataSet is intended for use by a plotter to draw key features of this analysis.
            </summary>
            <param name="style">The style of the new dataset</param>
            <param name="template">A dataset to template the new one after</param>
            <param name="type">The type of dataset</param>
            <returns>A new PlotDataSet.</returns>
        </member>
        <member name="T:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.ControlDynamicAnalysis">
             <summary>
             This performs Control Dynamics analysis on a set of data persuant to the appropriate regulatory authority.
             The guidelines are as follows:
             The tolerance of Control dynamic includes Amplitude and Period.
             
             1. For the Period tolerance, FAA and CAAC they are the same:
             The time passing zero for first time: ±10%
             Subsequent oscillating period : ±10(N+1)%
             which is explained as:
             
             T(P0) .............. ±10% of P0.
             T(P1) .............. ±20% of P1.
             T(P2) .............. ±30% of P2.
             T(Pn) .............. ±10(n+1)% of Pn.
            
             2. For the Amplitude, FAA and CAAC are not the same:
            
             (1) CAAC tolerance:
             Overshoot amplitude for first time: ±10%
             The overshoot amplitude when the second and subsequent overshoot amplitude are 5% more than initial displacement(Ad): ±20%
             Overshoot times: ±1
             which is explained as:
             T(A1) ............. ±10% of A1.
             T(A2) ............. ±20% of A2.
             T(An) ............. ±20% of An. (n>1)
             T(Ad) ............. ±5% of Ad = residual band.
            
             (2) FAA tolerance:
             ±10% amplitude of first overshoot
             applied to all overshoots greater
             than 5% of initial displacement (.05 Ad).
             ±1 overshoot (first significant overshoot must be matched).
             
             Which is explained as:
             T(An) ............. ±10% of A1.
             T(Ad) ............. ±5% of Ad = residual band.
             
             </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.ControlDynamicAnalysis.m_Pt">
            <summary>
            Period tolerances. These are +/-10% of the corresponding period values (e.g. P0, P1...).
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.ControlDynamicAnalysis.m_At">
            <summary>
            The amplitude tolerance is +- 10 % of first peak (A1) and +-20% of all subsequent peaks (A1, A2...)
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.ControlDynamicAnalysis.PlusMinusPeakVisible">
            <summary>
            When set to TRUE, provides output for the +-1 amplitude and period
            that are not required for tolerance grading.  Their grades are marked "N/A".
            If false then they are not emitted.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.ControlDynamicAnalysis.P">
            <summary>
            These are the period values for the ideal data. The 
            FSTD data's periods don't get captured with this.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.ControlDynamicAnalysis.Pt">
            <summary>
            A list of the period tolerances.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.ControlDynamicAnalysis.A">
            <summary>
            These are the amplitudes for the ideal data.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.ControlDynamicAnalysis.At">
            <summary>
            The list of absolute tolerance values for amplitudes. Amplitude tolerances
            are different for FAA versus CAAC.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.ControlDynamicAnalysis.EvaluateControlData(System.Double[],System.Double[],Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.AnalysisDataSetTypes)">
            <summary>
            This method analyzes the passed data to determine if the system is critically damped or underdamped.  
            Calculates tolerances if the DataSet is the "Ideal" dataset per FAA or CAAC guidelines.
            </summary>
            <param name="Xdata">An array of X positions that correspond to the Y positions</param>
            <param name="Ydata">An array of Y positions that correspond to the X positions</param>
            <param name="DataSet">The type of dataset being analyzed.</param>
            <returns>False for error, true for success.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.ControlDynamicAnalysis.GetPeriodDataSet(Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.AnalysisDataSetTypes,Csf.Imets.ToolCore.Common.Controls.PlotDataSet,System.Double)">
            <summary>
            Returns a list of PlotDataSets that will draw the period lines on a plot.
            </summary>
            <param name="type"></param>
            <param name="analyzedData"></param>
            <param name="ymin"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.ControlDynamicAnalysis.GetIconPlotDataSet(Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.AnalysisDataSetTypes,Csf.Imets.ToolCore.Common.Controls.PlotDataSet,Csf.Imets.ToolCore.Common.Controls.StockPlotIcons)">
            <summary>
            Returns a dataset with all the important points to be highlighted on a plot.
            </summary>
            <param name="type"></param>
            <param name="analyzedData"></param>
            <param name="icon"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.ControlDynamicAnalysis.GetTolerancePlotDataSet(Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.AnalysisDataSetTypes,Csf.Imets.ToolCore.Common.Controls.PlotDataSet,System.Double,System.Double)">
            <summary>
            Provides the settle point drawing instructions via a PlotDataSet for the requested analyzed dataset type.
            </summary>
            <param name="type"></param>
            <param name="analyzedData"></param>
            <param name="xmin"></param>
            <param name="xmax"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.ControlDynamicAnalysis.GetAnnotations(Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.AnalysisDataSetTypes,Csf.Imets.ToolCore.Common.Controls.LocationType)">
            <summary>
            Generates a list of all Annotation objects that need to be displayed for this analysis.
            </summary>
            <param name="type"></param>
            <param name="locationType"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.ControlDynamicAnalysis.GetAmplitudeAnnotationLocation(Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.AnalysisDataSetTypes,System.Int32)">
            <summary>
            Helper method to determine the best placement of annotation text for the given PeaksValues index.
            </summary>
            <param name="type"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.ControlDynamicAnalysis.GetPeriodTolerance(System.Int32)">
            <summary>
            Returns the normalized tolerance for the given period index.
            </summary>
            <param name="period"></param>
            <returns>A NaN if it's a bad index, a negative value if this period does not require grading, 
            and a normalized tolerance if it does.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.ControlDynamicAnalysis.GetAmplitudeTolerance(System.Int32)">
            <summary>
            Returns the normalized tolerance for the given peak index.
            </summary>
            <param name="peak"></param>
            <returns></returns>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.IAnalysisOutput.GroupNames">
            <summary>
            Provdes the list of group names in this object.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.IAnalysisOutput.Item(System.String)">
            <summary>
            Returns a list of all the output items under the
            given group name.
            </summary>
            <param name="groupName"></param>
            <returns></returns>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.OutputItem.Priority">
            <summary>
            The int value of the DisplayPriority property.  The lower the 
            number the higher the priority. 
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.OutputItem.DisplayPriority">
            <summary>
            The importance of this output item.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.ShortPeriodAnalysis.ReferenceTime">
            <summary>
            The time to be used for the reference point.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.ShortPeriodAnalysis.PeakTime2">
            <summary>
            The time that the second peak occurrs.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.ShortPeriodAnalysis.PeakTime1">
            <summary>
            The time that the first peak occurs.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.ToleranceNode.#ctor(System.Int32,System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new ToleranceNode object.
            </summary>
            <param name="xIndex">The index into the vertices array for the X value</param>
            <param name="yIndex">The index into the vertices array for the Y value</param>
            <param name="minimum">The minimum allowable value.</param>
            <param name="maximum">The maximum allowable value.</param>
            <param name="actual">The actual value.</param>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.ToleranceNode.Maximum">
            <summary>
            The maximum value acceptable;
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.ToleranceNode.Minimum">
            <summary>
            The minimum value acceptable.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.ToleranceNode.YVertexIndex">
            <summary>
            The index in the vertices array for the Y value;
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.ToleranceNode.XVertexIndex">
            <summary>
            The index in the vertices array for the X value.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.ToleranceNode.Value">
            <summary>
            The actual value that was out of tolerance.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.TolerancePlotDataSet.#ctor(Csf.Imets.ToolCore.Common.Controls.PlotDataSetStyle,Csf.Imets.ToolCore.Common.Controls.PlotDataSet,Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.ToleranceParameter)">
            <summary>
            Generates a new TolerancePlotDataSet with the provided properties.
            </summary>
            <param name="setStyle">The style of the dataset</param>
            <param name="validationDataSet">A reference to the validation data used 
            for calculating tolerances</param>
            <param name="paramToEvaluate">The tolerance parameter for the data being evaluated.</param>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.TolerancePlotDataSet.ToleranceNodes">
            <summary>
            A list of all points determined to be out of tolerance.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.TolerancePlotDataSet.Grade">
            <summary>
            The overall grade of this dataset.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.TolerancePlotDataSet.ValidationDataSet">
            <summary>
            The validation data used to compare against.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.TolerancePlotDataSet.ToleranceParameter">
            <summary>
            The ToleranceParameter that provides the needed tolerance settings for
            determining if the data passes or not.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.TolerancePlotDataSet.Slice">
            <summary>
            The object that actually does the tolerance calculations.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.TolerancePlotDataSet.OutOfToleranceColor">
            <summary>
            Adds a twist such that even out of tolerance points are colored InTolerance when
            <see cref="P:Csf.Imets.ToolCore.Common.Controls.PlotDataSet.OutOfToleranceColor"/>
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.TolerancePlotDataSet.Add(System.Single,System.Single)">
            <summary>
            Adds and grades (if applicable) a data point.
            </summary>
            <param name="x">The X value</param>
            <param name="y">The Y value</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.TolerancePlotDataSet.Add(System.Drawing.PointF)">
            <summary>
            Adds and grades (if applicable) a data point.
            </summary>
            <param name="data">The point to add.</param>
        </member>
        <member name="T:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.ToleranceSlice">
            <summary>
            This maintains a Slice of validation data that is used to determine if
            values are in or out of tolerance.  Expected useage is:
            <example>
            ToleranceSlice grader = new ToleranceSlice(ValidationDataSet, ParentGraph.YParameter);
            
            for (int i = 0; i &lt;resultDataSet.ResultFile.Samples; i++)
            {
               Grade grade = grader.GradePoint(
               
               newResultDataSet.Add(resultDataSet.ResultFile[x_Index][i], resultDataSet.ResultFile[y_Index][i]);
            }
            
            </example>
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.ToleranceSlice.m_Direction">
            <summary>
            Keeps track of the direction we are moving on the x axis for validation data.
            Helps keep the slice current and on the right curve.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.ToleranceSlice.#ctor(Csf.Imets.ToolCore.Common.Controls.PlotDataSet,Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.ToleranceParameter)">
            <summary>
            Generates a new ToleranceSlice object with the given parameters as
            defaults.
            </summary>
            <param name="validationData">The data to be used to compare incoming results against</param>
            <param name="param">The Tolerance parameter that is used to determine in/out of tolerance values.</param>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.ToleranceSlice.ValidationDataSet">
            <summary>
            Sets the ValidationData with the data in the plotdata set provided.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.ToleranceSlice.YToleranceParameter">
            <summary>
            Gets/Sets the tolerance parameter that these calculations are being made for.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.ToleranceSlice.SliceX">
            <summary>
            The sliding "slice" of validation data that is active.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.ToleranceSlice.CurrentMaximum">
            <summary>
            The current maximum valid value for this slice.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.ToleranceSlice.CurrentMinimum">
            <summary>
            The current minimum valid value for this slice.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.ToleranceSlice.GradePoint(System.Single,System.Single)">
            <summary>
            Grades whether or not a point is within acceptable tolerance bands.
            </summary>
            <param name="x">The X value (generally time)</param>
            <param name="y">The Y value</param>
            <returns>Either a pass or fail grade.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.ToleranceSlice.ResetSlice">
            <summary>
            Sets the validation data back to the beginning and checks it for multiple X values.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Chooser.SelectFsptDataPath">
            <summary>
            Allows the user to select the default FSPT data path.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Chooser.ShowDefaultEqtgPathBrowser(System.String)">
            <summary>
            Allows the user to select the default eQTG data path.
            </summary>1
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Chooser.ShowDefaultFsptPathBrowser(System.String)">
            <summary>
            Allows the user to select the default Fspt data path.
            </summary>1
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Chooser.ShowDefaultPathBrowser(System.String,System.String)">
            <summary>
            Allows the user to select the default eQTG data path.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Chooser.UpdateAdvisoryCircular">
            <summary>
            Initializes the selections for the Advisory Circular combo box based on the available
            directories in [FSTD]/[AircraftNameComboBox.SelectedItem]/[ThrustRatingComboBox.SelectedItem]/[RegulatoryAuthorityComboBox.SelectedItem].
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Chooser.UpdateAircraftName">
            <summary>
            Initializes the choices for the AircraftNameCombobox based on the available directories
            in FSTD.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Chooser.UpdateRegulatoryAuthority">
            <summary>
            Initializes the selections for the Regulatory Authority combo box based on the available
            directories in [FSTD]/[AircraftNameComboBox.SelectedItem].
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Chooser.ValidateData">
            <summary>
            Validates the different boxes to see if they're legal values and if all selections have been set
            </summary>
            <returns>true if validate succeeded; false otherwise</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Chooser.IsValidBasePath(System.String)">
            <summary>
            Check to determine if the supplied filename is a valid FSPT data path.
            </summary>
            <param name="datapath"></param>
            <returns></returns>
        </member>
        <member name="F:Csf.Imets.ToolCore.AutoFidelityTesting.Chooser.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Chooser.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Chooser.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.AnalysisOutputViewer.PreferredSizeChanged">
            <summary>
            Subscribe to this to if you want to know when the preferred size
            of the control changes.  (Mainly for recalculating the layout).
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.AnalysisOutputViewer.ShowOutputPriority">
            <summary>
            The priority of output items that will
            be displayed in this viewer.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.AnalysisOutputViewer.GetCellFormatColor(System.Int32,System.Int32)">
            <summary>
            Provides the appropriate format color for the tolerance columns and/or any cell in the 
            table based on the cell index provided.
            </summary>
            <param name="columnIndex"></param>
            <param name="rowIndex"></param>
            <returns>Either an empty color if no formatting is needed or OutOfToleranceColor 
            or InToleranceColor depending on the cell's value</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.AnalysisOutputViewer.GetCellHighlightColor(System.Int32,System.Int32)">
            <summary>
            Provides the appropriate format color for background of cells based on the
            cell index provided.
            </summary>
            <param name="columnIndex"></param>
            <param name="rowIndex"></param>
            <returns>Either an empty color if no formatting is needed or OutOfToleranceColor 
            or InToleranceColor depending on the cell's value</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.AnalysisOutputViewer.AddUpdateRow(Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.IOutputItem,System.Int32,System.Int32)">
            <summary>
            The name is kind of confusing.  This method adds OR updates a row for the given output item 
            </summary>
            <param name="item"></param>
            <param name="valueColumn"></param>
            <param name="toleranceColumn"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.AnalysisOutputViewer.ChangeStyle(Csf.Imets.ToolCore.AutoFidelityTesting.Controls.StyleType)">
            <summary>
            Changes the style of the control.
            </summary>
            <param name="value"></param>
        </member>
        <member name="F:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.AnalysisOutputViewer.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.AnalysisOutputViewer.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.AnalysisOutputViewer.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.AnalysisSettings.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.AnalysisSettings.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.AnalysisSettings.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.AuralAnalysisOutputViewer.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.AuralAnalysisOutputViewer.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.AuralAnalysisOutputViewer.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.CommentEntry.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.CommentEntry.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.CommentEntry.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.CommentEntryForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.CommentEntryForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.CommentEntryForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.IcParameterControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.IcParameterControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.IcParameterControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.IcParameterDataGridView.MasterValueColumnVisibility">
            <summary>
            Gets or sets a value indicating whether the MasterValueColumn is displayed.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.IcParameterDataGridView.AllWarningsOff">
            <summary>
            Gets / Sets whether or not warnings are displayed for the IcParameter rows.
            If true no warnings are displayed.  If false warnings are displayed based on
            the other warning properties.
            </summary>
        </member>
        <member name="E:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.IcParameterDataGridView.PreferredSizeChanged">
            <summary>
            Subscribe to this to if you want to know when the preferred size
            of the control changes.  (Mainly for recalculating the layout).
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.IcParameterDataGridView.SetupContextMenu">
            <summary>
            Expected to be called from the constructor.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.IcParameterDataGridView.GetUnits(Csf.Imets.ToolCore.AutoFidelityTesting.IcParameter)">
            <summary>
            Given an IcParameter it attempts to get the units from the StsParameter but if that is
            not available will return the UnitsLabel of the IcParameter or "".
            </summary>
            <param name="tempParam">The IC parameter to get the units for</param>
            <returns>String of the units for the IcParameter.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.IcParameterDataGridView.SetDataSource">
            <summary>
            Handles all the necessary databinding method calls to bind to a new IcParameterSet.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.IcParameterDataGridView.FillPageColumnList(System.Int32)">
            <summary>
            Puts the datagridview's rows in a handy list of lists to separate them out into columns
            so the printer can easily image the necessary columns.
            </summary>
            <param name="totalRowsPerColumn"></param>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.IcParameterDataGridView.Invertable">
            <summary>
            If this control can be inverted when printed.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.ResultsChooser.TestSet">
            <summary>
            The current set of tests that this control may display results for.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.ResultsChooser.SelectedTest">
            <summary>
            The test that is currently selected on the control.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.ResultsChooser.View">
            <summary>
            How the list of items is to be displayed.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.ResultsChooser.UpdateListView">
            <summary>
            Updates the results listing from either the selected test if not null or
            the test set if not null.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.ResultsChooser.GetListViewItemFromResults(Csf.Imets.ToolCore.AutoFidelityTesting.Test,Csf.Imets.ToolCore.AutoFidelityTesting.FsptResultsPlotDataSet)">
            <summary>
            Generates the list view item based on the provided results data set.
            </summary>
            <param name="test"></param>
            <param name="dataset"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.ResultsChooser.SetView(System.Windows.Forms.View)">
            <summary>
            Ensures the GUI is properly updated upon a view change.
            </summary>
            <param name="value"></param>
        </member>
        <member name="F:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.ResultsChooser.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.ResultsChooser.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.ResultsChooser.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.TableViewDataGridView.ShowPlusMinusTolerance">
            <summary>
            When true, display Plus-Minus symbol prior to the Tolerance value, otherwise dont display it.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.TableViewDataGridView.OutputFormat">
            <summary>
            The format string used for outputting numbers in the table
            default is "0.###"
            </summary>
        </member>
        <member name="E:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.TableViewDataGridView.PreferredSizeChanged">
            <summary>
            Subscribe to this to if you want to know when the preferred size
            of the control changes.  (Mainly for recalculating the layout).
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.TableViewDataGridView.AddResultsFile(Csf.Imets.ToolCore.AutoFidelityTesting.FsptResultsPlotDataSet)">
            <summary>
            Adds a results file to the list of results files being displayed.
            </summary>
            <param name="ds"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.TableViewDataGridView.DisplayTable">
            <summary>
            Sets up the binding source and DataPropertyNames as appropriate.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.TableViewDataGridView.UpdateResultsColumns">
            <summary>
            Clears out the additional columns and rebuilds them based on 
            the list of resultsfiles.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.TableViewDataGridView.AddResultsColumns(Csf.Imets.ToolCore.AutoFidelityTesting.ResultsFile)">
            <summary>
            Adds columns for additional results being plotted.
            </summary>
            <param name="resultsFile"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.TableViewDataGridView.ResultsVisibleChanged(System.Object,System.EventArgs)">
            <summary>
            Handles when the results visibility change (presumably from the user clicking 
            on the legend.)
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.TableViewDataGridView.ChangeStyle(Csf.Imets.ToolCore.AutoFidelityTesting.Controls.StyleType)">
            <summary>
            Changes the style of the control.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.TableViewDataGridView.GetParameter(System.Windows.Forms.DataGridViewRow)">
            <summary>
            Returns the databound parameter from a given row.
            </summary>
            <param name="row"></param>
            <returns>Null if not found otherwise the ToleranceParameter</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.TableViewDataGridView.OnCellValueNeeded(System.Windows.Forms.DataGridViewCellValueEventArgs)">
            <summary>
            Provides values for the unbound columns (the results).
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.TableViewDataGridView.GetValueFromResult(Csf.Imets.ToolCore.AutoFidelityTesting.ResultsFile,System.Windows.Forms.DataGridViewRow)">
            <summary>
            Convenience routine to return a value from a results file given 
            a row from this datagridview.
            </summary>
            <param name="resultsFile"></param>
            <param name="row"></param>
            <returns>"BAD VALUE" if invalid or the value if valid.</returns>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.TestBatchController.DefaultDirectory">
            <summary>
            The directory files are opened from / saved to by default.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.TestBatchController.EnableBatchBinMenus">
            <summary>
            Handles the activation/de-activation of buttons on the toolbar.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.TestBatchController.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.TestBatchController.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Controls.TestBatchController.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.DeviceConfiguration.MatchAircraftConfiguration">
            <summary>
            Checks to see if the currently loaded test's AircaftConfiguration and ThrustRating match the
            settings on the host.  If they do then this does nothing, otherwise it requests new values
            (to match the test's values) and waits for 2 sec before continuing.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.AutoFidelityTesting.EnvironmentInfo">
            <summary>
            Singleton that controls pathing for eQTG.  Note: this does not become valid until the sim_details.tex file
            has been set...Directories (mostly properties ending in "Path") always require a "\\" or @"\" before adding
            filenames to them.  This is an eQTG "standard".
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.AutoFidelityTesting.EnvironmentInfo.ProgramInfoDirConstant">
            <summary>
            The directory name only for the Program information directory (does not have a leading \)
            </summary>
        </member>
        <member name="E:Csf.Imets.ToolCore.AutoFidelityTesting.EnvironmentInfo.EnvironmentInitializedChanged">
            <summary>
            Fired whenever the Initialized changes.
            </summary>
        </member>
        <member name="E:Csf.Imets.ToolCore.AutoFidelityTesting.EnvironmentInfo.SimDetailsChanged">
            <summary>
            Fired whenever the SimDetails is set.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.EnvironmentInfo.Instance">
            <summary>
            Get a reference to the only copy of EnvironmentInfo.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.EnvironmentInfo.Initialized">
            <summary>
            Whether or not all the needed data is available for reliable
            path properties.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.EnvironmentInfo.DefaultEqtgPath">
            <summary>
            The directory selected by the user.  Must contain FSTD and core_doc
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.EnvironmentInfo.BasePath">
            <summary>
            The path used as the base for the DefaultEqtgPath and DefaultFsptPath 
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.EnvironmentInfo.CorePath">
            <summary>
            The directory that the core data (Csf controlled) is located in
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.EnvironmentInfo.ValidationDataPath">
            <summary>
            Same as TestSourceDataPath but this is here in case someone changes the backend to 
            move the Validation data into a higher level directory.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.EnvironmentInfo.BinPath">
            <summary>
            Directory that contains the script files for the QTG.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.EnvironmentInfo.TemplatePath">
            <summary>
            The directory where all templates reside.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.EnvironmentInfo.GuiTemplatePath">
            <summary>
            Provides the directory where the GUI Templates reside.
            (Uses TemplatePath and appends the subdirectory for the GUI Templates.)
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.EnvironmentInfo.DocXTemplatePath">
            <summary>
            Provides the directory where the DocX Templates reside.
            (Uses TemplatePath and appends the subdirectory for the DocX Templates.)
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.EnvironmentInfo.FstdPath">
            <summary>
            Path to the FSTD directory..
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.EnvironmentInfo.FstdAdvisoryCircularPath">
            <summary>
            The FSTD\[program_name]\[Regulatory Authority]\[Advisory Circular] path
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.EnvironmentInfo.GuiTempFilesPath">
            <summary>
            Provides the directory where the GUI temporary files reside.  (e.g. all the
            generated PDFs.  If it doesn't exist then the directory is created before
            returning (unless the EnvironmentInfo hasn't been initialized).
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.EnvironmentInfo.PlotsPath">
            <summary>
            Gets Plot images Path
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.EnvironmentInfo.QTGFullPath">
            <summary>
            Gets QTG docx document file name with full path.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.EnvironmentInfo.QTGBackupFullPath">
            <summary>
            Gets QTG backup document file name with full path.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.EnvironmentInfo.SimulatorPlotResultsPath">
            <summary>
            The directory where capture plots should get dumped for Eqtg...
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.EnvironmentInfo.DefaultAircraftName">
            <summary>
            If you are changing both the AircraftName and ThrustRating use SetDefaultAircraftNameAndThrustRating() instead
            to avoid the potential of having a bad ThrustRating AircraftName combination.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.EnvironmentInfo.DefaultThrustRating">
            <summary>
            If you are changing both the AircraftName and ThrustRating use SetDefaultAircraftNameAndThrustRating() instead
            to avoid the potential of having a bad ThrustRating AircraftName combination.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.EnvironmentInfo.DocXFullPath">
            <summary>
            construct and get the full path string of QTG document where it supposed to be updated.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.EnvironmentInfo.DeviceDirectory">
            <summary>
            Corresponds to ProgramDirName + ThrustRating in dir_struct.tex...
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.EnvironmentInfo.FullDeviceDirectory">
            <summary>
            Corresponds to SpecificDeviceDir in dir_struct.tex but has the full FSTD path added to it...
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.EnvironmentInfo.SimOperator">
            <summary>
            Corresponds to SimOperator in sim_details.tex...
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.EnvironmentInfo.SimOperatorShort">
            <summary>
            Corresponds to SimOperator in sim_details.tex...
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.EnvironmentInfo.SimulatorLocation">
            <summary>
            Corresponds to SimLocation in sim_details.tex...
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.EnvironmentInfo.SimulatorLoadVersion">
            <summary>
            Corresponds to SimLoadVersion in sim_details.tex...
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.EnvironmentInfo.CertificationType">
            <summary>
            Corresponds to CertificationType in sim_details.tex..
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.EnvironmentInfo.CertificationLevel">
            <summary>
            Corresponds to CertificationLeve in sim_details.tex
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.EnvironmentInfo.CertificationTypeAndLevel">
            <summary>
            Gets the certification type and level separated by a '\'
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.EnvironmentInfo.GetTruncatedFileName(System.String)">
            <summary>
            Returns the individualized part of a Master QTG filename.
            </summary>
            <param name="originalFileName">The original Master QTG filename</param>
            <returns>The individualized part of a Master QTG filename.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.EnvironmentInfo.GetFilename(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="testreference">(Not all formats defined in EnvironmentInfo use testreference.)</param>
            <param name="extension">(This is always needed...)</param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.EnvironmentInfo.SetDefaultAircraftNameAndThrustRating(System.String,System.String)">
            <summary>
            Sets both the DefaultAircraftName and DefaultThrustRating properties at once.  Setting them
            individually may cause invalid SimDetails file names.
            </summary>
            <param name="SelectedAircraftName"></param>
            <param name="SelectedThrustRating"></param>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.AftFile.FilePath">
            <summary>
            Gets the full path of the file.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.AftFile.LogMessage(System.String)">
            <summary>
            Logs a message as an event.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.AftFile.LogMessage(System.String,Csf.Imets.ToolCore.Log.LogSeverity)">
            <summary>
            Logs a message as whatever severity specified.
            </summary>
            <param name="message"></param>
            <param name="severity"></param>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.BinData.TimeStsName">
            <summary>
            The parameter name used for the TIME axis.  By
            default it is "FLIGHT_TIME".
            </summary>
        </member>
        <member name="E:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.DataDirectory.DataPathChanged">
            <summary>
            Event that is triggered when the root path for this suite of configuration changes.
            </summary>
        </member>
        <member name="E:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.DataDirectory.SelectedDeviceConfigurationChanged">
            <summary>
            Event that is triggered when a new device configuration is selected.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.DataDirectory.DefaultThrustRating">
            <summary>
            This is the name of the default thrust rating as specified by the master
            configuration file.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.DataDirectory.DefaultAircraftConfig">
            <summary>
            This is the default aircraft configuration as specified by the master configuration
            file.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.DataDirectory.SelectedThrustRating">
            <summary>
            The currently selected Thrust Rating.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.DataDirectory.SelectedAircraftConfig">
            <summary>
            The currently selected Aircraft Configuration.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.DataDirectory.DataPath">
            <summary>
            The base directory for the FSPT data.  (Should include a conf directory along with 
            aircraft configuration directories.)
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.DataDirectory.SelectedDeviceConfigurationPath">
            <summary>
            
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.DataDirectory.ConfPath">
            <summary>
            The path to the overall configuration directory.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.DataDirectory.GetThrustRatingIndex(System.String,System.Int32,System.Int32@)">
            <summary>
            Returns the index of the requested thrust rating for the given parameters.
            </summary>
            <param name="thrustRating">The string value of the thrust rating e.g. 7B27K</param>
            <param name="aircraftConfigIndex">The index of the aircraft's configuration</param>
            <param name="thrustIndex">Output:  the index of the thrust rating.</param>
            <returns>True if the thrust rating is found, false if not.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.DataDirectory.GetAircraftConfigIndex(System.String,System.Int32@)">
            <summary>
            Returns the index of the string described by "value".
            </summary>
            <param name="value"></param>
            <param name="aircraftConfigIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.DataDirectory.GetComboSelections(System.String)">
            <summary>
            Returns a list of strings that can be used as combo box items for selecting
            a device configuration.  This concatenates all thrust ratings and aircraft directories
            into one flat list.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.DataDirectory.GetComboSelections">
            <summary>
            Returns a list of strings that can be used as combo box items for selecting
            a device configuration.  This concatenates all thrust ratings and aircraft directories
            into one flat list.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.DataDirectory.SetupComboBox(DevComponents.DotNetBar.ComboBoxItem)">
            <summary>
            When passed a comboboxitem it clears any current selections and adds the available
            aircraft configurations/thrust rating combinations to it, ultimately selecting the 
            one that is currently selected.
            </summary>
            <param name="deviceConfigComboBox"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.DataDirectory.SetupLabel(DevComponents.DotNetBar.LabelItem)">
            <summary>
            When passed a labelitem it clears the current display and adds the available 
            aircraft configurations/thrust ratings combinations to it, ultimately selecting the 
            </summary>
            <param name="deviceConfigLabel"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.DataDirectory.SetSelectedConfig(System.String,System.String)">
            <summary>
            Attempts to set the aircraft configuration and thrust rating to the values provided.
            </summary>
            <param name="aircraftConfig"></param>
            <param name="thrustRating"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.DataDirectory.IsValidDeviceConfigurationPath(System.String)">
            <summary>
            Check to determine if the supplied filename is a valid DeviceConfiguration path.
            </summary>
            <param name="datapath"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.FsptDataDirectory.IsValidFsptDataPath(System.String)">
            <summary>
            Check to determine if the supplied filename is a valid FSPT data path.
            </summary>
            <param name="datapath"></param>
            <returns></returns>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.AxisSettings.Title">
            <summary>
            Contains the actual value specified in the GDF for the Title value
            to be displayed on the axis. (Not adjusted based on AxisType.)
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.AxisSettings.Max">
            <summary>
            Contains the actual value specified in the GDF for the Maximum value
            to be displayed on the axis. (Not adjusted based on AxisType.)
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.AxisSettings.Min">
            <summary>
            Contains the actual value specified in the GDF for the Minimum value
            to be displayed on the axis.  (Not adjusted based on AxisType.)
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.AxisSettings.NumberOfGrids">
            <summary>
            Gets/Sets the number of grids in the plots. The default number of grids are 20.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.AxisSettings.Offset">
            <summary>
            Gets/Sets the distance to translate the parameter on this axis when
            plotting.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.AxisSettings.DecimalPlaces">
            <summary>
            The number of decimal places that will be displayed in the labels
            for this axis.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.AxisSettings.LabelNumberFormat">
            <summary>
            A convenience property to get the desired format of the label values for 
            this axis.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.AxisSettings.GdfFieldString">
            <summary>
            Contains the string used to qualify the fields for the
            GetGdfFormattedSettings method.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.BaseItem">
            <summary>
            The base for all GDF parsed elements...
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.BaseItem.Comments">
            <summary>
            This String is for comments found and is intended
            for use with tooltips or some other display functionality.
            To clear it set it to "" or null.  To add a message just set
            it equal to the string you want to add.  DO NOT use += unless
            you want to duplicate the existing portions of the comments.
            </summary>
            MAY copied from ParseMessages instead of just inheriting due
            to field name changes and different uses...
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.DefaultableSettings.GetGdfFormattedSettings(System.String)">
            <summary>
            Provides a string suitable for putting in a GDF that provides all settings that have
            actually been customized.
            </summary>
            <param name="prefix">The prefix used in the lines (Typically "DEFAULT" or "PLOT#" or "TABLE")</param>
            <returns></returns>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.GDF.QtgId">
            <summary>
            The unique test reference
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.GDF.Path">
            <summary>
            Gets or sets the full filename (including path) for the GDF file.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.GDF.IdealDataFile">
            <summary>
            Loads the first IdealDataFile it finds in the pages
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.GDF.ImageOnlyPlots">
            <summary>
            Whether or not this test should only display the images generated from another source
            e.g. MatLab.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.GDF.DefaultResults">
            <summary>
            The default results that need to be displayed for the test
            generated from this GDF.  If AftMode.Off then it wasn't specified
            in the GDF.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.GDF.HostFileProcessingRequired">
            <summary>
            This test has it's results updated by the host (usually data acquired by ASTI)
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.GDF.Save(System.String)">
            <summary>
            This could be improved. Needs to write out tables, not all graph settings are written,
            consolidate graph axis properties instead of duplicating code.
            </summary>
            <param name="fullName"></param>
            <returns></returns>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.Graph.Page">
            <summary>
            The page this graph is on...
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.Page.Items">
            <summary>
            Provides references to tables and graphs in the
            correct order for the page.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.Page.GetTable(System.Int32)">
            <summary>
            Returns the table given it's number.  May create a new table if the table with 
            that number hasn't been defined.
            </summary>
            <param name="table_num">The number of the table.</param>
            <returns>A table with the supplied number.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.Page.GetGraph(System.Int32)">
            <summary>
            Returns the graph given it's number.  May create a new graph if the graph with 
            that number hasn't been defined.
            </summary>
            <param name="graph_num">The number of the graph.</param>
            <returns>A graph with the supplied number.</returns>
        </member>
        <member name="T:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.PageItem">
            <summary>
            Base class for elements that appear on Pages (e.g. Tables or Graphs)
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.PageItem.Page">
            <summary>
            The page that this item is on.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.PlotDataSetViewSettings">
            <summary>
            This consolodates fields used by GDF plots for different types of 
            data sets into one class so instead of having the same properties duplicated for X number of 
            data sets we can just have several of the same class.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.PlotDataSetViewSettings.ApplyDefaults(Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.PlotDataSetViewSettings)">
            <summary>
            Uses the passed PlotDataSetViewSettings for any properties that have not been
            customized.
            </summary>
            <param name="pageDefaults"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.PlotDataSetViewSettings.GetGdfFormattedSettings(System.String)">
            <summary>
            Provides a string suitable for putting in a GDF that provides all settings that have
            actually been customized.
            </summary>
            <param name="prefix">The prefix used in the lines (Typically "DEFAULT" or "PLOT#")</param>
            <returns></returns>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.ParsedIcParameter.QTGUnitsLabel">
            <summary>
            Units label for QTG IC table.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.ParsedIcParameter.DisplayName">
            <summary>
            Display name of IC parameter for QTG IC table.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.ParsedIcParameter.DisplayOrder">
            <summary>
            display order of IC parameter in QTG IC table
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.ParsedParameter.Value">
            <summary>
            The float representation of the ParsedVariableValue and the reference point for
            default tolerance calculations.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.ParsedParameter.ParsedVariableValue">
            <summary>
            The string parsed for this parameter.  (Usually the Ideal value)
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.ParseMessages">
            <summary>
            Inherit this class for anything you are parsing and want to keep track
            of messages/parsed line/etc.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.ParseMessages.ParsedLine">
            <summary>
            This is the line in the text file the Parameter was
            parsed from
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.ParseMessages.MessageString">
            <summary>
            This String is for parsing problems found and is intended
            for use with tooltips or some other display functionality.
            To clear it set it to "" or null.  To add a message just set
            it equal to the string you want to add.  DO NOT use += unless
            you want to duplicate the existing portions of the message.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.QtgDataDirectory.IsValidEqtgDataPath(System.String)">
            <summary>
            Check to determine if the supplied filename is a valid Eqtg data path.
            </summary>
            <param name="datapath"></param>
            <returns></returns>
        </member>
        <member name="T:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.StsId">
            <summary>
            Provides a single class that can be used as a QTG Test reference.  Use
            this instead of putting Chapter, TestNumber, TestId properties in 
            all the classes that are associated with a specific test. This supports
            the standard convention:
              [A|Q]##-##-##.[extension] as well as the  
            legacy convention:
              [any number of alpha characters, typically "aft"][2 digit chapter][2 digit test][optional 2 digit id]
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.StsId.GroupNum">
            <summary>
            Automatically determined when the GroupId is set, provides 
            only the numeric part of the number, or -1 if there isn't a 
            numeric part of the GroupId.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.StsId.IsLegacy">
            <summary>
            Did this ID get generated from a file
            with a legacy naming convention?
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.StsId.#ctor(System.String)">
            <summary>
            Constructor for the QtgId class
            </summary>
            <param name="filename">A filename that can be used to determine the 
            chapter, test, and id values.  (Standard is [A|Q]##-##-##.[extension].  
            Legacy was aft[2 digit chapter][2 digit test][optional 2 digit id])</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.StsId.#ctor">
            <summary>
            Constructor for the QtgId class that initializes all the members to "-1".
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.StsId.GroupAsNumber(System.String)">
            <summary>
            Strips off any prefix letters (such as D or Q) and returns the
            test number...
            </summary>
            <param name="chapter"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.StsId.Parse(System.String)">
            <summary>
            Given a string (even one that is a full path/filename) it attempts to retrieve
            the chapter, test and test ID from it.
            </summary>
            <param name="filename">A filename that can be used to determine the 
            chapter, test, and id values.  (Standard is [A|Q]##-##-##.[extension].  
            Legacy was aft[2 digit chapter][2 digit test][optional 2 digit id])</param>
            <returns>True if successful, false if not.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.StsId.InternalParse(System.String)">
            <summary>
            Given a string (even one that is a full path/filename) it attempts to retrieve
            the chapter, test and test ID from it.
            </summary>
            <param name="filename">A filename that can be used to determine the 
            chapter, test, and id values.  (Standard is [A|Q]##-##-##.[extension].  
            Legacy was aft[2 digit chapter][2 digit test][optional 2 digit id])</param>
            <returns>True if successful, false if not.</returns>
        </member>
        <member name="F:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.StsParse.m_SeparationChars">
            <summary>
            Use for splitting lines.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.StsParse.HandledErrors">
            <summary>
            A listing of errors that the parser has handled while performing
            I/O Operations.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.StsParse.#ctor">
            <summary>
            Empty. Does NOTHING.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.StsParse.#ctor(System.String)">
            <summary>
            Opens the file in Read Only mode.
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.StsParse.#ctor(System.String,System.IO.FileAccess)">
            <summary>
            Opens the file with specific access options.
            </summary>
            <param name="fileName"></param>
            <param name="accessOptions"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.StsParse.#ctor(System.String,System.IO.FileAccess,System.IO.FileMode)">
            <summary>
            Opens the dile with specific access options and specific mode.
            </summary>
            <param name="fileName"></param>
            <param name="accessOption"></param>
            <param name="accessMode"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.StsParse.FindLineWithTag(System.String)">
            <summary>
            Locates the first line with "tag" in it and keeps the line pointer positioned on 
            the line after this one, so subsequent calls to NextLineAvailable will return the lines
            following this one.  (Returns null if not found and resets the line pointer position back
            to where it was before searching.)
            </summary>
            <param name="tag">The text to find</param>
            <returns>The line that tag is found in or null.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.StsParse.FindLineWithTag(System.String,System.Boolean)">
            <summary>
            Locates the line with "tag" in it.
            </summary>
            <param name="tag">The string to search for in the line</param>
            <param name="resetPosition">Whether or not to reset the line pointer 
            position to the beginning of the file.</param>
            <returns>The first line of text that contains "tag".</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.StsParse.FindLineWithTag(System.String,System.Boolean,System.Int32@)">
            <summary>
            Locates the line with "tag" in it and outputs the lineNumber that it was located on.
            </summary>
            <param name="tag">The string to search for in the line</param>
            <param name="resetPosition">Whether or not to reset the line pointer 
            position to the beginning of the file.</param>
            <param name="lineNumber">The line number tag was found on or -1</param>
            <returns>The line of text found or null.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.StsParse.GetKeyValueStringPair(System.String,System.String@,System.String@)">
            <summary>
            Returns the key and value as strings so that you can have better record keeping
            for parsed integers/floats/whatever.
            </summary>
            <param name="inLine">The line of text</param>
            <param name="key">The field identifier</param>
            <param name="value">The value of the field as a string.</param>
            <returns>True if successful, false if not.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.StsParse.GetTitle(System.String)">
            <summary>
            Returns the title as a string. This function goes through a PDF document and looks for the "Title".
            The "Title" is set in the PDF properties. Open the PDF file in Adobe Acrobat, click File->Properites,
            add a Title in the "Title" text box, click OK, then click File->Save.
            </summary>
            <param name="inLine">The line of text</param>
            <returns>Title</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.StsParse.NextDisplayLineAvailable(System.String@)">
            <summary>
            Gets the next line of text from the file that is not a comment or is not
            empty.
            </summary>
            <param name="line">The line of text</param>
            <returns>True if line is valid false if there are no more lines in the file.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.StsParse.NextDisplayLineAvailable">
            <summary>
            Gets the next line of text from the file that is not a comment or is not
            empty.
            </summary>
            <returns>Null if there are no more lines left.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.StsParse.GetPlotSymbol(System.String,Csf.Imets.ToolCore.Common.Controls.StockPlotIcons,System.Boolean)">
            <summary>
            Given a line it returns the corresponding PlotSymbols enumerator.
            </summary>
            <param name="inLine">The line of text...usually "{somethihng} = [The plotsymbol value]</param>
            <param name="defaultValue">The default value to use in case an error occurs.</param>
            <param name="defaultOk">Whether to use the default value or not.</param>
            <returns>None if error and defaultOk is false, defaultValue if error and defaultOk is true, 
            and the specified value in inLineif successful</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.StsParse.IsCommented(System.String)">
            <summary>
            Returns true if the line is a comment line, false if not.
            </summary>
            <param name="line">The line to be tested</param>
            <returns>true if the line is a comment line, false if not</returns>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.Tdf.NumberOfSubtests">
            <summary>
            The number of subtests specified in this TDF.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.Tdf.TestFlightTime">
            <summary>
            The total Flight Time of the test
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.Tdf.CaptureDataSnapshot(System.Int32)">
            <summary>
            For the passed subtest index, indicates whether or not
            data should be captured as a snapshot (true return value) or with
            the flight time parameter changes (false return value).
            </summary>
            <param name="subtest">The index of the subtest starting at 0.</param>
            <returns>True for snapshot data capture, false for standard flight time parameter changes.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.Tdf.LoadIcParameters">
            <summary>
            Loads the IC Parameters as a key value pair and puts them in the IcParameters 
            dictionary
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.Tdf.Load">
            <summary>
            Loads TDF data from the specified file.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.Tdf.Save">
            <summary>
            Not working...
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.Tex.DefField.Name">
            <summary>
            The Name (Tex variable name) for the field.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.Tex.DefField.Value">
            <summary>
            The Value of the field
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.Tex.DefField.RecursiveDefinition">
            <summary>
            When true indicates that the value of this field is
            dependent upon other fields.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.Tex.DefField.TexDefinition">
            <summary>
            The actual string that would be used in a line in a tex file to set this field.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.Tex.DefField.GetAbsoluteValue(System.Collections.Generic.Dictionary{System.String,Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.Tex.DefField})">
            <summary>
            Returns the complete value of the field if it is recursive
            </summary>
            <param name="fieldDictionary"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.Tex.DefField.Parse(System.String,Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.Tex.TexParse)">
            <summary>
            Attempts to parse text into a new instance of a DefField
            </summary>
            <param name="line">The line to parse</param>
            <param name="parser">The parser that line was pulled from</param>
            <returns>A new DefField object or throws an exception so watch out!</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.Tex.SettingsFile.#ctor(System.String)">
            <summary>
            Generates a new SettingsFile object and initializes it
            by loading the file referenced by filename.
            </summary>
            <param name="filename">The file to load</param>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.Tex.SettingsFile.DefFields">
            <summary>
            A dictionary containing all the DefFields parsed
            from Filename.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.Tex.SettingsFile.ThrowExceptionsForMissingFields">
            <summary>
            If a lookup on a field fails, whether or not to throw
            an exception or just return "INVALID";
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.Tex.SettingsFile.Load">
            <summary>
            Loads the DefFields that are present in the given
            Filename property.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.Tex.SettingsFile.GetDefField(System.String)">
            <summary>
            Attempts to get the DefField corresponding with the 
            fieldTexName.  If ThrowExceptions setting is set then
            a NullReferenceException may be thrown if the DefField doesn't exist.
            </summary>
            <param name="fieldTexName"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.Tex.SettingsFile.MergeDefFields(System.Collections.Generic.Dictionary{System.String,Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.Tex.DefField})">
            <summary>
            Will take the fields in the passed dictionary and replace existing fields or
            add them to the DefFields list.
            </summary>
            <param name="fieldsToAdd"></param>
        </member>
        <member name="T:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.Tex.RegulatoryAuthority">
            <summary>
            Enumeration provides the different Regulatory Authorities supported by
            the QTG backend.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.Tex.AdvisoryCircular">
            <summary>
            Enumeration provides possible AdvisoryCirculars
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.Tex.AdvisoryCircular.Part60">
            <summary>
            FAA's current AdvCir (Default)
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.Tex.AdvisoryCircular.I9625">
            <summary>
            ICAO's current AdvCir (9625 actually - that's an invalid enum though)
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.Tex.AdvisoryCircular.FSTDA">
            <summary>
            JAA's current advisory circular
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.Tex.AdvisoryCircular.CCAR60">
            <summary>
            CAAC's current advisory circular
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.Tex.AdvisoryCircular.AC12040C">
            <summary>
            Obsololete
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.Tex.SimDetails">
            <summary>
            Handles loading data from a selected QTG's sim_details.tex file
            and making them available to whoever needs them.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.Tex.SimDetails.AdvisoryCircularDirectoryToEnum(System.String)">
            <summary>
            Given an advisory circular directory name it returns the enumeration associated
            with it.
            </summary>
            <param name="value">A string that only contains the Advisory Circular directory (e.g. "Part60")</param>
            <returns>The advisory Circular directory associated with the value, or AC12040C</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.Tex.SimDetails.#ctor(System.String)">
            <summary>
            Generates a new SimDetails object and loads the contents
            of the passed filename.
            </summary>
            <param name="filename">The file to load.</param>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.Tex.SimDetails.AdvisoryCircularDirectory">
            <summary>
            This is only the directory name for the AdvisoryCircular selected for the given
            sim_details.tex file.  It must be combined with the FSTD directory and the 
            Regulatory Authority directory in order to supply a valid directory.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.Tex.SimDetails.Load">
            <summary>
            Loads the file and sets up the enumerated fields.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.Tex.SimDetails.BeginEdit">
            <summary>
            Allows events to be cached until EndEdit() is called.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.Tex.SimDetails.EndEdit">
            <summary>
            Fires any cached events after BeginEdit() was called.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.Tex.TexParse">
            <summary>
            Enhances standard StsParse with latex specific methods.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.Tex.TexParse.IsCommented(System.String)">
            <summary>
            Tex files are commented with %...
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="T:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.Grade">
            <summary>
            The enumeration describing the possible grades for a test graph or table.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.ToleranceParameter.ToleranceValue">
            <summary>
            The actual active tolerance value for the default reference point (Value)
            Should not be used for calculating pass or fail grading unless also accounting
            for ToleranceType.  (Use ToleranceBand property instead.)
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.ToleranceParameter.PlusMinusToleranceValue">
            <summary>
            return a string value of actual active tolerance with Plus-Minus-Sign.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.ToleranceParameter.ToleranceBand">
            <summary>
            The +- value around the reference point that the
            actual simulator value has to be within in order to pass.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.ToleranceParameter.ToleranceRange">
            <summary>
            The time (in seconds) used for determining the box or slice in which a 
            parameter's maximum and minimum acceptable value (ToleranceBand) can be calculated.
            E.g. if the range is 0.01 then points 0.01 to the left and points 0.01 to the right
            of the reference point are usable for the tolerance band determination.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.ToleranceParameter.SetToleranceValue(System.Single,Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.ToleranceTypes)">
            <summary>
            Sets the tolerance value appropriate to the type provided.  NOTE: Both and None do 
            not set any values.  However, if the type is already set then we'll switch it to
            both...Also, value must be greater than zero for this to do anything.
            </summary>
            <param name="value">The value that is to be used for a tolerance.</param>
            <param name="type">The type of tolerance to be set, either ABS or PCT.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.ToleranceParameter.GetGrade(System.Single)">
            <summary>
            Gets the grade for the parameter (Pass or Fail) based on the value
            passed in.
            </summary>
            <param name="value">The value of the parameter at the point in question.</param>
            <returns>A Grade...</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.ToleranceParameter.GetGrade(System.Single,System.Single)">
            <summary>
            Gets the grade for the parameter (Pass or Fail) based on the reference and value
            passed in.
            </summary>
            <param name="reference">The reference point (from Ideal data)</param>
            <param name="value">The value of the parameter at the point being evaluated</param>
            <returns>A Grade...</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.ToleranceParameter.GetGrade(System.Collections.Generic.List{System.Single},System.Single)">
            <summary>
            Gets the grade for the parameter (Pass or Fail) based on a "boxed" tolerance
            calculation.
            </summary>
            <param name="reference">The list of reference points to consider.</param>
            <param name="value">The value of the parameter that is being evaluated.</param>
            <returns>A grade, pass or fail.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.ToleranceParameter.GetToleranceValue(System.Single)">
            <summary>
            Convenience routine to allow tolerance to be calculated in one place.
            </summary>
            <param name="reference"></param>
            <returns></returns>
        </member>
        <member name="T:Csf.Imets.ToolCore.AutoFidelityTesting.CommentDataTableColumns">
            <summary>
            An enum that describes the columns available in the CommentDataTable
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.AutoFidelityTesting.CommentDataTableColumns.Id">
            <summary>
            A unique number providing the ordering 
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.AutoFidelityTesting.CommentDataTableColumns.User">
            <summary>
            The user that entered the comment (typically username)
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.AutoFidelityTesting.CommentDataTableColumns.Priority">
            <summary>
            See the CommentPriority enum
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.AutoFidelityTesting.CommentDataTableColumns.Timestamp">
            <summary>
            When the comment was entered.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.AutoFidelityTesting.CommentDataTableColumns.Reference">
            <summary>
            The tex file or QTG ID letter/number e.g. 1a1 or appendix_a
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.AutoFidelityTesting.CommentDataTableColumns.Text">
            <summary>
            The text of the comment.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.AutoFidelityTesting.CommentPriority">
            <summary>
            The available priorities for the CommentDataTable's Priority column
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.CommentDataTable.FileName">
            <summary>
            The file that this CommentDataTable reads from and saves to.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.CommentDataTable.InitializeCommentDataTable">
            <summary>
            The columns all get set up in here.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.CommentDataTable.CommentDataTableTableNewRow(System.Object,System.Data.DataTableNewRowEventArgs)">
            <summary>
            Automagically saves as comments are added.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.CommentDataTable.CommentDataTableRowChanged(System.Object,System.Data.DataRowChangeEventArgs)">
            <summary>
            Automagically saves as comments are edited.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.ICommentable.CommentReference">
            <summary>
            This is used for the reference column for a generated comment for the 
            given control.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.AutoFidelityTesting.IcParameter">
            <summary>
            IC Parameters are specified in several different places, TDF, a default listing, 
            the Validation or Ideal data, and results files.  Right now this IcParameter list
            only handles one result at a time.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.IcParameter.Parameter">
            <summary>
            The active parameter for this IC Parameter.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.IcParameter.RequestedValue">
            <summary>
            The value 
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.IcParameter.TdfParameter">
            <summary>
            The IC parameter parsed from the TDF.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.IcParameter.IdealValue">
            <summary>
            The value parsed from the BinData or BDF.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.IcParameter.IdealParameter">
            <summary>
            The parameter parsed from the BinData or BDF.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.IcParameter.TestedValue">
            <summary>
            The value that was actually captured when the test was run.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.IcParameter.MasterValue">
            <summary>
            The value from the Master QTG (MeQTG) result
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.IcParameter.MasterParameter">
            <summary>
            The parameter from the Master QTG (MeQTG) result
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.IcParameter.IsQtgDefault">
            <summary>
            Whether or not this parameter is on the QTG default list.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.IcParameter.GetSources">
            <summary>
            Returns a string that describes all file sources this IcParameter was generated
            from.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Csf.Imets.ToolCore.AutoFidelityTesting.IcParameterSet.m_IcParameters">
            <summary>
            This is a mapping of Host Variable names to their Ic Parameter Name
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.IcParameterSet.ParameterList">
            <summary>
            Used by DataGridViews to bind to this data source.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.IcParameterSet.DefaultIcListFile">
            <summary>
            The full path of the file that contains the default list of IC parameters
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.IcParameterSet.ParameterSet">
            <summary>
            Set this property only...
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.IcParameterSet.MergeResults(System.Collections.Generic.Dictionary{System.String,Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.ParsedIcParameter})">
            <summary>
            Merges the parsed parameters from a result set into the "Default" results for
            this IcParameterSet.
            </summary>
            <param name="resultParams">The dictionary of parsed ic parameters from a result file.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.IcParameterSet.MergeMasterResults(System.Collections.Generic.Dictionary{System.String,Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.ParsedIcParameter})">
            <summary>
            Merges the parsed parameters from a result set into the "Master" or MeQTG results for
            this IcParameterSet.
            </summary>
            <param name="masterParams">The dictionary of parsed ic parameters from a master result file.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.IcParameterSet.Load(System.Collections.Generic.Dictionary{System.String,Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.ParsedIcParameter},System.Collections.Generic.Dictionary{System.String,Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.ParsedIcParameter},System.Collections.Generic.Dictionary{System.String,Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.ParsedIcParameter},Csf.Imets.ToolCore.AutoFidelityTesting.ParameterSet)">
            <summary>
            Merges the parsed IC Parameters from the default list, the TDF and BinData into a list of 
            IcParameter objects.
            </summary>
            <param name="tdfParams">The sorted list of IC Parameters parsed from the TDF file.</param>
            <param name="binDataParams">The sorted list of IC Parameters 
            parsed from the BinData (validation) file.</param>
            <param name="paramSet">The list of available STS Parameters.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.IcParameterSet.AddResultParameter(Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.ParsedIcParameter)">
            <summary>
            Replaces the current result parameter with the supplied result parameter.  For use when running
            a test and capturing values.
            </summary>
            <param name="resultParam">The parameter to replace the current result parameter with.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.IcParameterSet.AddParameter(System.String,Csf.Imets.ToolCore.AutoFidelityTesting.IcParameter)">
            <summary>
            Utility method to ensure the m_IcParameters list and m_SortedIcParameters sorted list stay in sync.
            </summary>
            <param name="key">The string key for the parameter (typically it's name)</param>
            <param name="icParameter">The actual parameter.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.IcParameterSet.LoadDefaultQtgIcParameters">
            <summary>
            Attempts to load the default QTG IC parameters from the file specified by DefaultIcListFile.
            This fails miserably unless you specify that file either through the constructor or through
            the property.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.IcParameterSet.GetOrderedQTGICTable">
            <summary>
            Get the QTG IC table parameter list ordered by displayOrder.
            </summary>
            <returns>filtered and ordered list</returns>
        </member>
        <member name="T:Csf.Imets.ToolCore.AutoFidelityTesting.IEnvironmentInfo">
            <summary>
            Interface for possible implementations of environmentinfo (generated so eQTG's environment info did not need
            to be moved into this namespace.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.AutoFidelityTesting.ManufacturerParameter">
            <summary>
            This class is supposed to provide a reference to Manufacturer parameter information. 
            Not currently used for anything.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.NumberList.#ctor">
            <summary>
            This is only for use when the primary NumberList constructor
            fails to load the file.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.AutoFidelityTesting.OpenXML.QTGMenuOptionsUpdateType">
            <summary>
            QTG Menu Options Type
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.AutoFidelityTesting.OpenXML.QTGAvailabilityStatusType">
            <summary>
            QTG Availability Status Type
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Parameter.Index">
            <summary>
            The index of this parameter in the bin data parameter list...
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Parameter.Value">
            <summary>
            The value of this parameter from the VDN assuming there is a VDN variable
            active for this parameter.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.AutoFidelityTesting.ParameterSet">
            <summary>
            
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.AutoFidelityTesting.ParameterSet.m_Parameters">
            <summary>
            Contains the list of ACTIVE parameters for the given Test or whatever
            object is using a ParameterSet
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.ParameterSet.FlightTime">
            <summary>
            An easily accessible reference to the TIME parameter.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.ParameterSet.GetParameter(System.String)">
            <summary>
            This method attempts to get a parameter from the full host parameter map.
            </summary>
            <param name="sts_name">The name of the parameter (STS NAME)</param>
            <returns>Null if nothing was found or the parameter that was found.</returns>
        </member>
        <member name="T:Csf.Imets.ToolCore.AutoFidelityTesting.QtgRoadmapColumns">
            <summary>
            This maps to the exported column names in QTG_test_list_*.xml
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.AutoFidelityTesting.QtgId">
            <summary>
            The full reference for a test including the test's designations for
            the advisory circulars and CSF test name.  Inherits StsId.  Normally
            generated from the QTG_test_list_*.xml file...
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.QtgId.Initialized">
            <summary>
            Whether or not this QtgId has been initialized
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.QtgId.CAAC">
            <summary>
            The test name for the CAAC/CCAR60 advisory circular.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.QtgId.Chapter">
            <summary>
            The Chapter designation given in the QTG_master xml list
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.QtgId.SubChapter">
            <summary>
            The Group designation given in the QTG_master xml list
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.QtgId.Status">
            <summary>
            Corresponds with the CURPROJ column in the master XML data.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.QtgId.ActiveCircularTest">
            <summary>
            Returns the currently active circular's test name for the
            referenced QtgId.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.QtgId.ValidForActiveCircular">
            <summary>
            If the current test is applicable to the active advisory circular
            this property is true.  Otherwise returns false.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.QtgId.Parse(System.Data.DataRow)">
            <summary>
            Factory method to create a QtgId from a data row in a table.
            </summary>
            <param name="row">A row from the table created by reading a master QTG xml document.</param>
            <returns>A new QtgId that corresponds to the data row or null if there was an error.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.QtgManager.LookupId(Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.StsId,System.Boolean)">
            <summary>
            Looks up the provided stsId in the Master QTG Test Data Table and returns a valid QtgId.
            </summary>
            <param name="stsId">The StsId to try and find in the table.</param>
            <param name="filterStatus">If false, only matches StsId, if true will filter out any tests that have an "N/A" status.</param>
            <returns>The QtgId for the given StsId or null if nothing found.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.QtgManager.ClearDataTables">
            <summary>
            Cleans up the remnant data tables so we don't leak anything.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.ResultsFile.PlotDataSetName">
            <summary>
            The string that should be used in a legend to describe
            the data in this file.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.ResultsFile.IsIdeal">
            <summary>
            Whether or not this result file describes an Ideal file (i.e. custom made
            validation data.)
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.ResultsFile.GetParameterName(System.Int32)">
            <summary>
            Returns the name of the parameter at a given index.
            </summary>
            <param name="index">The index of the parameter to get the name for</param>
            <returns>The name if a valid index is provided, else ""</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.ResultsFile.Save">
            <summary>
            Make sure IcParameters member is valid before calling
            this routine.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.ResultsFile.Save(Csf.Imets.ToolCore.AutoFidelityTesting.IcParameterSet)">
            <summary>
            Sets the IcParameters property and saves.
            </summary>
            <param name="icParamSet"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.ResultsFile.Save(System.Boolean,Csf.Imets.ToolCore.AutoFidelityTesting.IcParameterSet,System.String)">
            <summary>
            Sets the IcParameters property and saves either as a default result set
            or as "saved off" result set (based on value of isDefault.
            </summary>
            <param name="isDefault"></param>
            <param name="icParamSet"></param>
            <returns>String value of the saved file</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.ResultsFile.LoadTestResultsIcParameters">
            <summary>
            Loads the IC parameters as stored for a result file.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.ResultsFile.SetIcParameterValues(Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.AftFile,System.String)">
            <summary>
            Sets values for the Initial Conditions parameters found in the IdealValues file
            </summary>
            <param name="testDefinition">A reference for the test definition object used for its TDF IcParameterSet.</param>
            <param name="flightTime">A string representation of the flight time value that corresponds with 
            the initial conditions index.</param>
        </member>
        <member name="T:Csf.Imets.ToolCore.AutoFidelityTesting.Scripting.LatexGenerator">
            <summary>
            Temporary till Dave gets his act together in FY2008
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Scripting.LatexGenerator.ReplaceField(System.String,System.String,System.String)">
            <summary>
            Replaces a perl field in the text of a configuration file with the value given.
            </summary>
            <param name="file">The text of a file that needs to be searched and replaced.</param>
            <param name="fieldText">The name of the field to be replaced.</param>
            <param name="value">The value the field should be set to.</param>
            <returns>The updated text of the file</returns>
        </member>
        <member name="T:Csf.Imets.ToolCore.AutoFidelityTesting.Scripting.PdfGenerator">
            <summary>
            For use generating PDF files from template files using the pdflatex 
            executable.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.AutoFidelityTesting.Scripting.PdfGenerator.m_CreatorText">
            <summary>
            This will need to change if whoever generates teh template files decides to
            make the nameing convention different.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.AutoFidelityTesting.Scripting.PdfGenerator.m_DefaultTestReference">
            <summary>
            This will need to change if whoever generates the template files decides to
            make the standard default test something else.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Scripting.PdfGenerator.#ctor(System.String,System.String)">
            <summary>
            Creates a new PdfGenerator for standard PDF generating templates.
            </summary>
            <param name="templateFile">The fully rooted path of the template file that needs to be run, or just a filename. 
            If the path isn't fully rooted then any relative pathing will be stripped off and the file will be expected to
            reside in EnvironmentInfo.Instance.GuiTemplatePath</param>
            <param name="testReference">The reference of the test the PDF is to be generated for. e.g. 2d1a1</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Scripting.PdfGenerator.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Creates a new PdfGenerator that has a custom Basename and NeedsParsing
            </summary>
            <param name="templateFile">The fully rooted path of the template file that needs to be run, or just a filename. 
            If the path isn't fully rooted then any relative pathing will be stripped off and the file will be expected to
            reside in EnvironmentInfo.Instance.GuiTemplatePath</param>
            <param name="basename">The custom item name that the default name in the template 
            file needs to be changed to.</param>
            <param name="needsparsing">Sets NeedsParsing property (although overwritten by the other
            properties.)</param>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Scripting.PdfGenerator.TestReference">
            <summary>
            This is the reference that defines the actual test that is being generated.
            In most cases it is the Advisory Circular identifier for a test.  In other
            cases it might be an appendix letter (e.g. 'A').  Should be set to "" for
            latex templates for Introduction pdfs or other custom items.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Scripting.PdfGenerator.DefaultTestReference">
            <summary>
            Gets/Sets the string used by the template that needs to be replaced.
            (e.g. the template by default has the string "testtol_1a1" but if we're
            generating the PDF for test 2a1d4 we need to replace the 1a1 with 2a1d4.
            This really only needs to be used for Appendix generation...set it to A.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Scripting.PdfGenerator.Executable">
            <summary>
            The executable used to generate the PDF.  NOTE:  this class
            is designed specifically for pdflatex.  This is provided as
            a possible enhancement capability in the future.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Scripting.PdfGenerator.TemplateFile">
            <summary>
            The tex template file that is to be used to generate
            the PDF output.  If the path is not rooted, it gets strips off and uses the
            environment info to locate it.  Otherwise the rooted path is maintained internally
            and may be viewed from the TemplatePath property.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Scripting.PdfGenerator.TemplatePath">
            <summary>
            Gets the path where the Template file is expected to reside.  Defaults to
            EnvironmentInfo.Instance.GuiTemplatePath.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Scripting.PdfGenerator.NeedsParsing">
            <summary>
            Whether or not this script requires the template to be parsed
            in order for output to appear properly.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Scripting.PdfGenerator.JobName">
            <summary>
            Gets the JobName for the command line to be run.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Scripting.PdfGenerator.Basename">
            <summary>
            Gets the either the portion of the template file name that is needed for other operations or
            Gets/Sets the custom defined string that needs to be replaced in the template file for the right
            output to get generated.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Scripting.PdfGenerator.OutputFile">
            <summary>
            The full path of the PDF file generated by this script.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Scripting.PdfGenerator.SourceFile">
            <summary>
            Gets/Sets the File that is the primary source for generating this PDF.  (Usually a tex file, fully pathed).
            If unset for items that use a custom Basename there will be problems when trying to generate the pdf.
            (If unset for the standard then everytime Run() is called it will generate a new PDF instead of just
            regenerating it when the source file is newer than the output file.)
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Scripting.PdfGenerator.OutputDirectory">
            <summary>
            Gets/Sets the directory the output file is placed. 
            Defaults to EnvironmentInfo's GuiTempFilesPath.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Scripting.PdfGenerator.StringToReplace">
            <summary>
            The string that appears in the template file that needs to be replaced.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Scripting.PdfGenerator.ReplacementString">
            <summary>
            The string that needs to replace the StringToReplace string
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Scripting.PdfGenerator.ErrorText">
            <summary>
            The description of the error.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Scripting.PdfGenerator.OutputError">
            <summary>
            If true there was an error on the last run.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Scripting.PdfGenerator.InteractionMode">
            <summary>
            Defaults to "nonstopmode" but other options include batchmode...
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Scripting.PdfGenerator.AlwaysGenerate">
            <summary>
            Gets/Sets whether or not this generator should always generate
            a PDF when Run() is called or whether it should only generate if
            the template/master file is newer than the PDF file.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Scripting.PdfGenerator.LongWait">
            <summary>
            If TRUE then the script will wait for 30 minutes for the
            script to complete generation.  Otherwise it will only wait about 50 seconds.  (Defaults to false)
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Scripting.PdfGenerator.Run">
            <summary>
            Attempts to generate the PDF file specified by the TestReference, TemplateFile, and environment
            parameters.  User code should handle exceptions thrown by this method:
            
               ArgumentException - when any of the required parameters haven't been set
               IO exceptions - when file processing fails
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Scripting.PdfGenerator.Run(System.String)">
            <summary>
            Attempts to generate the PDF file specified by the TestReference, TemplateFile, and environment
            parameters.  User code should handle exceptions thrown by this method:
            
               ArgumentException - when any of the required parameters haven't been set
               IO exceptions - when file processing fails
            </summary>
            <param name="testReference">The test reference (usually a QtgId.ActiveCirularTest value).  Also sets 
            TestReference property to the passed test reference.</param>
        </member>
        <member name="T:Csf.Imets.ToolCore.AutoFidelityTesting.Test">
            <summary>
            Represents a test to run for Auto Fidelity
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.AutoFidelityTesting.Test.DefaultIcListFileName">
            <summary>
            The default name for an ic_list.
            </summary>
        </member>
        <member name="E:Csf.Imets.ToolCore.AutoFidelityTesting.Test.ActiveResultsChanged">
            <summary>
            This event occurs when the results that are being viewed (ActiveResultsDataSet) have changed.
            </summary>
        </member>
        <member name="E:Csf.Imets.ToolCore.AutoFidelityTesting.Test.ResultsChanged">
            <summary>
            This gets fired whenever a result set is added to the ResultsDataSet list.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.AutoFidelityTesting.Test.m_ManualRecordingEnabled">
            <summary>
            The buffered variable used to provide manual recording status to 
            the test.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.AutoFidelityTesting.Test.m_CaptureData">
            <summary>
            The buffered variable used to signal FSPT to capture the 
            frame when true.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.AftError">
            <summary>
            Gets a flag representing if there is an error with the Aft system.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.TestLoadProgress">
            <summary>
            Gets the current progrees of loading the test.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.TimeStsName">
            <summary>
            Gets or sets the TimeStsName.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.TdfDirectory">
            <summary>
            The directory where the TDF files can be located.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.ConfPath">
            <summary>
            Gets or sets the Path to the configuration directory...typically three levels up from the test one
            e.g. ../../../conf.  It needs to be a property though so that relative paths aren't
            needed.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.Name">
            <summary>
            Gets the name of the test.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.StsId">
            <summary>
            The id of the test.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.QtgId">
            <summary>
            Gets the current Id of the Qtg.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.HostFileProcessingRequired">
            <summary>
            Gets whether or not this test requires the Executive to merge Asti results into FSPT's captured
            results after the test has completed.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.WaitingForHostFileTransfer">
            <summary>
            Gets or sets whether the test is still waiting on the exec's post processing of results when the test run has completed.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.FileTransferComplete">
            <summary>
            Gets whether the host completed transferring and modying the result files.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.ManualRecordingEnabled">
            <summary>
            Gets the manual recording flag value.  If a test is active
            then it returns the buffered value otherwise it returns
            the unbuffered value.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.Category">
            <summary>
            Gets or sets the category the test is stored under.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.Simulator">
            <summary>
            Gets or sets the simulator to run the test against.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.ExecutionTime">
            <summary>
            Gets the time the Test was executed at.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.GraphDataSet">
            <summary>
            Gets the list of TestGraphData.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.DefaultMode">
            <summary>
            Gets the default mode for the test.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.Mode">
            <summary>
            Gets the current simulator's AftMode or Off
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.DisplayMode">
            <summary>
            Gets or sets the display mode.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.State">
            <summary>
            Gets the simulator's current AftTestState or Idle.
            This parameter is buffered.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.StateLabelText">
            <summary>
            Gets a string that represents the Aft State.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.AftStatus">
            <summary>
            Gets the simulator's current AftStatus or Idle.
            This parameter is buffered.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.TestRunning">
            <summary>
            Gets a flag representing if the test is currently in a running state.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.TestLoaded">
            <summary>
            Gets whether the test is loaded or not.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.ValidationDataFile">
            <summary>
            Gets the path to data file.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.ValidationDataDirectory">
            <summary>
            Gets or sets the validation data directory
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.HasValidationData">
            <summary>
            Gets whether or not the test has validation data.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.TestParameters">
            <summary>
            Gets or sets the set of test parameters.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.Gdf">
            <summary>
            Gets the Grafic definition.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.Path">
            <summary>
            Gets the path to the graphic definition.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.ToolTip">
            <summary>
            Gets or sets the ToolTip for the Test.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.HasLiveResults">
            <summary>
            Gets whether or not the test has live results.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.HasDefaultResults">
            <summary>
            Gets whether or not the test has default results.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.UnsavedDefaultResults">
            <summary>
            Gets whether or not the test has unsaved results.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.ValidationDataSet">
            <summary>
            Gets the default validation data set as determined from the GDF.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.ValidationData">
            <summary>
            Gest the Validation Data for the test.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.DefaultValidationData">
            <summary>
            Gest the default validation data.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.DefaultCustomIdealDataSet">
            <summary>
            Gets the ideal data set.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.LiveDataSet">
            <summary>
            Gets or sets the live data set for the Test. 
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.ActiveDefaultDataSet">
            <summary>
            Gets the default data set for the Test based on the AftMode.
            If the AftMode for this test is Auto or OFF this returns the DefaultAutoDataSet
            otherwise this returns the DefaulManualDataSet      
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.DefaultAutoDataSet">
            <summary>
            Gets or sets the Default Auto Data Set.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.DefaultManualDataSet">
            <summary>
            Gets or sets the DefaultManualDataSet.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.ActiveMasterDataSet">
            <summary>
            Gets the active master data set based on the current aft mode.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.MasterManualResultsDataSet">
            <summary>
            Gets or sets the master manual results data set.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.MasterAutoResultsDataSet">
            <summary>
            Gets or sets the master auto results data set.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.ResultsDataSets">
            <summary>
            Gest the list of data sets the represent the results of the test.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.ResultsDirectory">
            <summary>
            Gets or sets the directory to store the results.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.CustomIdealDirectory">
            <summary>
            Gets or sets the path to the directory that contains all user generated
            "ideal" files 
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.ManualRecording">
            <summary>
            Get or sets whether or not manual recording is enabled.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.Configuration">
            <summary>
            Gets or sets the configuration.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.ActiveResults">
            <summary>
            Gets the active results for the test.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.Disposed">
            <summary>
            Gets whether or not the test has been disposed.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.IcParameterSet">
            <summary>
            Gets the current IcParameter Set for the test.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.FinalStatus">
            <summary>
            Gets or sets the final status when the test has been run.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.FinalStatusText">
            <summary>
            Gets or sets a string describing the final status.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.TestAnalysisProperties">
            <summary>
            Gets or sets the TestAnalysisProperties
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.TestAnalysisType">
            <summary>
            Gets or sets the Analysis Type.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.IsDevelopmentTest">
            <summary>
            Gets whether or not this test is used for development.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.HasResults">
            <summary>
            Gets whether the test has results or not.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Csf.Imets.ToolCore.AutoFidelityTesting.Test"/>
            </summary>
            <param name="testFile">The path to the test file.</param>
            <param name="tdfDirectory">The directory to the test data files.</param>
            <param name="confPath">The configuration path.</param>
            <param name="timeParameterName">The name of the time parameter.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.GetParameter(System.String)">
            <summary>
            Gets the parameter based on the given name.
            </summary>
            <param name="stsName">The name of the parameter.</param>
            <returns>The parameter if it exists or null.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.Load">
            <summary>
            Loads the test.  If this test has already been loaded then the method unloads it
            (Unload) and then performs the load.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.LoadResult(Csf.Imets.ToolCore.AutoFidelityTesting.ResultsFile)">
            <summary>
            Loads the results file.
            </summary>
            <param name="resultsFile">The file to load.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.SaveResults(System.Boolean)">
            <summary>
            Saves the results file.
            </summary>
            <param name="useBackgroundThread">If this should be completed using a background worker.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.StartTest">
            <summary>
            Starts the test by initializing the queued netvdnclient and 
            capture dataset(s) then sends the start test on the queued netvdnclient.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.Unload">
            <summary>
            Unloads the test.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.UnloadResult(Csf.Imets.ToolCore.AutoFidelityTesting.FsptResultsPlotDataSet)">
            <summary>
            Unloads all the results.
            </summary>
            <param name="resultsDataSet">The result set to unload.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.AddResultsFile(Csf.Imets.ToolCore.AutoFidelityTesting.ResultsFile)">
            <summary>
            Adds the results file to the list of results. Also assigns a color to the result.
            </summary>
            <param name="resultFile">The file to add.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.PrintDebugData(System.String)">
            <summary>
            Utility method used to print out tab delimited data for use in triaging interface
            issues with AFT.
            </summary>
            <param name="caller">String name of the method that calls this method.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.AttachTestGraphDataToBinaryData(Csf.Imets.ToolCore.AutoFidelityTesting.TestGraphData,System.String)">
            <summary>
            Attach test graph data to binary data.
            </summary>
            <param name="graphData">The test data.</param>
            <param name="idealDataFile">The path to the binary data.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.AttachTestGraphDataToCustomIdealData(Csf.Imets.ToolCore.AutoFidelityTesting.TestGraphData,System.String)">
            <summary>
            Attach TestGraphData to Custom Ideal Data.
            </summary>
            <param name="graphData">The test data.</param>
            <param name="idealDataFile">The ideal data.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.AttachTestGraphDataToValidationData(Csf.Imets.ToolCore.AutoFidelityTesting.TestGraphData,System.String)">
            <summary>
            Attaches a TestGraphData to the validation data specified by idealDataFile, regardless of 
            whether or not the idealDataFile specified is a binary or custom validation file.
            </summary>
            <param name="graphData"></param>
            <param name="idealDataFile"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.CaptureFrameData">
            <summary>
            <seealso cref="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.CaptureFrameData"/>
            Defaults captureAlways to false.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.CaptureFrameData(System.Boolean)">
            <summary>
            Captures the needed data from the current buffered VDN interface.
            </summary>
            <param name="captureAlways">When true forces a data capture regardless of 
            the state of AFT.  Otherwise AFT has to be in Running in order to 
            capture anything.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.CaptureInitialConditions">
            <summary>
            Captures the initial conditions data.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.ClearValidationData">
            <summary>
            Ensures all validation data is properly disposed of, including unregistering event handlers.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.OnConfigurationPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Occurs when a configuration property changes.
            </summary>
            <param name="sender">N/A</param>
            <param name="e">N/A</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.OnDefaultValidationDataSetVisibleChanged(System.Object,System.EventArgs)">
            <summary>
            Occurs when the default validation data set visibility is changed.      
            </summary>
            <param name="sender">N/A</param>
            <param name="e">N/A</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.FreeVdnBuffer">
            <summary>
            Clears and disposes of the Vdn Buffer.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.InitializeLiveResultsFile">
            <summary>
            Initializes the live results file.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.InitializeTestWorkers">
            <summary>
            Initializes background workers for loading and saving the tests.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.InitializeVdnBuffer">
            <summary>
            Creates a new queued netvdnclient to capture test data if the netvdnclient is not
            already created.  Attaches to the "NewFrameData" event.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.LoadBinaryDataFile(System.String)">
            <summary>
            Attempts to load the binary file specified by filename first by looking for the file in
            the standard validation data directory and then if filename is rooted by looking for the file
            using the path specified in filename.
            </summary>
            <param name="filename">The filename to load</param>
            <returns>True if successful false if not.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.LoadCustomIdealDataFile(System.String)">
            <summary>
            Attempts to load the custom ideal file specified by filename first by looking for the file in
            the standard ideal data directory and then if filename is rooted by looking for the file
            using the path specified in filename.
            </summary>
            <param name="filename">The path to the file to load.</param>
            <returns>True if it was loaded succesfully.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.AftTestStateChanged(System.Object,System.EventArgs)">
            <summary>
            This method is a backup, in case AFT was started some other way
            </summary>
            <param name="sender">N/A</param>
            <param name="e">N/A</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.LoadIcParameters">
            <summary>
            Needs to be done after the Tdf and BinData files are loaded (m_TestDefinition and m_ValidationData 
            respectively) and really should be done after the validation data is loaded!
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.LoadPages">
            <summary>
            Loads all the pages of the test.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.AttachResultsToStandardProperties(Csf.Imets.ToolCore.AutoFidelityTesting.FsptResultsPlotDataSet)">
            <summary>
            Attaches results to stadard properties.
            </summary>
            <param name="resultDataSet">The data set to attach.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.LoadStandardResultsData">
            <summary>
            Loads the standard results data.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.LoadTdf">
            <summary>
            Loads the test definition.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.LoadValidationData">
            <summary>
            Loads all validation data required by this test (including both binary and Ideal files)
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.LoadValidationDataFile(System.String)">
            <summary>
            Attempts to load the validation file specified by filename by first attempting to locate 
            a binary file, and if that fails by attempting to load a custom ideal file.
            </summary>
            <param name="filename">The file to load</param>
            <returns>True if successful, false if the file could not be loaded.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.NewVdnFrameData(System.Object,System.EventArgs)">
            <summary>
            Occurs whenever a new frame of data is recieved.
            </summary>
            <param name="sender">N/A</param>
            <param name="e">N/A</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.CheckFrameData">
            <summary>
            Checks the frame data before processing the test with the data.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.OnActiveResultsChanged">
            <summary>
            Occurs when the active results change.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.OnResultsChanged">
            <summary>
            Occurs when the Results change.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.OnResultsSaveCompleted">
            <summary>
            Occurs when the results are finished being saved.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.OnTestLoadProgressChanged(System.String)">
            <summary>
            Occurs when the loading of the test has completed.
            </summary>
            <param name="progress">The progress string.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.OnTestRunCompleted">
            <summary>
            Occurs when the test run is complete.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.FileTransferCompleteValueChanged(System.Object,System.Object)">
            <summary>
            Connected to the valuechanged event for the m_FileTransferComplete vdn variable.  This
            will catch when the value of the variable changes, signally the completion of the
            executive's post processing.
            </summary>
            <param name="sender"></param>
            <param name="lastValue"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.OnTestResultsPostProcessingComplete">
            <summary>
            Method called when the host has completed it's post processing for including
            asti results in the result file.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.OnTestRunStarted">
            <summary>
            Occurs when the test run is started. Initializes test state 
            and the executes the TestRunStart event.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.ProcessAftTestState">
            <summary>
            Process the aft test state.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.ProcessAftTestStatus">
            <summary>
            Process the aft test status and updates the FinalStatusText and the Aft Error.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.ProcessTest">
            <summary>
            Process a new frame of VDN data that came in on the buffered VDN connection.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.SendDisableManualRecording">
            <summary>
            Sends a request to disable manual recording.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.SendEnableManualRecording">
            <summary>
            Sends a request to enable manual recording.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.SendStartTest">
            <summary>
            Sends the Start_Test request on the standard FSPT's NetVdnClient.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.SendStartTest(Csf.Imets.ToolCore.Vdn.NetVdnClient)">
            <summary>
            Sends the Start_Test request.
            </summary>
            <param name="nvc">The NetVdnClient that the Start_Test request is sent
            through.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.SendStopTest">
            <summary>
            Send a request to stop the test.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.StoreResults">
            <summary>
            Store the results in a results file.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.SubscribeAll">
            <summary>
            Subscribe to all the variables used by the test.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.SubscribeControlVariables">
            <summary>
            Subscribe to all the control variables for the Test.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.SubscribeGraphParameters">
            <summary>
            Subscribe to all the parameters for the graph.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.SubscribeTestParameters">
            <summary>
            Subscribe to the test parameters.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.TestGraphDataAnalysisChanged(System.Object,System.EventArgs)">
            <summary>
            Occurs whenever the TestGraphDataAnalysis changes.
            </summary>
            <param name="sender">N/A</param>
            <param name="e">N/A</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.TestLoadWorkerDoWork(System.Object,System.ComponentModel.DoWorkEventArgs)">
            <summary>
            Called by the background worker used to load the test.
            </summary>
            <param name="sender">BackgroundWorker</param>
            <param name="e">WorkEvent Args.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.LoadQtgIcTableData">
            <summary>
            Loading the IC parameters for not loaded test.
            Optimize this method for just loading IC parameters.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.TestLoadWorkerRunWorkerCompleted(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)">
            <summary>
            Occurs when the load background worker has completed loading.
            </summary>
            <param name="sender">Background Worker</param>
            <param name="e">The compeltion args.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.TestSaveWorkerDoWork(System.Object,System.ComponentModel.DoWorkEventArgs)">
            <summary>
            Executed when the save background worker begins.
            </summary>
            <param name="sender">The save Background Worker.</param>
            <param name="e">N/A</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.TestSaveWorkerRunWorkerCompleted(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)">
            <summary>
            Occurs when the save background worker is completed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.UnsubscribeAll">
            <summary>
            Unsubscribes from all the VdnVariables subscribed to on the queued
            NetVdnClient and then free's the NetVdnClient.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.UnsubscribeControlParameters">
            <summary>
            Unsubscribes all control parameters subscribed to on the Queued VDN connection
            used for capturing data.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.UnsubscribeGraphParameters">
            <summary>
            Unsubscribes all graph parameters.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.UnsubscribeTestParameters">
            <summary>
            Unsubscribes all test parameters.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.UpdateActiveResults">
            <summary>
            Udpates all the active results.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.UpdateColors">
            <summary>
            Udpates the colors for all the datasets.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.CompareTo(Csf.Imets.ToolCore.AutoFidelityTesting.Test)">
            <summary>
            Compares the test to another test.
            And returns if they are the same test.
            </summary>
            <param name="other">The test to compare against.</param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.Dispose">
            <summary>
            Disposes of the Test.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.PreviousTestRef">
            <summary>
            Previous test which has valid Qtg Id.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.TestModificationStatus">
            <summary>
            get test's modification status.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.IsTestIncludedInQTG">
            <summary>
            Is this Test content section Included In QTG document?
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.HasResultInQTG">
            <summary>
             Has the test result included in the QTG document?
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.HasNewResults">
            <summary>
            Is there a new test results for this test.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.GetQTGToolTipStatus">
            <summary>
            Selected test's status in the QTG document; It displays in the Test's ToolTip, ie. NotIncluded, OutOfDate or Current.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.GetLatestResultDateTimeLocal">
            <summary>
            Get the time stamp of Latest Test Result in Local time.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.Test.GetQTGResultDateTimeLocal">
            <summary>
            Get the time stamp of test result included in the QTG document as local time.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.UpdateResultsinQTG">
            <summary>
            Update all available plot image files from the test data directory into the QTG DocX document.
            </summary>
            <returns>true if updated, otherwise false</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.UpdateBatchTestPlotImagesInDocX(System.String,System.String,System.Collections.Generic.IReadOnlyCollection{System.String})">
            <summary>
            Update batch test's plot image files from the test data directory into the QTG DocX document.
            </summary>
            <param name="docXPath">the document name with full path</param>
            <param name="plotsFolder">plot image folder</param>
            <param name="testIds">list of tests to be updated</param>
            <returns>true if updated, otherwise false; null if document open elsewhere.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.UpdateTestResultsInQtg(System.String,System.String,System.String)">
            <summary>
            Update active test's plot image files from the test data directory into the QTG DocX document.
            </summary>
            <param name="docXPath">the document name with full path</param>
            <param name="plotsFolder">plot image folder</param>
            <param name="testId">test to be updated</param>
            <returns>true if updated, otherwise false; null if document open elsewhere.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.RemoveActiveTestPlotImagesFromDocX(System.String,System.String,System.String)">
            <summary>
            Remove active test's plot image files from the QTG DocX document.
            </summary>
            <param name="docXPath">the document name with full path</param>
            <param name="plotsFolder">plot image folder</param>
            <param name="testId">test to be removed</param>
            <returns>true if removed, otherwise false; null if document open elsewhere.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.RemoveBatchTestPlotImagesFromDocX(System.String,System.String,System.Collections.Generic.IReadOnlyCollection{System.String})">
            <summary>
            Remove batch test's plot image files from the QTG DocX document.
            </summary>
            <param name="docXPath">the document name with full path</param>
            <param name="plotsFolder">plot image folder</param>
            <param name="testIds">list of tests to be removed</param>
            <returns>true if removed, otherwise false; null if document open elsewhere.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.ValidateBaseDocumentMarkers(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
             Validate the specified document's FSPTID Markers based on list of testIds provided.
            </summary>
            <param name="docxPath">the document name with full path</param>
            <param name="plotsFolder">plot image folder</param>
            <returns>true if validation success, otherwise false</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.InsertTestContentInQTG(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary> 
            Insert test content in QTG document.
            </summary>
            <param name="docXPath">the document name with full path</param>
            <param name="testIds">test content to be inserted.</param>
            <returns>true if success, otherwise false; null if document open elsewhere.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.InsertAllTestContentInQTG(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Insert all test content in QTG document.
            </summary>
            <param name="docXPath">the document name with full path</param>
            <param name="testIds">test content to be inserted.</param>
            <returns>true if success, otherwise false; null if document open elsewhere.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.OpenQTGDocument">
            <summary>
             Open the QTG document from the default location.
            </summary>
            <returns>true if open the document success, otherwise false</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.CreateQTGDocument(System.String)">
            <summary>
            Create a QTG document from the template document.
            </summary>
            <param name="qtgFile">the document name with full path</param>
            <returns>true if created a document successfully, otherwise false</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.OpenQTGTemplate">
            <summary>
            Open the QTG template from the default location.
            </summary>
            <returns>true if open the template success, otherwise false</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.CreateTemplate">
            <summary>
            Copy the default QTG template from installed ToolSuite location.
            </summary>
            <returns>true if copied the document success, otherwise false</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.ClearTestQTGStatus">
            <summary>
            Clear the QTG status icon and the status on tooltip.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.FindQTGTemplate">
            <summary>
            Find a template for the active regulatory authority in the template path.
            </summary>
            <returns>QTG Template Path</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.LongTextToLines(System.String,System.Int32)">
            <summary>
             Split long string into lines with maximum length.
            </summary>
            <param name="longString">long string</param>
            <param name="maxLength">maximum lengh of line</param>
            <returns>list of line of string</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.OpenDocument(System.String)">
            <summary>
             Open the document.
            </summary>
            <param name="fileNameWithPath">the document name with full path</param>
            <returns>true if open the document success, otherwise false</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.ValidateCollectDocXTestMarkers(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.Wordprocessing.Paragraph},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Validate the list Paragraphs
            </summary>
            <param name="paras">list of Paragraph</param>
            <param name="idList">list of tests to be validated</param>
            <returns>true if success, otherwise false</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.UpdateTableText(DocumentFormat.OpenXml.Wordprocessing.TableRow,System.String)">
            <summary>
            Update table cell
            </summary>
            <param name="row">TableRow to be updated</param>
            <param name="val">Value to be updated</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.GetICParameter(System.String)">
            <summary>
            Get IC parameters' requested value.
            </summary>
            <param name="param">ICParameter</param>
            <returns>RequestedValue string</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.RemoveTable2ndColumn(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.Wordprocessing.TableProperties},System.String)">
            <summary>
            remove the initial value column data of IC table.
            </summary>
            <param name="tableProperties">List of tableProperties</param>
            <param name="id">test Id</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.RemoveTableRows(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.Wordprocessing.TableProperties},System.String)">
            <summary>
             Remove QTG IC Table Data Rows.
            </summary>
            <param name="tableProperties">List of tableProperties</param>
            <param name="id">test Id</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.RemoveICTable(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.Wordprocessing.TableProperties},System.String)">
            <summary>
            Remove IC table from QTG.
            </summary>
            <param name="tableProperties">List of tableProperties</param>
            <param name="id">test Id</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.UpdateTable2ndColumn(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.Wordprocessing.TableProperties},System.String)">
            <summary>
            Process IC table and update the intial value column.
            </summary>
            <param name="tableProperties">List of tableProperties</param>
            <param name="id">test Id</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.UpdateTableCellText(DocumentFormat.OpenXml.Wordprocessing.TableCell,System.String)">
            <summary>
            Update the table cell text.
            </summary>
            <param name="cell">TableCell</param>
            <param name="val">string value</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.InsertTableRows(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.Wordprocessing.TableProperties},System.String)">
            <summary>
            Identify the IC table and insert rows with intial value data.
            </summary>
            <param name="tableProperties">List of tableProperties</param>
            <param name="testId">QTG Test Id</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.InsertTable(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.Wordprocessing.TableProperties},System.String)">
            <summary>
            insert a new table based on templated test with empty formatted row.
            </summary>
            <param name="tableProperties">List of tableProperties</param>
            <param name="testId">QTG Test Id</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.CreateWPDocInstance(System.String)">
            <summary>
            Creates a new instance of the WordprocessingDocument class from the specified file.
            </summary>
            <param name="qtgFullPath">The path and file name of the target WordprocessingDocument.</param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.DisposeWPDocInstance">
            <summary>
            Disposes a instance of the WordprocessingDocument class.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.CheckWithResultBeginTags(DocumentFormat.OpenXml.Wordprocessing.Run,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Check the list of BeginTags with the specified Run element.
            </summary>
            <param name="r">Run element</param>
            <param name="IdList">list of test ids</param>
            <returns>the identifier if found, otherwise empty string.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.CheckWithEndTag(DocumentFormat.OpenXml.Wordprocessing.Run,System.String)">
            <summary>
            Check the EndTag with the specified Run element
            </summary>
            <param name="r">Run element</param>
            <param name="fsptId">FSPT Id </param>
            <returns>true if success otherwise false</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.AddPlotsToDoc(DocumentFormat.OpenXml.Packaging.MainDocumentPart,DocumentFormat.OpenXml.Wordprocessing.Paragraph,DocumentFormat.OpenXml.Wordprocessing.Run,System.String)">
            <summary>
            Add plots to main document part and add the reference to specified run element.
            Include if the aircraft manufacturer's source data is available at the end.
            Update DateTime in the doucment node and also in the collection.
            </summary>
            <param name="mainPart">ref of MainDocumentPart</param>
            <param name="currentPara">ref of current Paragraph element</param>
            <param name="currentRun">ref of current Run element</param>
            <param name="fsptID">FSPT ID</param>
            <returns>true if success otherwise false</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.AddACSourceDataPlotsToDoc(DocumentFormat.OpenXml.Packaging.MainDocumentPart,DocumentFormat.OpenXml.Wordprocessing.Paragraph,DocumentFormat.OpenXml.Wordprocessing.Run,System.String)">
            <summary>
            add Aircraft Source data from manufacturer.
            Add plots to main document part and add the reference to specified run element.
            </summary>
            <param name="mainPart">ref of MainDocumentPart</param>
            <param name="currentPara">ref of current Paragraph element</param>
            <param name="currentRun">ref of current Run element</param>
            <param name="fsptID">FSPT ID</param>
            <returns>true if success otherwise false</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.UpdateDateTime(DocumentFormat.OpenXml.Wordprocessing.Run,System.String)">
            <summary>
            update the LastWriteTimeUtc of Test Result.
            </summary>
            <param name="currentRun">current Run Node</param>
            <param name="time">time to be updated</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.SetTestPlotsCollection(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            to set the Test's plots files in a collection based on the requested list.
            </summary>
            <param name="testIds">list of test ids; null=all</param>
            <returns>true if sets otherwise false</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.SetAircraftSourceDataCollection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.CreatePlotsReference(System.String,System.String,System.String)">
            <summary>
            Creates the reference of a plots.
            </summary>
            <param name="relationshipId">Plot image ref id</param>
            <param name="fsptId">FSPT id</param>
            <param name="fileName">name of image</param>
            <returns>Drawing object</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.GetBaseDocX(System.String,System.Boolean)">
            <summary>
            1. Look for a template .docX file.
            2. If found use it as a base template.
            3. if not, copy a default one from a particular folder.
            </summary>
            <param name="qtgFileFullPath">the document name with full path</param>
            <param name="isRemove">is the action removal of plots, default false.</param>
            <returns>QTG doc name with full path if valid, otherwise empty string</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.CopyDefaultTemplatesFromToolSuite(System.String)">
            <summary>
            Copy all Default QTG Templates From ToolSuite. This is one time action.
            </summary>
            <returns>true if success otherwise false</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.TrimAfterMinutes(System.DateTime)">
            <summary>
            Format the DateTime to Minutes, and trim seconds and milliseconds.
            </summary>
            <param name="dt">DateTime</param>
            <returns>Formatted DateTime</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.IsDateTimeEquals(System.DateTime,System.Nullable{System.DateTime})">
            <summary>
            Compare two dates without seconds or milliseconds.
            </summary>
            <param name="dateTime1">DateTime</param>
            <param name="dateTime2">DateTime nullable</param>
            <returns>true if equals, otherwise false;</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.AddTestContentInQTG(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary> 
            Add test content in QTG document.
            </summary>
            <param name="testIds">test to be inserted.</param>
            <returns>true if success, otherwise false; null if document open elsewhere.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.ExtractTestContentFromTemplate">
            <summary>
            Extract the test content from the template. From 'section break' to 'TestEnd tag'.
            </summary>
            <returns>true if success, otherwise false</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.HasSection(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.Wordprocessing.Paragraph})">
            <summary>
            Has Section tag in the Paragraphs
            </summary>
            <param name="paras">Paragraphs</param>
            <returns>section id</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.UpdateExtractedTestContent(System.String)">
            <summary>
            Update the extracted template test Content.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.GetPreviousTestIncludedInQTG(Csf.Imets.ToolCore.AutoFidelityTesting.Test)">
            <summary>
            Get the previous test included in QTG
            </summary>
            <param name="TestRef">Test</param>
            <returns>QtgId</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.InsertCachedTestContent(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
            <summary>
            previous test's 'TestEnd tag' to prior to 'section break'.
            </summary>
            <param name="elements">list of Paragraph or table</param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.CheckWithTestContentBeginTag(DocumentFormat.OpenXml.Wordprocessing.Run,System.String,System.String)">
            <summary>
            Check With test Section content begin Tag.
            </summary>
            <param name="r">Run element</param>
            <param name="qtgID">QTG Id</param>
            <param name="testId">Test Id</param>
            <returns>test Id</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.CheckWithTestContentBeginTag(DocumentFormat.OpenXml.Wordprocessing.Run,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Check With test Section content begin Tag.
            </summary>
            <param name="r">Run element</param>
            <param name="testIds">list of Test Id</param>
            <returns>test Id</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.ReplaceSectionTitle(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            if the Run element text matches with section tag, replace the NextSibling of text with current test's name.
            Note: Replacing template section of title with the test's name.
            </summary>
            <param name="r">Run element</param>
            <returns>true if success otherwise false.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.ReplaceText(DocumentFormat.OpenXml.Wordprocessing.Run)">
            <summary>
            Replace the text in the Run element if it matches with ReplaceTextList.
            </summary>
            <param name="r">Run element</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.GetChapterLabel(System.Int32)">
            <summary>
            Get Chapter Label based on number.
            </summary>
            <param name="num">Chapter number</param>
            <returns>Chapter Label string</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.DeleteTestContentInQTG(System.String)">
            <summary>
            Delete the Test Content In QTG.
            </summary>
            <param name="qtgFullPath">the document with full path</param>
            <returns>true if success, otherwise false; null if document open elsewhere.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.DeleteTestSectionContentAndHeader(DocumentFormat.OpenXml.Packaging.MainDocumentPart,System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.Wordprocessing.Paragraph})">
            <summary>
            Delete Test Section Content And the Header.
            </summary>
            <param name="mainPart">the document main part</param>
            <param name="paras">list of paragraph</param>
            <returns>true if success, otherwise false</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.Test.CreateQTGBackup">
            <summary>
            Create/update a QTG backup Document.
            </summary>
            <returns>true if success, otherwise false</returns>
        </member>
        <member name="T:Csf.Imets.ToolCore.AutoFidelityTesting.TestBatch">
            <summary>
            Provides interface for test batches
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.TestBatch.AllTestsList">
            <summary>
            Gets/Sets the list of QtgId's used to match up with the StsId's generated
            from loading a TestBatch file.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.TestBatch.Changed">
            <summary>
            Whether or not the batch list has been changed 
            since it's last save.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.TestBatch.Loaded">
            <summary>
            Whether or not the file has been loaded from disk.  This will also
            be true if a newly generated TestBatch has been saved.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.TestBatch.Item(System.Int32)">
            <summary>
            Gets the reference of the test for the given index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.TestBatch.TestSet">
            <summary>
            The TestSet used to generate the list of tests that need to be run.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.TestBatch.BatchTestList">
            <summary>
            Provides a list of Tests that correspond to this TestBatch's test references.
            If TestSet is not set then this will always return an empty list.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.TestBatch.Count">
            <summary>
            The number of tests in the list.
            </summary>
        </member>
        <member name="E:Csf.Imets.ToolCore.AutoFidelityTesting.TestBatch.TestBatchListChanged">
            <summary>
            Event is fired whenever the internal test list for this TestBatch changes.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.TestBatch.Load">
            <summary>
            Loads the test batch items from Filename.  If file doesn't exist then 
            it throws a FileNotFoundException.  If the file is not available for
            reading then the StsParse may throw other exceptions.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.TestBatch.Load(System.String)">
            <summary>
            Loads the test batch from the file specified (also setting 
            the Filename property.
            </summary>
            <param name="filename"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.TestBatch.Save">
            <summary>
            Saves the batch list to a file that can be re-loaded later.  This can
            throw any of the exceptions that StreamWriter can throw.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.TestBatch.SaveTemp(System.String)">
            <summary>
            Saves the batch to a temporary file (for use with generating QTG PDF files).
            </summary>
            <param name="pathToTemp">The directory the temporary file is to be saved to.  Typically "BatchFiles"
            in the active ThrustRating/Airframe directory.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.TestBatch.RemoveTemp">
            <summary>
            Deletes the temporary file saved for this batch of tests (for use when generating
            QTG PDF files).
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.TestBatch.Add(Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.StsId)">
            <summary>
            Adds the given StsId to the end of the batch list
            </summary>
            <param name="id"></param>
            <returns>The index of the newly added item.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.TestBatch.Add(System.String)">
            <summary>
            Determines if the given string is a valid test reference (StsId) and
            if it is the StsId is added to the end of the batch list.
            </summary>
            <param name="testreference"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.TestBatch.Remove(Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.StsId)">
            <summary>
            Removes the first occurrence of the passed StsId.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.TestBatch.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the given index.
            </summary>
            <param name="index">The zero based index of the item to remove.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.TestBatch.Insert(System.Int32,Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.StsId)">
            <summary>
            Inserts the given StsId at the provided index.
            </summary>
            <param name="index"></param>
            <param name="stsid"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.TestBatch.IndexOf(Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.StsId)">
            <summary>
            Provides the index of the given StsId.
            </summary>
            <param name="stsid"></param>
            <returns>The index in the list of the StsId or -1 if not in the list.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.TestBatch.Clear">
            <summary>
            Clears the list of test references.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.TestBatch.CheckAllQtgIdTests(Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.StsId)">
            <summary>
            Attempts to match the given StsId with an item in the AllTestsList
            so that GUI elements that need QtgId information can get it.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="E:Csf.Imets.ToolCore.AutoFidelityTesting.TestGraphData.AnalysisChanged">
            <summary>
            Raises an event whenever the analyses for this object change.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.TestGraphData.LoadValidationData(Csf.Imets.ToolCore.AutoFidelityTesting.FileIo.BinData)">
            <summary>
            Adds validation data from a binary file to the validation set for
            this test graph item.  Throws exceptions if the X or Y Parameters
            are in valid.
            </summary>
            <param name="binData"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.TestGraphData.LoadValidationData(Csf.Imets.ToolCore.AutoFidelityTesting.FsptResultsPlotDataSet)">
            <summary>
            Adds validation data from an Ideal data file to the validation set for
            this test graph item.  Logs a message if the required X and Y Parameters
            are not part of the given Ideal data file.
            </summary>
            <param name="resultDataSet"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.TestGraphData.GetAnalysisForDataSet(Csf.Imets.ToolCore.Common.Controls.PlotDataSet)">
            <summary>
            Returns the analysis performed for the supplied PlotDataSet
            </summary>
            <param name="dataset"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.TestGraphData.GetAnalysisPlotDataSets(Csf.Imets.ToolCore.Common.Controls.Plotter)">
            <summary>
            Adds the analysis plot data sets to the supplied plotter and keeps them tied
            to their parent dataset for showing/hiding purposes.
            </summary>
            <param name="plot"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.TestGraphData.AnalyzeResults">
            <summary>
            Re-runs the analysis on all analyzed datasets in this object.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.TestGraphData.GetPlotDataSetStyle(Csf.Imets.ToolCore.Common.Controls.StockPlotIcons,System.Boolean)">
            <summary>
            Based on the passed options returns the style of PlotDataSet needed to match.
            </summary>
            <param name="stockicon">The stock icon selected.</param>
            <param name="connectpoints">Whether or not to connect points.</param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.TestGraphData.UpdateXScaling">
            <summary>
            Update X-Scaling including 10% of padding and make sure it is readable like 1,2,2.5,5 etc.
            And if x axis not time then we want to make sure the point doesn't fall on the left or right axis, so we should add some padding.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.TestGraphData.UpdateYScaling">
            <summary>
            Update YScaling including tolerance and 10% of padding and make sure it is readable like 1,2,2.5,5 etc.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.TestGraphData.PerformAnalysis(Csf.Imets.ToolCore.AutoFidelityTesting.Analysis.AnalysisType,Csf.Imets.ToolCore.Common.Controls.PlotDataSet)">
            <summary>
            Performs the requested analysis and returns the analysis performed.
            </summary>
            <param name="type"></param>
            <param name="simDataSet"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.TestGraphData.IsXaxisTime">
            <summary>
            Check whether X-axis unit is time or not.
            </summary>
            <returns>true if X-axix variable is Time.</returns>
        </member>
        <member name="T:Csf.Imets.ToolCore.AutoFidelityTesting.TestSet">
            <summary>
            A collection of tests.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.TestSet.TimeStsName">
            <summary>
            The parameter name used for the X axis.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.TestSet.Path">
            <summary>
            The path to the test directory.  Typically "[ThrustRating]/GDFiles"
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.TestSet.ThrustRatingPath">
            <summary>
            Gets or sets the ThrustRatingPath
            Typically [DataPath]/[AircraftConfiguration]/[ThrustRating]
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.AutoFidelityTesting.TestSet.ConfPath">
            <summary>
            The path to the base directory of generic configuration files.  Typically [DataPath]/conf.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.AutoFidelityTesting.TestSet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Csf.Imets.ToolCore.AutoFidelityTesting.TestSet"/>
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.AutoPing.TTL">
            <summary>
            TimeToLive - The number of times the ping packet can be forwarded
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.AutoPing.DontFragment">
            <summary>
            Specifies whether or not the packet can be fragmented
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.AutoPing.Rate">
            <summary>
            The rate in hertz destination will be pinged if
            continuous is true.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Common.BasicCommandSource">
            <summary>
            This implements a command source without a UI component
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.ExpandableDataGridViewX.m_UnboundRows">
            <summary>
            This is a "workaround" synchronization variable.  Basically the DataGridView isn't
            always calling RowsAdded to bind them.  The DataTable row added does, however it doesn't have the
            index.  So, we'll keep track of the unbound rows and synchronize when it's needed.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.ExpandableDataGridViewX.ExpandedOnAdd">
            <summary>
            If true, a row will be expanded when it's added.  Otherwise,
            it will be collapsed
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.ExpandableDataGridViewX.BindAllRows">
            <summary>
            This is a "workaround" synchronization variable.  Basically the DataGridView isn't
            always calling RowsAdded to bind them.  The DataTable row added does, however it doesn't have the
            index.  So, we'll keep track of the unbound rows and synchronize when it's needed.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.ExpandableDataGridViewX.ExpandableDataGridViewXCellClick(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)">
            <summary>
            Handles the event where a mouse click occurs on a cell in an ExpandableDataGridViewX control. 
            </summary>
            <param name="sender">not used</param>
            <param name="e">The event arguments needed to determine what cell was actually clicked.</param>
        </member>
        <member name="T:Csf.Imets.ToolCore.Common.Controls.GlControls.VertexStorageType">
            <summary>
            Defines the Type of data stored in each vertex.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.GlControls.VertexStorageType.Vertex">
            <summary>
            Only location information will be stored.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.GlControls.VertexStorageType.Texture">
            <summary>
            Location and texture information will be stored.
            </summary>        
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.GlControls.VertexStorageType.Color">
            <summary>
            Location and color information will be stored.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.GlControls.VertexStorageType.Texture_Color">
            <summary>
            Location, texture and color information will be stored.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Common.Controls.GlControls.GlDrawingObject">
            <summary>
            The GlDrawingObject class acts as an interface between OpenGl and its different drawing types.
            It will draw in either immediate mode or use Vertex Buffer Objects. This will allow machines 
            with higher power video cards to render scenes faster. This only handles 2 dimensions(x,y)
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.GlControls.GlDrawingObject.m_UseVBOs">
            <summary>
            True if the GlDrawingObjects are using VBOs.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.GlControls.GlDrawingObject.m_IdCount">
            <summary>
            A counter for GlDrawingObjects when in immediate mode.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.GlControls.GlDrawingObject.m_VerticesB">
            <summary>
            A list of bytes for storing values when using VBOs
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.GlControls.GlDrawingObject.m_VerticesF">
            <summary>
            A list of floats for storing values when using ImmediateMode.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.GlControls.GlDrawingObject.m_GlInterleaveType">
            <summary>
            The Interleave type that defines how the values are stored for immediate mode.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.GlControls.GlDrawingObject.VertexStorageType">
            <summary>
            Gets the type of vertices stored in
            this drawing object.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.GlControls.GlDrawingObject.Id">
            <summary>
            Gets the Id for the GlDrawingObject. 
            If this is set to -1 the drawing object has been disposed and is no longer valid.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.GlControls.GlDrawingObject.Count">
            <summary>
            This is the current number of Vertices not the number
            of items stored in the array.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.GlControls.GlDrawingObject.VBOsEnabled">
            <summary>
            Gets whether or not VBOs are enabled.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlControls.GlDrawingObject.#ctor(Csf.Imets.ToolCore.Common.Controls.GlControls.VertexStorageType,Csf.Imets.ToolCore.Common.Controls.GlRenderer)">
            <summary>
            Initializes a new instance of the GlDrawingObject class.
            </summary>
            <param name="type">The type of vertices to store.</param>
            <param name="renderer"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlControls.GlDrawingObject.BeginVertex">
            <summary>
            This should be called before adding vertices to the list.
            This clears all preivous vertices and setups the object.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlControls.GlDrawingObject.Add(System.Single,System.Single)">
            <summary>
            Add a location to the object. If more information is stored 0s will be used.
            </summary>
            <param name="x">X location</param>
            <param name="y">Y location</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlControls.GlDrawingObject.Add(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Add a location and texture location to the object. If more information is stored 0s will be used.
            </summary>
            <param name="x">X location</param>
            <param name="y">Y location</param>
            <param name="tx">Texture X location</param>
            <param name="ty">Texture Y location</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlControls.GlDrawingObject.Add(System.Single,System.Single,System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
             Add a location and color to the object. If more information is stored 0s will be used.
            </summary>
            <param name="x">X location</param>
            <param name="y">Y location</param>
            <param name="r">Red Value (0-255)</param>
            <param name="g">Green Value (0-255)</param>
            <param name="b">Blue Value (0-255)</param>
            <param name="a">Alpha Value (0-255)</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlControls.GlDrawingObject.Add(System.Single,System.Single,System.Byte,System.Byte,System.Byte,System.Byte,System.Single,System.Single)">
            <summary>
             Add a location, color and texture location to the object. 
            </summary>
            <param name="x">X location</param>
            <param name="y">Y location</param>
            <param name="r">Red Value (0-255)</param>
            <param name="g">Green Value (0-255)</param>
            <param name="b">Blue Value (0-255)</param>
            <param name="a">Alpha Value (0-255)</param>
            <param name="tx">Texture X location</param>
            <param name="ty">Texture Y location</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlControls.GlDrawingObject.EndVertex">
            <summary>
            This should be called after all the vertices have been added to the object.
            This will cause it to be transfered to the memory.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlControls.GlDrawingObject.Draw(System.Int32)">
            <summary>
            Draws the GlDrawingObject using the given DrawType.
            </summary>
            <param name="drawType">The GlEnum to draw.(GL_QUADS,GL_TRIANGLE_STRIP,etc..)</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlControls.GlDrawingObject.Draw(System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws the GlDrawingObject using the given DrawType.
            </summary>
            <param name="drawType">The GlEnum to draw.(GL_QUADS,GL_TRIANGLE_STRIP,etc..)</param>
            <param name="begin">The index to begin at.</param>
            <param name="count">The number of pixels to draw.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlControls.GlDrawingObject.Draw(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws the current object using the given type. The pixels 
            to draw can be specified using the begin step and count
            </summary>
            <param name="drawType">The GlEnum to draw.(GL_QUADS,GL_TRIANGLE_STRIP,etc..)</param>
            <param name="begin">The index to begin at.</param>
            <param name="step">The number of pixels to skip when drawing.(Used for when pixels are interleaved.</param>
            <param name="count">The number of pixels to draw.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlControls.GlDrawingObject.Dispose">
            <summary>
            Disposes of the drawing object freeing the memory in opengl.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlControls.GlDrawingObject.Add(System.Single)">
            <summary>
            Adds a single value to the current list.
            </summary>
            <param name="val">The value to add.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlControls.GlDrawingObject.Add(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Adds a color to the correct list.
            </summary>
            <param name="r">Red</param>
            <param name="g">Green</param>
            <param name="b">Blue</param>
            <param name="a">Alpha</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlControls.GlDrawingObject.GenerateId">
            <summary>
            Generates an Id if using VBOs it 
            will get it from OpenGl. If using immediate
            it will use an internal IdCount.
            </summary>
            <returns>A new Id.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlControls.GlDrawingObject.DeleteId(System.Int32)">
            <summary>
            Deletes the Id from memory. If not using VBOs this has no affect.
            </summary>
            <param name="id">the id number to delete.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlControls.GlDrawingObject.DrawVBO(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Call to Draw the VBO.
            </summary>
            <param name="drawMethod">The drawingMethod to use (GL_QUAD,GL_LINE_STRIP etc..)</param>
            <param name="beginIndex">The start index.</param>
            <param name="step">The number of pixels to skip.</param>
            <param name="count">The number of vertices.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlControls.GlDrawingObject.DrawVertexArray(System.Collections.Generic.List{System.Single},System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Call to DrawVertexArray used when in Immediate mode.
            Contains unsafe code.
            </summary>
            <param name="m_Vertices">The vertices to draw.</param>
            <param name="beginIndex">The start index</param>
            <param name="step">The number of values to skip.</param>
            <param name="count">The total count.</param>
            <param name="drawType">The draw method. (GL_QUAD,GL_LINE_STRIP etc..)</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlControls.GlDrawingObject.VBO_ValueCountToVertexCount(Csf.Imets.ToolCore.Common.Controls.GlControls.VertexStorageType,System.Int32)">
            <summary>
            Calculates the number of vertices based on the current count in bytes.
            </summary>
            <param name="type">The type of VertexStorage being used.</param>
            <param name="count">The number of bytes that have been counted.</param>
            <returns>The number of vertices.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlControls.GlDrawingObject.VBO_VertexCountToValueCount(Csf.Imets.ToolCore.Common.Controls.GlControls.VertexStorageType,System.Int32)">
            <summary>
            Calculates the number of bytes given a number of vertices.
            </summary>
            <param name="type">The VertexStorage being used.</param>
            <param name="count">The number of Vertices.</param>
            <returns>The number of bytes.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlControls.GlDrawingObject.Immediate_ValueCountToVertexCount(Csf.Imets.ToolCore.Common.Controls.GlControls.VertexStorageType,System.Int32)">
            <summary>
            Calculates the number of floats based on a given number of vertices.
            </summary>
            <param name="type">Tthe VertexStorage being used.</param>
            <param name="count">The number of vertices.</param>
            <returns>The number of floats.</returns>
        </member>
        <member name="T:Csf.Imets.ToolCore.Common.Controls.GlRenderer">
            <summary>
            The GlRenderer is an abstract class used to handle creating an OpenGL context
            and setup a timing mechanism. It also adds printing functionality.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.GlRenderer.s_GlLock">
            <summary>
            A lock to handle calls that need to be sycnhronized across all OpenGl Threads.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.GlRenderer.s_RendererIds">
            <summary>
            A counter to give each render Id a unique Id.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.GlRenderer.s_ErrorCheck">
            <summary>
            Enables or disbales ErrorCheck. (Used for debugging)
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.GlRenderer.s_Contexts">
            <summary>
            This is a dictionary to store the initial rendering context with other 
            rendering contexts with the matching context group.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.GlRenderer.m_ControlHandle">
            <summary>
            The ptr to the Control Handle.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.GlRenderer.m_DeviceContext">
            <summary>
            The ptr to the current Device Context.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.GlRenderer.m_RenderingContext">
            <summary>
            The ptr to the current Rendering Context.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.GlRenderer.m_ContextsCreated">
            <summary>
            A flag to state whether the contexts have been created or not.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.GlRenderer.m_RenderThread">
            <summary>
            The thread rendering will take place on.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.GlRenderer.m_TextureManager">
            <summary>
            The manager that handles loading and storing textures.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.GlRenderer.m_FirstPass">
            <summary>
            A flag to state whether it is the first pass or not.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.GlRenderer.m_Shutdown">
            <summary>
            A flag to tell the renderer to shutdown.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.GlRenderer.m_ConditionVariable">
            <summary>
            A variable to monitor to sycnhronize the thread.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.GlRenderer.m_ToBitmapCondVar">
            <summary>
            A variable to monitor to synchronize the priting calls.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.GlRenderer.m_BitmapRect">
            <summary>
            A rectangle store the sizes of the bitmap to print to.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.GlRenderer.m_LastBitmap">
            <summary>
            The last bitmap we printed of the view. 
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.GlRenderer.m_Size">
            <summary>
            The current size of the control to render to.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.GlRenderer.m_Resized">
            <summary>
            A boolean to indicate when the control has resized.
            Will notify the render thread to update size.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.GlRenderer.m_RendererId">
            <summary>
            The renderer Id (Used for debugging.)
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.GlRenderer.m_IsDisposed">
            <summary>
            A flag to state whether or not the GlRenderer has been disposed.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.GlRenderer.m_CreateBitmap">
            <summary>
            A flag to indicate to the Render Thread that a bitmap needs to be created.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.GlRenderer.m_CreateScreenCapture">
            <summary>
            A flag to indicate to the Render Thread that a screen capture needs to be created.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.GlRenderer.m_PrintingResolution">
            <summary>
            The current desired resolution when printing stuff out.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.GlRenderer.m_UsesThreadPool">
            <summary>
            A flag to use the thread pool vs generating a render thread.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.GlRenderer.m_PrintWidth">
            <summary>
            The width to print the scene to.
            </summary>               
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.GlRenderer.m_PrintHeight">
            <summary>
            The height to print the scene to.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.GlRenderer.m_ContextOwner">
            <summary>
            The Owner of the RenderingContext to try and share with.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.GlRenderer.m_GlControl">
            <summary>
            A refrence to the control that owns the GlRenderer.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.GlRenderer.m_GlInitialized">
            <summary>
            A flag to set whether the GlContext has been initialized or not.
            (Setting thist to false will cause it to be reinitialized in the next frame).
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.GlRenderer.IsShuttingDown">
            <summary>
            Gets whether or not the GlRenderer has been told to shut down.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.GlRenderer.GlVersion">
            <summary>
            Returns the current OpenGl Version being used.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.GlRenderer.IsPrinting">
            <summary>
            Gets or sets whether or not the GlRenderer is currently printing.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.GlRenderer.InitializeOnLoad">
            <summary>
            Gets or sets whether or not the GlRenderer should initialize on load.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.GlRenderer.PrintingResolution">
            <summary>
            Gets the priting resolution used for priting the opengl scene.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.GlRenderer.TextureManager">
            <summary>
            Gets the TextureManager used by this GlRenderer.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.GlRenderer.Enabled">
            <summary>
            Gets or sets whether or not the GlRenderer is currently Enabled.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.GlRenderer.Size">
            <summary>
            Gets or sets the current size of the GlRenderer.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.GlRenderer.RenderMisses">
            <summary>
            The number of attempts to render but the
            renderer was already busy rendering.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.GlRenderer.Visible">
            <summary>
            Gets or sets if the GlRenderer is currently visible.
            Gets or sets whether or not the GlRenderer is currently visible to the user.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.GlRenderer.IsRendering">
            <summary>
            Gets whether or not the GlRenderer is still in the Render method.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.GlRenderer.IsGlRendering">
            <summary>
            Gets whether or not the GlRenderer is still rendering.         
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.GlRenderer.RenderLock">
            <summary>
            Gets the RenderLock used to synchronize the render method.
            (This should be used with caution.)
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.GlRenderer.GlLock">
            <summary>
            Gets the lock used to synchronize Make Current Calls.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.GlRenderer.VBOsEnabled">
            <summary>
            Gets whether or not VBOs are Enabled.
            If false the check has not occured yet. 
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.GlRenderer.ContextGroup">
            <summary>
            The ContextGroup is name of the 
            group used to share rendering contexts between.        
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.#ctor(System.String)">
            <summary>
            Initializes an instance of the <see cref="T:Csf.Imets.ToolCore.Common.Controls.GlRenderer"/>.
            This allows setting a context name to allow GlRenderers to share textures and fonts.
            </summary>
            <param name="contextName">A name to use to share contexts across GlRenderers.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Csf.Imets.ToolCore.Common.Controls.GlRenderer"/>
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.Finalize">
            <summary>
            Called when the garbage collector finally releases the object this can happen at anytime.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.Initialize(Csf.Imets.ToolCore.Common.Controls.ImetsGlControl,System.Boolean,System.Boolean)">
            <summary>
            Initialzes the GlRenderer. Creates contexts and threads.
            </summary>
            <param name="control">The owning control.</param>
            <param name="useThreadPool">A flag to use the thread pool or not.</param>
            <param name="initializeContexts">Allows skipping the initialization of contexts.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.InitializeContexts">
            <summary>
            Initializes the OpenGl contexts if they have not already been initialized.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.InitializeThreads">
            <summary>
            Initializes the render thread and starts it.
            </summary>
            <returns>True on success.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.Execute">
            <summary>
            This method occurs on the render thread and lasts the life of the GlRenderer.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.UpdateContextRenderer">
            <summary>
            Connects to the current Context owner 
            to try and attach to the PostRender 
            event to allow sharing.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.ThreadPoolExecute(System.Object)">
            <summary>
            If the GlRenderer is using the Threadpool instead of it's own thread, this 
            method will be executed whenever the owning class calls cycle().  Actually,
            whenever cycle() is called the task is put into a queue and when the process's
            threadpool threads are free it will execute. This can be degrade performance when 
            a lot of thread pool threads are being used by the CLR.  However, reduces overhead
            for thread creation and execution.
            </summary>
            <param name="threadContext"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.Process">
            <summary>
            This is the actual process of the render code that is called from execute.
            This method initializes the gl scene, loads textures, and then renders the scene.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.GetVersion">
            <summary>
            Gets the current version of OpenGL the context is rendering to.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.OnGroupContextPostRender(System.Object,System.EventArgs)">
            <summary>
            Called if sharing contexts. This will occur after the parent context
            has finished a render call and then attempts to share its list.
            </summary>
            <param name="sender">The Parent Renderer.</param>
            <param name="e">N/A</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.ProcessBitmap">
            <summary>
            If createPitmap is true or CreateScreenCapture.
            This thread will generate a bitmap of the current scene.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.CreateBitmap">
            <summary>
            Renders the current scne to a bitmap.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.GenerateBitmap">
            <summary>
            Generates a bitmap to match the current size of the scene.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.TraceError(System.String)">
            <summary>
            Attempts to grab the last win 32 error and print it to the Trace Stream.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.MakeCurrent">
            <summary>
            Calls a single make current attempt.
            </summary>
            <returns>True on success;</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.MakeCurrent(System.Int32)">
            <summary>
            Attempts to make the Rendering Context current.
            </summary>
            <param name="maxAttempts">The number of attempts to try before giving up.</param>
            <returns>True on success;</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.SafeMakeCurrent">
            <summary>
            This is a thread safe make current.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.ClearCurrent">
            <summary>
            Attempts 3 times to clear the current Rendering Context.
            </summary>
            <returns>True on succes;</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.ClearCurrent(System.Int32)">
            <summary>
            Clears the current rendering context.
            We will try up to number of maxAttempts before bailing.
            </summary>
            <param name="maxAttempts">Number of times to try clear the current rendering context.</param>
            <returns>True on success</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.SafeClearCurrent">
            <summary>
            Thread safe call to clear the current rendering context.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.SafeSwapBuffers">
            <summary>
            Thread safe call to swap the buffers.
            </summary>
            <returns>True on swap</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.FreeThreads">
            <summary>
            Frees the Render Thread and disposes of it.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.FreeContexts">
            <summary>
            Frees the rendering and device contexts.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.ReleaseDC">
            <summary>
            Release the devices context.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.CreateScreenCapture">
            <summary>
            Creates a screen captrue from the current scene.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.InitializeGl">
            <summary>
            Abstract method should contain all GL Initialization calls.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.PreRender">
            <summary>
            Called before rendering begins.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.ConfigureProjection">
            <summary>
            Called whenever a resize event occurs.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.Render">
            <summary>
            Called each frame. All rendering should take place in here.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.Resize">
            <summary>
            Called whenever there is a resize.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.Shutdown">
            <summary>
            Called when shutting down.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.PostRender">
            <summary>
            Occurs After rendering is complete.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.OnShow">
            <summary>
            Virtual stubbed method called whenever the scene is shown.
            (Occurs during Printing)
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.OnHide">
            <summary>
            Virtual stubbed out method called whenever the scene is hidden.
            (Occurs during Printing)
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.Clear">
            <summary>
            Called at the end of the print method to clear the screen
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.Cycle">
            <summary>
            Cycle pulses the render thread to render another frame.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.Start">
            <summary>
            Starts the render thread.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.Pause">
            <summary>
            Pauses the render thread. (Restart by calling Start)
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.Stop">
            <summary>
            Stops the render thread.(Restart by calling Start)
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.PrintBitmap(System.Drawing.Printing.PageSettings,System.Drawing.Rectangle)">
            <summary>
            Setups the current scene for printing and tells the render thread to print the scene. 
            This can take time to be called and should not be called from the UI Thread.
            </summary>
            <param name="pagesettings">The settings of the page to print to.</param>
            <param name="marginbounds">The margin to leave.</param>
            <returns>The printed bitmap.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.PrintBitmap(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Setups the current scene for printing and tells the render thread to print the scene. 
            This can take time to be called and should not be called from the UI Thread.
            </summary>
            <param name="xRes">Resolution in the x direction</param>
            <param name="yRes">Resolution in the y direction</param>
            <param name="width">Width of the scene.</param>
            <param name="height">Height of the scene.</param>
            <returns>The bitmap.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.PrintBitmap(System.Int32,System.Int32,System.Drawing.Rectangle)">
            <summary>
            Setups the current scene for printing and tells the render thread to print the scene. 
            This can take time to be called and should not be called from the UI Thread.
            </summary>
            <param name="xRes">Resolution in the x direction</param>
            <param name="yRes">Resolution in the y direction</param>
            <param name="marginbounds">The margin to leave.</param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.PrintToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
            <summary>
            Setups the current scene for printing and tells the render thread to print the scene. 
            This can take time to be called and should not be called from the UI Thread.
            </summary>
            <param name="map">The map to print the scene to.</param>
            <param name="marginbounds">The margin to leave.</param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.GlErrorCheck">
            <summary>
            Performs a GlError check and prints out a message if an error occured.
            </summary>
            <returns>true if an error occured.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.GlErrorCheck(System.String)">
            <summary>
            Performs a GlError check and prints out a message with the funcName appended at the end.
            </summary>
            <param name="funcName">The name of the function that was being performed prior to calling glErrorCheck.</param>
            <returns>True if an error occured.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.IsExtensionSupported(System.String)">
            <summary>
            Check to see if a certain extension is supported.
            </summary>
            <param name="name">The name of the extension</param>
            <returns>True if it is supported.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.GetScreenCapture(System.Int32,System.Int32)">
            <summary>
            Returns a screen capture given the width and height.
            This should not be called from the UI thread as it can hang it up.
            </summary>
            <param name="width">Width of the screen capture</param>
            <param name="height">Height of the screen capture.</param>
            <returns>A bitmap of the scene.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.Dispose">
            <summary>
            Disposes of the GlRenderer.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GlRenderer.Dispose(System.Boolean)">
            <summary>
            Cleans up all resources by the GlRenderer.
            </summary>
            <param name="disposing">True if it was called from dispose or from the destructor</param>
        </member>
        <member name="T:Csf.Imets.ToolCore.Common.Controls.ImetsGlControl">
            <summary>
            The Imets Gl control is a standard gl control used by the Tools
            to generate an opengl context and manage frame based rendering for plots, 
            virtual panels, and any other frame based rendering needs.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.ImetsGlControl.m_Renderer">
            <summary>
            The GlRenderer that manages the rendering for the GlControl.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.ImetsGlControl.m_Timer">
            <summary>
            The timer that pulses the render to run at a certain rate.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.ImetsGlControl.m_DesiredFPS">
            <summary>
            The dersired frames per second to render at.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.ImetsGlControl.m_LastVisible">
            <summary>
            A flag to detect if the visibility changed.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.ImetsGlControl.m_ShowDelayTimer">
            <summary>
            A timer to delay showing the of the ImetsGlRenderer scene.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.ImetsGlControl.InitializeContexts">
            <summary>
            Gets or sets whether or not the contexts should be initialized or 
            if they were initialized externally.
            </summary>        
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.ImetsGlControl.Renderer">
            <summary>
            Gets or sets the Renderer that draws the image to the control.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.ImetsGlControl.IsPrinting">
            <summary>
            Gets or sets whether the GlControl is currently printing the scene.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.ImetsGlControl.DesiredFPS">
            <summary>
            Gets or sets the DesiredFPS
            </summary>
            <value>The DesiredFPS.</value>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.ImetsGlControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Csf.Imets.ToolCore.Common.Controls.ImetsGlControl" />.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.ImetsGlControl.SetDesiredFPS">
            <summary>
            Updates the timer to run at the desired Frame rate.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.ImetsGlControl.InitializeStyles">
            <summary>
            Initializes the control's styles.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.ImetsGlControl.InitializeComponent">
            <summary>
            Required for designer support.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.ImetsGlControl.TimerElapsed(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            Called each time the timer elapses. Checks to see if the visibility has 
            changed. And then cycles the renderer.
            </summary>
            <param name="sender">the timer</param>
            <param name="e">The timer arguments.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.ImetsGlControl.ShowDelayTimerElapsed(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            The purpose of this mechanism is to ensure that this OpenGL control 
            is going to be visible for some period of time, before we report to it
            that it can be shown, ie Tab Pages that flip through OpenGL controls.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.ImetsGlControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the control.
            </summary>
            <param name="e">The paint event arguments.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.ImetsGlControl.OnVisibleChanged(System.EventArgs)">
            <summary>
            Occurs whnever the visibility of the control changes. 
            Starts the ShowDelayTmer.
            </summary>
            <param name="e">N/A</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.ImetsGlControl.OnVisibilityChanged">
            <summary>
            Prefer to use this method as it filters out undesired
            effects from the standard OnVisibleChanged event
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.ImetsGlControl.OnCycle">
            <summary>
            Verifies the renderer is enabled and
            pulse the cycle call on the renderer.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.ImetsGlControl.Dispose(System.Boolean)">
            <summary>
            Cleans up all resources.
            </summary>
            <param name="disposing">True if called from Dispose else false.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.ImetsGlControl.GetScreenCapture(System.Int32,System.Int32)">
            <summary>
            Requests a screen capture from the Renderer.
            </summary>
            <param name="width">The width of the capture.</param>
            <param name="height">The height of the capture.</param>
            <returns>The Bitmap</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.ImetsGlControl.PrintBitmap(System.Drawing.Printing.PageSettings,System.Drawing.Rectangle)">
            <summary>
            Requests the render to print to a bitmap using the given parameter.
            </summary>
            <param name="pagesettings">Information on the printed page.</param>
            <param name="marginbounds">The magins of the page.</param>
            <returns>The resulting bitmap</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.ImetsGlControl.PrintBitmap(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Requests a bitmap from the Renderer.
            </summary>
            <param name="xRes">The x resolution</param>
            <param name="yRes">The y resolution</param>
            <param name="width">The width of the printed bitmap</param>
            <param name="height">The height of the printed bitmap</param>
            <returns>The Bitmap</returns>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.ImetsMessageBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.ImetsMessageBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.ImetsMessageBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Common.Controls.NodeSuperTooltipProvider">
            <summary>
            Wrapper so SuperTooltips can be displayed for node objects.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.NodeSuperTooltipProvider.#ctor(System.Windows.Forms.TreeNode)">
            <summary>
            Creates new instance of the object.
            </summary>
            <param name="node">Node to provide tooltip information for</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.NodeSuperTooltipProvider.Show">
            <summary>
            Call this method to show tooltip for given node.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.NodeSuperTooltipProvider.Hide">
            <summary>
            Call this method to hide tooltip for given node.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.NodeSuperTooltipProvider.ComponentRectangle">
            <summary>
            Returns screen coordinates of object.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.LocationType.FirstQuadrant">
            <summary>
            Top right quadrant
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.LocationType.SecondQuadrant">
            <summary>
            Top left quadrant
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.LocationType.ThirdQuadrant">
            <summary>
            Bottom left quadrant
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.LocationType.FourthQuadrant">
            <summary>
            Bottom right quadrant
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.LocationType.MarginTop">
            <summary>
            The annotation should be placed near the margin at the top
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.LocationType.MarginBottom">
            <summary>
            The annotation should be placed near the margin at the bottom
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.LocationType.MarginLeft">
            <summary>
            The annotation should be placed near the margin at the left
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.LocationType.MarginRight">
            <summary>
            The annotation should be placed near the margin at the right
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.Annotation.Offset">
            <summary>
            The distance away from the Location that the text should 
            be drawn.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.Annotation.MapLocationTypeToGlTextEnums(Csf.Imets.ToolCore.Common.Controls.LocationType,Csf.Imets.ToolCore.OpenGL.TextAlignmentType@)">
            <summary>
            When passed a LocationType enumeration it outputs the corresponding 
            vertical and horizontal alignments for a GlText object
            </summary>
            <param name="type">The LocationType to translate</param>
            <param name="alignment">The alignment (output) corresponding to the type</param>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.Axis.ActualMax">
            <summary>
            Get/Sets the untransformed value of the axis 
            (one that the user sees or appears in the GDF).
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.Axis.Max">
            <summary>
            This is the background axis value (may be the log10 or some other transformation 
            of the actual value...depends on the AxisType of this axis.)
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.Axis.ActualMin">
            <summary>
            Gets/Sets the untransformed value of the axis minimum 
            (the one that the user sees or appears in the GDF).
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.Axis.GdfConfigTicks">
            <summary>
            Get the number of ticks(+1) configured in GDF, otherwise the return the default ticks.
            Sets the configured value only for FSPT plots.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.Axis.Min">
            <summary>
            This is the background axis value (may be the log10 or some other transformation 
            of the actual value...depends on the AxisType of this axis.)
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.Axis.TickMajorSkipValue">
            <summary>
            The number of minor ticks between major ticks + 1.
            Defaults to 2. e.g. | - - | would be a 3 and | - | would be a 2.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.Axis.AdjustAxisProperties">
            <summary>
            Needs to be called whenever Changed() gets called to adjust the axis 
            properties based on the Type of axis and the settings.  (Log axis min and
            max's need to be pinned to a legitimate minor decade boundary.)
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.Axis.AutoScaleData(System.Double,System.Double,System.Double@,System.Double@,System.UInt32@)">
            <summary>
            Given requested min and max values it provides suggested clamped values and the number of suggested ticks.
            (Uses PlotRenderer's AutoScaleData method for Linear type axes and does not allow zooming for log type axes.)
            </summary>
            <param name="requestedMax"></param>
            <param name="requestedMin"></param>
            <param name="bestmax"></param>
            <param name="bestmin"></param>
            <param name="ticks"></param>
            <returns>The determined scale.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.Axis.GetTickPoints(System.Single,System.Int32@,System.Collections.Generic.List{System.Boolean}@)">
            <summary>
            Returns a list of points along the axis where tick marks should appear.  
            </summary>
            <param name="maxAxisLength">The axis length.</param>
            <param name="tickOffset">Outputs the tick offset (only useful for Log type 
            axis for determining major ticks) or for Octave type axis to find the start index
            into the MathX octave definition arrays.</param>
            <param name="isMajorTick">Output containing a list of bools that correspond with the returned 
            tick list that shows whether a tick is a major one or not.</param>
            <returns>A list of points along the axis where tick marks should appear.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.Axis.GetTickPoints(System.Single,System.Collections.Generic.List{System.Boolean}@)">
            <summary>
            Returns a list of points along the axis where tick marks should appear.  
            </summary>
            <param name="maxAxisLength">The axis length.</param>
            <param name="isMajorTick">Output containing a list of bools that correspond with the returned 
            tick list that shows whether a tick is a major one or not.</param>
            <returns>A list of points along the axis where tick marks should appear.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.Axis.GetTickPoints(System.Single)">
            <summary>
            Returns a list of points along the axis where tick marks should appear.  
            </summary>
            <param name="max_axis_length">The axis length.</param>
            <returns>A list of points along the axis where tick marks should appear.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.Axis.GetGridPoints(System.Single,System.Collections.Generic.List{System.Double}@,System.Collections.Generic.List{System.Boolean}@,System.Boolean@)">
            <summary>
            Returns a list of points on the axis that should either recieve
            grid points or are endpoints for grid lines.
            </summary>
            <param name="axisLength">The length of the axis</param>
            <param name="ticks">A list of tick points along the axis</param>
            <param name="isMajorTick">A list of bools describing whether the tick points are major ticks.</param>
            <param name="drawAsLines">Whether or not the returned list of grid points should be drawn 
            as lines (true) or points (false)</param>
            <returns>A list of points on the axis that should either recieve
            grid points or are endpoints for grid lines.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.Axis.GetGridPoints(System.Single,System.Boolean@)">
            <summary>
            Returns a list of points on the axis that should either recieve
            grid points or are endpoints for grid lines.
            </summary>
            <param name="axisLength">The length of the axis</param>
            <param name="drawAsLines">Whether or not the returned list of grid points should be drawn 
            as lines (true) or points (false)</param>
            <returns>A list of points on the axis that should either recieve
            grid points or are endpoints for grid lines.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.Axis.GetGridPoints(System.Boolean,System.Single,System.Collections.Generic.List{System.Double}@,System.Collections.Generic.List{System.Boolean}@,System.Boolean@)">
            <summary>
            Returns a list of points on the axis that should either recieve
            grid points or are endpoints for grid lines.
            </summary>
            <param name="asLines">Whether or not the gridpoints should be lines (true) or points (false).
            A false value passed here may be overridden by the Type of the axis.</param>
            <param name="axisLength">The length of the axis</param>
            <param name="ticks">A list of tick points along the axis</param>
            <param name="isMajorTick">A list of bools describing whether the tick points are major ticks.</param>
            <param name="drawAsLines">Whether or not the returned list of grid points should be drawn 
            as lines (true) or points (false)</param>
            <returns>A list of points on the axis that should either recieve
            grid points or are endpoints for grid lines.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.Axis.GetBoundaryCoordinates(System.Double,System.Double,System.Boolean)">
            <summary>
            Returns 4 vertices that describe the boundary coordinates of the plot
            to be used for drawing the grid boundary.
            </summary>
            <param name="oppositeAxisLength">The length of the axis opposite to this one.</param>
            <param name="axisLength">The length of this axis</param>
            <param name="isAxisHorizontal">Whether this axis is horizontal (X) or not (Y).</param>
            <returns>Four vertices that describe the boundary coordinates of the plot
            to be used for drawing the grid boundary.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.Axis.GetSpacing(System.Collections.Generic.List{System.Double},System.Int32@)">
            <summary>
            Convenience routine for aesthetically placing grid dots in a given space.
            </summary>
            <param name="pointList"></param>
            <param name="numberOfDots"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.Axis.ScaleAxis(System.Double,System.Double,System.Double@,System.Double@)">
            <summary>
            Scales the axis appropriately based on the requested min and max.  The requested values
            may be adjusted for proper axis clamping.
            </summary>
            <param name="requestedMax">The desired maximum axis value</param>
            <param name="requestedMin">The desired minimum axis value</param>
            <param name="newMax">Possibly an adjusted requestedMax so that the value is properly clamped to
            a reasonable value</param>
            <param name="newMin">Possibly an adjusted requestedMin so that the value is properly clamped to
            a reasonable value</param>
            <returns>The scale as a percentage.  May be invalid for certain types of plots e.g. Log plots.</returns>
        </member>
        <member name="T:Csf.Imets.ToolCore.Common.Controls.DataConverter">
            <summary>
            Base class for Axis and AxisSettings that provides the Typing and Scaling 
            methods needed for having special scales/logarithmic on axes.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.DataConverter.ScaleValue">
            <summary>
            The value to scale the axis for display (typically 1000 for milliseconds)
            Only applicable for ScaledLinear Type.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.DataConverter.ConvertInputValue(System.Single)">
            <summary>
            Based on the axis type it spits out the adjusted value that will fit on
            the linear plot scale.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.DataConverter.ConvertOutputValue(System.Single)">
            <summary>
            Based on the axis type it spits out the adjusted value that will fit on
            the linear plot scale.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.DataConverter.ConvertOriginalValue(System.Double,Csf.Imets.ToolCore.Common.Controls.AxisType,System.Double)">
            <summary>
            Returns the original value that was put into the dataset based on the current
            scaleValue (the multiplier) and the axis type.
            </summary>
            <param name="value"></param>
            <param name="type"></param>
            <param name="scaleValue"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.DataConverter.ConvertOriginalValue(System.Single,Csf.Imets.ToolCore.Common.Controls.AxisType,System.Double)">
            <summary>
            Returns the original value that was put into the dataset based on the current
            scaleValue (the multiplier) and the axis type.
            </summary>
            <param name="value"></param>
            <param name="type"></param>
            <param name="scaleValue"></param>
            <returns></returns>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.StipplePattern.Custom">
            <summary>
            Not Currently Implemented
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Common.Controls.StockPlotIcons">
            <summary>
            Available plot icons out of the box.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotDataSet.MarkerValueActive">
            <summary>
            Whether or not the plot should display marker text for this value.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotDataSet.Annotations">
            <summary>
            The list of annotations associated with this PlotDataSet
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotDataSet.AnnotationsVisible">
            <summary>
            Whether or not annotations are enabled for display (They may still not be
            displayed if the data set is not visible.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotDataSet.Name">
            <summary>
            Name is the label for a data plot.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotDataSet.PointsPerIcon">
            <summary>
            The number of points to skip between icons.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotDataSet.StockIcon">
            <summary>
            Gets/Sets the currently selected stock icon for the PlotDataSet.  
            (only uses if the plot data set's mode is Icon)
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotDataSet.Data">
            <summary>
            Data is a list of floats.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotDataSet.Count">
            <summary>
            Gets the number of variables in a list.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotDataSet.GetData">
            <summary>
            Grabs the "new" points added to a static data set.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotDataSet.GetData(System.Drawing.PointF,System.Boolean)">
            <summary>
            Grabs the "new" points added to a static data set.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotDataSet.GetColors">
            <summary>
            Grabs the next chunk of colors associated with the points returned by
            GetNonStaticPoints().
            </summary>
            <returns></returns>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotDataSet.ToleranceData">
            <summary>
            The limits of the tolerance.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotDataSet.Color">
            <summary>
            This is the color that lines and tolerance data will be drawn
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotDataSet.PointColor">
            <summary>
            This is the color that all points will be drawn
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotDataSet.Thickness">
            <summary>
            The thickness of the data plot line.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotDataSet.PointThickness">
            <summary>
            The thickness of the data plot points.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotDataSet.Opacity">
            <summary>
            The opacity of the data plot.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotDataSet.DisplayIds">
            <summary>
            Is a list of the names of the data plot. 
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotDataSet.DataSizeBytes">
            <summary>
            It is the size of a float 4 bytes.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotDataSet.MaxDataPoints">
            <summary>
            Maximum number of Data points.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotDataSet.Style">
            <summary>
            The style of data plot you want line, points, etc.
            You may only set the value back and forth between points,
            and lines.  Changing a Solid type is illegal.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotDataSet.HasToleranceBand">
            <summary>
            Does the data plot have tolerance.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotDataSet.OutOfToleranceColor">
            <summary>
            Defines the color used for displaying data graded
            out of tolerance.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotDataSet.ToleranceBandStyle">
            <summary>
            Gets or sets the style on the tolerance band lines
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotDataSet.AbsTolerance">
            <summary>
            The value of the tolerance expressed as absolute.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotDataSet.PctTolerance">
            <summary>
            The value of the tolerance expressed as a percentage.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotDataSet.ToleranceBandColor">
            <summary>
            THe color of the tolerance band.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotDataSet.Visible">
            <summary>
            THe ability to see any given data set.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotDataSet.EnabledToleranceBand">
            <summary>
            THe ability to see any tolerance band
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotDataSet.YAxisType">
            <summary>
            How to handle the data coming into the dataset.  Should
            correspond with the Type of axis used on the plotter.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotDataSet.XAxisType">
            <summary>
            How to handle the data coming into the dataset.  Should
            correspond with the Type of axis used on the plotter.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotDataSet.YOffset">
            <summary>
            The amount to translate this dataset in the Y direction
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotDataSet.XOffset">
            <summary>
            The amount to translate this dataset in the X direction.  Note:
            this value is expected to be from the original 0.0 origin.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotDataSet.Add(System.Single,System.Single)">
            <summary>
            Adds the given point with the default color.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotDataSet.GetIntersect(System.Single,System.Single,System.Single@)">
            <summary>
            Since C# does not provide the C++ multimap with lower_bound(), upper_bound() 
            interfaces, we'll have to emulate this behavior to figure out exactly where we
            might intersect.  The assumption here is also, that the data is contiguous.
            </summary>
            <param name="index_value">The X value of the marker.</param>
            <param name="tolerance">The tolerance.</param>
            <param name="intersect_value">The outputed Y values of the marker.</param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotDataSet.TranslateData(System.Single,System.Single)">
            <summary>
            This method adjusts all the data in the dataset per the 
            amount given in the passed parameters.
            </summary>
            <param name="xtrans">The amount to shift in the X direction</param>
            <param name="ytrans">The amount to shift in the Y direction</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotDataSet.GetXValues">
            <summary>
            This Function returns the X values interlaced within
            the Data list. This function is designed
            to work for an interlaced list of m_FlattenSize only.
            </summary>
            <returns>A float array with the X values.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotDataSet.GetYValues">
            <summary>
            This Function returns the Y values interlaced within
            the Data list. This function is designed
            to work for an interlaced list of m_FlattenSize only.
            </summary>
            <returns>A float array with the Y values.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotDataSet.GetXValues(System.Double[]@)">
            <summary>
            This Function returns the X values interlaced within
            the Data list. This function is designed
            to work for an interlaced list of m_FlattenSize only.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotDataSet.GetYValues(System.Double[]@)">
            <summary>
            This Function returns the Y values interlaced within
            the _Data list. This function is designed
            to work for an interlaced list of m_FlattenSize only.
            </summary>
            <returns>A float array with the Y values.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotDataSet.GetValuesAtIndex(System.Int32)">
            <summary>
            This Function returns an X,Y pair located at position
            "index" from the Data list. This function is designed
            to work for an interlaced list of order 2 only.
            </summary>
            <param name="index">The index we are interested in.</param>
            <returns>A float array of size 2 with the X,Y pair. Null if the requested index was out of bounds.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotDataSet.GetFirstIndexAtValue(System.Single)">
            <summary>
            This Function returns an index position for the first and closest 
            occurance of the value. For data that loops back only the first index will
            be returned.  This function is designed
            to work for an interlaced list of order 2 only.
            </summary>
            <param name="value">The value to look up with.</param>
            <returns>Index closest to value, -1 if unfound</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotDataSet.ReplaceColor(System.Drawing.Color)">
            <summary>
            Replaces the current color (_Color) in the _ColorData array with the passed color.
            </summary>
            <param name="value">The color to replace _Color with in _ColorData.</param>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.GLExtensionInfo.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GLExtensionInfo.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.GLExtensionInfo.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.MasterPlotDataSet.DependentsVisible">
            <summary>
            Sets whether or not the dependent data sets should be displayed. 
            If this dataset is visible AND this property is true then the
            dependent data sets will be displayed.  Otherwise they will not
            be displayed.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.PlotRenderer._AutoScaleTiers">
            <summary>
            An array the AutoScaleData() function uses to make the graph labels look cleaner.
            So this is the fix scale values.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.m_GridLinesLength">
            <summary>
            The length of the array that contains the lines that need to be drawn for the grid.  This is
            also the start index of the Grid Points.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.m_GridPointsLength">
            <summary>
            The length of the array that contains all the points for the grid.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.DrawToleranceOnTop">
            <summary>
            When true, the Tolerance label is drawn on the top left of the plot area.  When
            false it is drawn at the bottom left on-line with the X-Axis label.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.ShowPlusMinusTolerance">
            <summary>
            When true, display Plus-Minus symbol prior to the Tolerance value, otherwise dont display it.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.ReverseDataSetOrder">
            <summary>
            By default the datasets are drawn starting at the first one 
            and then all others are drawn on top of it, so the last
            dataset added gets drawn on top.  Setting this property
            to True will change that to be the opposite (First dataset drawn
            last/on top of the others.)
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.Active">
            <summary>
            Check too see if its active.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.Blending">
            <summary>
            Check to see if blending is enabled. 
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.AntiAliasedLines">
            <summary>
            Check for Anti-aliased lines.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.YAxis">
            <summary>
            The Y axis.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.XAxis">
            <summary>
            The X axis.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.PanOffset">
            <summary>
            //The offset of objects.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.AxisColor">
            <summary>
            The color of the axis.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.AxisThickness">
            <summary>
            The thickness of the axis.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.BackgroundColor">
            <summary>
            The background color.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.ZoomX">
            <summary>
            The amount zoomed on the X.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.ZoomY">
            <summary>
            The amount zoomed on the Y.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.DataSets">
            <summary>
            A list of plot data. 
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.ShowCursor">
            <summary>
            Check if cursor is enabled.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.MousePosition">
            <summary>
            The mouse position.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.AllDataSetsStatic">
            <summary>
            Check to see if dat sets are static.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.ShowOrigin">
            <summary>
            Check to show the origin.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.OriginColor">
            <summary>
            The color of the origin.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.ShowGrid">
            <summary>
            Check to see if grid is enabled.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.MajorGridColor">
            <summary>
            The color of the outer grid lines.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.MinorGridColor">
            <summary>
            The color of the dots used for the grid.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.GridThickness">
            <summary>
            The thickness of the grid lines.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.ShowMarkers">
            <summary>
            Check to see if the start marker is enabled.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.StartMarkerColor">
            <summary>
            The color of the start marker.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.EndMarkerColor">
            <summary>
            The color of the end marker.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.MarkerThickness">
            <summary>
            The thickness of the marker.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.MarkerIntersectionColor">
            <summary>
            The color of the intersection point text.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.MarkerUsesDataSetColor">
            <summary>
            If true, the marker intersection text will be the same
            color as the dataset.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.ToleranceLabel">
            <summary>
            Labels on the plot.
            </summary>
            <summary>
            The Tolerance values for the graph
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.DrawingAreaHighlight">
            <summary>
            Check to see if your drawing the zoom.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.AreaHighlightXOnly">
            <summary>
            Forces area zoom to ignore y attributes of area zoom when highlighting.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.AreaHighlightBottomLeft">
            <summary>
            The bottom left corner of the zoom square.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.AreaHighlightTopRight">
            <summary>
            The top right coroner of the zoom square.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.ShowOverlays">
            <summary>
            Everything on the graph except the plot data sets.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.ShowLegend">
            <summary>
            Check to see if legend is enabled.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.AutoScaleTiers">
            <summary>
            A set scale the tick can be labeled.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.PlotTitle">
            <summary>
            Check to turn on\off the plot label title.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.ShowActive">
            <summary>
            Enables activatable features.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.AutoZoomMode">
            <summary>
            Check to turn on\off the AutoZoomMode.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.ActualHorizontalMargin">
            <summary>
            Gets the total actual margin for the left and right sides.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.ActualVerticalMargin">
            <summary>
            Gets the total actual margin for the top and bottom.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.XAxisMin">
            <summary>
            Gets the lowest value on the x-axis.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.XAxisMax">
            <summary>
            Gets the highest value on the x-axis.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.YAxisMin">
            <summary>
            Gets the lowest value on the y-axis.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.YAxisMax">
            <summary>
            Gets the highest value on the y-axis.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.IntersectPositions">
            <summary>
            Gets the list of intersection points for each data set in the plotter.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.Initialize">
            <summary>
            Initializes everything so that the program can run.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.AntiAliasing">
            <summary>
            Anti-aliasing is the technique of minimizing the distortion artifacts 
            known as aliasing when representing a high-resolution signal at a lower resolution.
            It makes object look better instead of pixelated.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.AddDataSet(Csf.Imets.ToolCore.Common.Controls.PlotDataSet)">
            <summary>
            Add a data set(new data to plot).
            </summary>
            <param name="new_data_set">a new PlotDataSet</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.PreDrawScene">
            <summary>
            Setup all OpenGL stuff.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.PreDrawPlotData">
            <summary>
            Setup everything for the plot data grid.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.RenderDisplayList(System.Int32)">
            <summary>
            Render the display lists.
            </summary>
            <param name="ID">The display ID.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.RenderDisplayList(System.Single[],System.Byte[],Csf.Imets.ToolCore.Common.Controls.PlotDataSetStyle,Csf.Imets.ToolCore.Common.Controls.PlotDataSet)">
            <summary>
            Render the display lists.
            </summary>
            <param name="data">Specifies a pointer to the first coordinate of the
             first vertex in the array. </param>
            <param name="colorData">Number of indicies to be rendered. </param>
            <param name="style">What GL draw mode.</param>
            <param name="info">characteristics info of the GL. </param>                
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.DrawPlotData">
            <summary>
            Draws the plot data and origin.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.DrawOrigin">
            <summary>
            Draws the origin.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.DrawAxisView">
            <summary>
            Draws untextured elements(axis lines, grid, marker, area zoom, legend, active box).
            And the textured elements(tick labels, cursor, plot labels, zoom information, fps).
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.DrawActiveBox">
            <summary>
            Draws the box the grid is in.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.DrawCursor">
            <summary>
            Displays and draws the cusrors (X,Y) to the screen.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.DrawGrid">
            <summary>
            Draws the grid.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.DrawVBO(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="id">VBOArray</param>
            <param name="beginIndex">The index the vertices start from</param>
            <param name="count">The number of indices to draw</param>
            <param name="drawMethod"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.DrawAxisLines">
            <summary>
            Draws the axis lines and labels.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.DrawZoom">
            <summary>
            Draws the zoom information as a percent.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.DrawTolerance">
            <summary>
            Draws the tolerance infomation.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.DrawTicks">
            <summary>
            Draws the tick lines.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.DrawTickLabels">
            <summary>
            Labels every other tick.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.DrawAreaHighlight">
            <summary>
            Draws the blue highlight area.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.DrawMarker">
            <summary>
            Draws the marker.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.DrawMarkerAtLocation(System.Drawing.PointF,System.Drawing.Color)">
            <summary>
            Draws a marker the location specified
            </summary>
            <param name="plot_position">plot position in axis coordinates</param>
            <param name="color">Color of the marker</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.DrawLegend">
            <summary>
            Draws the legend.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.DrawAnnotations(Csf.Imets.ToolCore.Common.Controls.PlotDataSet)">
            <summary>
            Draws the annotation text for a given plot data set.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.GetPixelDelta">
            <summary>
            Based on the size of the viewable area, this method returns
            the "delta" in the x and y directions for 1 pixel in gl coordinates.
            If the width is 100 and the GlPlot is 1000, each pixel represents 10 points.
            </summary>
            <returns>The Delta X and Y stored in a PointF</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.SetPlotView">
            <summary>
            Resizes and set the plotter window.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.ResizeGLPlot">
            <summary>
            Resizes the actual plot itself.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.PlotViewChanged">
            <summary>
            If the Plot view has changed get the new dimentions.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.SetHUDView">
            <summary>
            Set the heads up display.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.Resize">
            <summary>
            Resizes the whole window.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.SetAxisChanged">
            <summary>
            Set that the axis have changed.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.AxisChanged">
            <summary>
            Reset the axis.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.AutoScaleData(System.Double,System.Double,System.Double,System.UInt32,System.Double@)">
            <summary>
            When you zoom, you can get numbers that can make the graph hard to read.
            This function will "clamp" the graph labels to an easier to read graph.
            Returning a scale value that will fit you desired minimums and maximums.
            </summary>
            <param name="GridSize">The value between each tick.</param>
            <param name="Minimum">The X and Y minimums.</param>
            <param name="Maximum">The X and Y maximums.</param>
            <param name="NumofTicks">How many ticks the graph has.</param>
            <param name="NewMin">Outputs a new minimum.</param>
            <returns>Scale value.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.ScaleDataX">
            <summary>
            This function sets the X axis to the appropriate scale value.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.ScaleDataY">
            <summary>
            This function sets the Y axis to the appropriate scale value.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.AreaZoom">
            <summary>
            The actual area you zoomed.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.GetFormattedString(System.String,System.Double,Csf.Imets.ToolCore.Common.Controls.AxisType)">
            <summary>
            Returns a formatted string per the specified format provided unless the value is greater
            than 100000 in which case it returns a scientific notation formatted value like 1.789E5
            </summary>
            <param name="format">The default format for the string</param>
            <param name="value">The value being formatted</param>
            <returns>A string of the value in either the default (passed) format or in scientific notation.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PlotRenderer.SetXAxisType(Csf.Imets.ToolCore.Common.Controls.AxisType)">
            <summary>
            Sets all the PlotDataSets' XAxisType to the value passed to the method.
            </summary>
            <param name="newAxisType">The axis type to change the X axis to.</param>
        </member>
        <member name="T:Csf.Imets.ToolCore.Common.Controls.UpdateMethodType">
            <summary>
            Methods for  how the plot will be redrawn
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.Plotter.Siblings">
            <summary>
            Sibling plotters linked to this plotter, updates affect siblings as well
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.Plotter.PlotControls">
            <summary>
            Gets instance of plotter controls.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.Plotter.AllowMouseInteraction">
            <summary>
            Enables/Disables user interaction via common mouse controls
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.Plotter.AllowKeyboadInteraction">
            <summary>
            Enables/Disables user interaction via keyboard commands
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.Plotter.ReverseDataSetOrder">
            <summary>
            Allows the dataset draw order to be reversed.  When true the 
            first dataset added to the dataset list gets drawn last / on top
            of all the others.  Otherwise they are drawn in the order 
            they appear in the list.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.Plotter.Activate">
            <summary>
            Activate the controls.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.Plotter.Deactivate">
            <summary>
            Deactivate the controls.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.Plotter.ChangeXAxisType(Csf.Imets.ToolCore.Common.Controls.AxisType)">
            <summary>
            This method provides a mechanism for allowing a plot user to
            change all dataset's x axis type without having to remove and
            add all their datasets.
            </summary>
            <param name="newAxisType"></param>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.Plotter.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.Plotter.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.Printer.Print(System.Boolean)">
            <summary>
            Prints the document directly or shows the printer options based on showOptions parameter.
            </summary>
            <param name="showOptions">If true, the options page is displayed before printing.  
            Otherwise the current settings are used (be sure to initialize to what options you want!).</param>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.PrinterOptionsForm.Landscape">
            <summary>
            A bool value stating weather the printer should print
            pages in a  landscape format.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.PrinterOptionsForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PrinterOptionsForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.PrinterOptionsForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Controls.ToolTipEnabled.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.ToolTipEnabled.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.ToolTipEnabled.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Controls.WpfRenderer.IGlToWPFRenderer.WPFImage">
            <summary>
            The Image that will display the current visual in the bitmap.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Controls.WpfRenderer.IGlToWPFRenderer.SetContext(Csf.Imets.ToolCore.OpenGL.GlDIB)">
            <summary>
            Sets the context of the renderer to use the glDib. 
            </summary>
            <param name="glDib">The device independent bitmap that the renderer is drawing to.</param>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.ColorManager.m_MediaColors">
            <summary>
            This is a list of colors used for WPF applications
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.ColorManager.m_DrawingColors">
            <summary>
            This is a list of colors used for .NET 2.0 applications
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.EnhancedDataTable.SelectDistinct(System.String,System.String,System.String)">
            <summary>
            Unfortunately the Expression engine in the DataTable class does not provide 
            support for the select distinct method.  So we'll implement our own for now,
            we can always beef up the container we're using here to SQL if performance is
            bad.  This currently assumes the column is a column of strings.
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="T:Csf.Imets.ToolCore.Common.FilePath">
            <summary>
            Contains static Utility method(s) for interacting with paths. 
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.FilePath.GetToolTipDisplayPath(System.String)">
            <summary>
            Standard mechanism for IMETS tools to get a filename and path suitable for
            display in tooltip messages for "Save" other button types.
            </summary>
            <param name="fullPath">The full path to the file who's path needs to be truncated to just ParentDir\filename
            If something that isn't a full path is passed to this method then it may return just the filename or what was
            input.</param>
            <returns>If fullPath is less than 40 characters then just returns the path, otherwise it truncates the path
            to just include the parent directory.</returns>
        </member>
        <member name="T:Csf.Imets.ToolCore.Common.History">
            <summary>
            This Class provides undo/redo and a history capability to applications.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.History.CurrentState">
            <summary>
            Gets the CurrentState.
             </summary>
             <value>The CurrentState.</value>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.History.MaxStates">
            <summary>
            Number of history actions retained. Newer additions
            drop off older ones if count is greater then states.
            A value of 0 indicates no limit.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.History.StateList">
            <summary>
            Gets the state list.
            </summary>
            <value>The state list.</value>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.History.CanUndo">
            <summary>
            Gets a value indicating whether this instance can undo.
            </summary>
            <value><c>true</c> if this instance can undo; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.History.CanRedo">
            <summary>
            Gets a value indicating whether this instance can redo.
            </summary>
            <value><c>true</c> if this instance can redo; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.History.AddAction(Csf.Imets.ToolCore.Common.Action)">
            <summary>
            Adds the action.
            </summary>
            <param name="newAction">The new action.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.History.Undo">
            <summary>
            Undoes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.History.Undo(System.Int32)">
            <summary>
            Undoes this instance back to the given index.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.History.Redo">
            <summary>
            Redoes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.History.Redo(System.Int32)">
            <summary>
            Redoes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.History.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Common.IO.GuiLayoutFile">
            <summary>
            Contains static methods for use in interacting with GuiLayoutFiles 
            generated by the DotNetBarManager.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.IO.GuiLayoutFile.StartDocumentTag">
            <summary>
            The actual start documents section xml tag.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.IO.GuiLayoutFile.EndDocumentTag">
            <summary>
            The actual end documents section xml tag.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.IO.GuiLayoutFile.GetDocumentSection(System.String)">
            <exception cref="T:System.IO.FileNotFoundException"></exception>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.IO.GuiLayoutFile.StripDocumentSection(System.String)">
            <exception cref="T:System.IO.FileNotFoundException"></exception>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.IO.MemoryMappedFiles.MemoryMappedFile.MappedSize">
            <summary>
            Currently Mapped Size for a Mapped View in Bytes
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.IO.MemoryMappedFiles.MemoryMappedFile.MappedOffset">
            <summary>
            Byte Offset for Mapped View
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromSize(System.String,System.Int64)">
            <summary>
            This creates an empty Map File that has the given size.
            </summary>
            <param name="mapName">The name to store the map under. [Optional]</param>
            <param name="size">The size of the memory map file in bytes.</param>
            <returns></returns>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.IO.MemoryMappedFiles.MemoryMappedViewAccessor.MappedView.BaseAddress">
            <summary>
            This is the base address for the mapped view ( this address is offset in the MapFile based on Offset )
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.IO.MemoryMappedFiles.MemoryMappedViewAccessor.MappedView.Length">
            <summary>
            The length in bytes of the mapped view
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.IO.MemoryMappedFiles.MemoryMappedViewAccessor.MappedView.Offset">
            <summary>
            This is the offset within the mapped file for this view
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.IO.MemoryMappedFiles.MemoryMappedViewAccessor.MappedView.MapFile">
            <summary>
            The file of which this view is mapped
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.IO.MemoryMappedFiles.MemoryMappedViewAccessor.MappedView.IsMapped">
            <summary>
            A flag indicating the mapped state of this MappedView
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.IO.MemoryMappedFiles.MemoryMappedViewAccessor.MappedView.Overlap">
            <summary>
            An additional length in bytes to map into a view.  This overlap amount is intended to allow mappings
            that are longer than memory region, since our Contains method only looks at start point and not end point
            also so that we will only map 1 large view into memory at once
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.IO.MemoryMappedFiles.MemoryMappedViewAccessor.MappedView.Item(System.Int64)">
            <summary>
            Returns the memory location associated with this offset.  The offset 
            is assumed to be relative to the MapFile and not this view.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.IO.MemoryMappedFiles.MemoryMappedViewAccessor.MappedView.AllowWrite">
            <summary>
            Allows the mapped view to be written to.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.IO.MemoryMappedFiles.MemoryMappedViewAccessor.MappedView.Contains(System.Int64)">
            <summary>
            If this MappedView contains the offset relative to the map file this method returns true.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.IO.MemoryMappedFiles.MemoryMappedViewAccessor.MaxViewSize">
            <summary>
            Max Size for a Mapped View in Bytes
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.IO.MemoryMappedFiles.MemoryMappedViewAccessor.AllowWrite">
            <summary>
            Allows the mapped view to be written to.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.MappedDriveState.AlreadyMapped">
            <summary>
            The UNC Path was already mapped.  This may make it so the requested drive letter doesn't
            match the actual drive letter for the UNC path.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.MappedDriveState.Mapped">
            <summary>
            Successfully mapped the drive.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.MappedDriveState.NotMapped">
            <summary>
            Was not able to map the drive.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.MappedDriveState.Unknown">
            <summary>
            Not sure...bad state.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.MappedDrive.Status">
            <summary>
            Provides output details for the different system commands.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.MappedDrive.GetArguments">
            <summary>
            Gets the "net" command arguments for this object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.MappedDrive.MapDrive">
            <summary>
            Attempts to map the drive.
            </summary>
            <returns>The state of the MappedDrive (whether it was successful or not)</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.MappedDrive.UnMapDrive">
            <summary>
            Attempts to unmap the MappedDrive.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.MappedDrive.FindMappedDriveLetter(System.String)">
            <summary>
            Given a UNC Path it returns the drive letter (if the UNC path is mapped)
            </summary>
            <param name="UncPath">A UNC path e.g. "\\csf\simdocs"</param>
            <returns>A drive letter (e.g. "C:" or "" if unsuccessful</returns>
        </member>
        <member name="T:Csf.Imets.ToolCore.Common.MathX">
            <summary>
            Static methods to help perform complex math operations
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.MathX.m_OctaveNominalCenterFreqs">
            <summary>
            Nominal center frequencies for the 1/3 octave bands. (index = band number - 1, i.e 
            index is zero based.)
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.MathX.m_OctaveExactCenterFreqs">
            <summary>
            The exact center frequencies for the 1/3 octave bands. (index = band number - 1, i.e 
            index is zero based.)
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.MathX.m_OctaveBandBoundaries">
            <summary>
            Lower and Upper 1/3 octave band boundaries.  This corresponds to the center frequency
            arrays in that array[index] = lower band boundary and array[index + 1] = upper band boundary.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.MathX.DotProduct(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Performs a DotProduct on the two points.
            </summary>
            <param name="p1">Point 1</param>
            <param name="p2">Point 2</param>
            <returns>The result.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.MathX.DegreesToRadians(System.Double)">
            <summary>
            Converts degrees to radians
            </summary>
            <param name="degrees">The degrees</param>
            <returns>Value in radians</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.MathX.RadiansToDegrees(System.Double)">
            <summary>
            Converts radians to degrees
            </summary>
            <param name="radians">value in radians</param>
            <returns>value in degrees</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.MathX.Squeeze(System.Double,System.Double,System.Double)">
            <summary>
            Returns the value if it is between the min and max
            otherwise it will return the min if the value is 
            less than the min or the max if the value is greater than 
            the max.
            </summary>
            <param name="value">The value to squeeze</param>
            <param name="min">The min value</param>
            <param name="max">The max value</param>
            <returns>a value between the min and max inclusive.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.MathX.Distance(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Calculates the distance between two points.
            </summary>
            <param name="point1">Point 1</param>
            <param name="point2">Point 2</param>
            <returns>The distance between the two points.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.MathX.DegreesFrom(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Calculates the angle between two points.
            </summary>
            <param name="point1">Point 1</param>
            <param name="point2">Point 2</param>
            <returns>The angle in degrees</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.MathX.DegreesFrom(System.Windows.Point,System.Windows.Point)">
            <summary>
            Calculates the angle between two points.
            </summary>
            <param name="point1">Point 1</param>
            <param name="point2">Point 2</param>
            <returns>The angle in degrees</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.MathX.DegreesFrom(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Calculates the angle between two points.
            </summary>
            <param name="x0">Point 1 X value</param>
            <param name="y0">Point 1 Y value</param>
            <param name="x1">Point 2 X value</param>
            <param name="y1">Point 2 Y value</param>
            <returns>The angle in degrees</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.MathX.LawOfCosinesSide(System.Double,System.Double,System.Double)">
            <summary>
            Calculates the side of a triangle using the law of Cosines.
            </summary>
            <param name="SideA">Side A</param>
            <param name="SideB">Side B</param>
            <param name="angleC">Angle opposite of the calculated side.</param>
            <returns>Side C</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.MathX.LawOfCosinesAngle(System.Double,System.Double,System.Double)">
            <summary>
            Calculates the angle of the triangle using the law of Cosines.
            </summary>
            <param name="SideA">Side A</param>
            <param name="SideB">Side B</param>
            <param name="SideC">Side C</param>
            <returns>The angle across from side C</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.MathX.AngleBetweenTwoLines(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Calculates the angle between two connected lines
            </summary>
            <param name="pointA">First Point on Line</param>
            <param name="pointB">Second Point on Line and First Point on Second Line</param>
            <param name="pointC">Third Point on Line</param>
            <returns>The angle between the two lines in degrees</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.MathX.PythagoreanTheorem(System.Double,System.Double)">
            <summary>
            Calculates the length of a side using PythagoreanTheorem
            </summary>
            <param name="SideA">Side A length</param>
            <param name="SideB">Side B length</param>
            <returns>Side C length</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.MathX.RotatePoint(System.Drawing.PointF,System.Drawing.PointF,System.Double)">
            <summary>
            Rotates a point a given number degrees around another point.
            </summary>
            <param name="point">The point to rotate.</param>
            <param name="rotatePoint">The point to rotate around</param>
            <param name="degree">The number of degrees to rotate.</param>
            <returns>The new location of the rotated point</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.MathX.RotatePointAround(System.Drawing.PointF,System.Drawing.PointF,System.Double)">
            <summary>
            Rotates a point a given number degrees around another point.
            </summary>
            <param name="point">The point to rotate.</param>
            <param name="rotatePoint">The point to rotate around</param>
            <param name="degree">The number of degrees to rotate.</param>
            <returns>The new location of the rotated point</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.MathX.ListMin(System.Collections.Generic.List{System.Single})">
            <summary>
            Returns the minimum value in a given list.
            </summary>
            <param name="list">A list of values, not sorted.</param>
            <returns>The minimum value in the list or MaxValue if the list is empty.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.MathX.ListMin(System.Collections.Generic.List{System.Double})">
            <summary>
            Returns the minimum value in a given list.
            </summary>
            <param name="list">A list of values, not sorted.</param>
            <returns>The minimum value in the list or MaxValue if the list is empty.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.MathX.ListMin(System.Collections.Generic.List{System.Int32})">
            <summary>
            Returns the minimum value in a given list.
            </summary>
            <param name="list">A list of values, not sorted.</param>
            <returns>The minimum value in the list or MaxValue if the list is empty.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.MathX.ListMax(System.Collections.Generic.List{System.Single})">
            <summary>
            Returns the maximum value in a given list.
            </summary>
            <param name="list">A list of values, not sorted.</param>
            <returns>The maximum value in the list or MinValue if the list is empty.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.MathX.ListMax(System.Collections.Generic.List{System.Double})">
            <summary>
            Returns the maximum value in a given list.
            </summary>
            <param name="list">A list of values, not sorted.</param>
            <returns>The maximum value in the list or MinValue if the list is empty.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.MathX.ListMax(System.Collections.Generic.List{System.Int32})">
            <summary>
            Returns the maximum value in a given list.
            </summary>
            <param name="list">A list of values, not sorted.</param>
            <returns>The maximum value in the list or MinValue if the list is empty.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.MathX.ListMaxMin(System.Collections.Generic.List{System.Single},System.Single@,System.Single@)">
            <summary>
            Returns the Maximum and Minimum values in a list through the max and
            min "out" parameters
            </summary>
            <param name="list">The list to find the max and min for.  (It is expected that this
            list is unsorted.</param>
            <param name="max">The maximum value in the list or MinValue if the list is empty.</param>
            <param name="min">The minumum value in the list or MaxValue if the list is empty.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.MathX.ListMaxMin(System.Collections.Generic.List{System.Int32},System.Int32@,System.Int32@)">
            <summary>
            Returns the Maximum and Minimum values in a list through the max and
            min "out" parameters
            </summary>
            <param name="list">The list to find the max and min for.  (It is expected that this
            list is unsorted.</param>
            <param name="max">The maximum value in the list or MinValue if the list is empty.</param>
            <param name="min">The minumum value in the list or MaxValue if the list is empty.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.MathX.ListMaxMin(System.Collections.Generic.List{System.Double},System.Double@,System.Double@)">
            <summary>
            Returns the Maximum and Minimum values in a list through the max and
            min "out" parameters
            </summary>
            <param name="list">The list to find the max and min for.  (It is expected that this
            list is unsorted.</param>
            <param name="max">The maximum value in the list or MinValue if the list is empty.</param>
            <param name="min">The minumum value in the list or MaxValue if the list is empty.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.MathX.GetBestLog10Min(System.Double)">
            <summary>
            Returns the Log10 of the best minimum value for a bounding box that lines up to 
            a log scaled tick. 
            </summary>
            <param name="_Min">The Log10 of the minimum value requested for a scale</param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.MathX.GetBestLog10Max(System.Double)">
            <summary>
            Returns the Log10 of the best maximum value for a bounding box that lines up to 
            a log scaled tick. 
            </summary>
            <param name="_Max"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.MathX.CloseEnough(System.Double,System.Double)">
            <summary>
            Checks to see if two values are very close to one another.
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.MathX.GetBestOctaveMinMax(System.Double,System.Double,System.Double@,System.Double@)">
            <summary>
            This method basically takes the minimum and maximum values then returns the best minimum and
            maximum values that should be used for a 1/3 Octave plot.
            </summary>
            <param name="_Min">The requested minimum value.  (Assumes this is Log10 of what is displayed 
            to the user, which is a good assumption for Log and Octave plots.)</param>
            <param name="_Max">The requested maximum value.  (Assumes this is Log10 of what is displayed 
            to the user, which is a good assumption for Log and Octave plots.)</param>
            <param name="bestmin">Log10 of the best minimum 1/3 octave boundary.</param>
            <param name="bestmax">Log10 of the best maximum 1/3 octave boundary.</param>
            <returns>The number of ticks needed to satisfy this bestmin and bestmax.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.MathX.GetBestOctave(System.Double)">
            <summary>
            This method basically takes the minimum and maximum values then returns the best minimum and
            maximum values that should be used for a 1/3 Octave plot.
            </summary>
            <param name="value">The requested value to fit into an octave.  (Assumes this is Log10 of what is displayed 
            to the user, which is a good assumption for Log and Octave plots.)</param>
            <returns>The index of the octave the value fits within.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.MathX.NormalizeHeading(System.Double)">
            <summary>
            Returns a heading in the range of 1 to 360 degrees.  The actual return
            value will be 0.5 to 360.4 as they round down/up to 1 and 360 since the GUIs
            typically display ints between 1 and 360.
            </summary>
            <param name="heading">Heading to normalize in degrees</param>
            <returns>Heading in degress between 0.5 to 360.4</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.MathX.NormalizeLongitude(System.Double)">
            <summary>
            Normalizes longitude between 0 and 360 degrees.
            </summary>
            <param name="longitude">The longitude to normalize</param>
            <returns>A normalized longitude between 0 and 360.</returns>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.ModelGeometry.Frame.m_Up">
            Vector pointing in the up direction. 
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.ModelGeometry.Frame.m_Look">
            Vector pointing in the look direction. 
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.ModelGeometry.Frame.m_Position">
            Vector containing the position of the coordinate frame. 
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.Frame.Reset">
            Reset the frame. 
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.Frame.GetPositionRelativeTo(Csf.Imets.ToolCore.Common.ModelGeometry.Vector)">
            Get the position of the frame relative to a point. 
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.Frame.SetPosition(System.Double,System.Double,System.Double)">
            Set the position of the coordinate frame. 
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.Frame.Copy(Csf.Imets.ToolCore.Common.ModelGeometry.Frame)">
            Copies the contents a frame into this one. 
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.Frame.GetTransform">
            Creates a transform matrix and stores it in m. 
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.Frame.MoveBezierCurve(Csf.Imets.ToolCore.Common.ModelGeometry.Vector,Csf.Imets.ToolCore.Common.ModelGeometry.Vector,Csf.Imets.ToolCore.Common.ModelGeometry.Vector,System.Double)">
            Move along a bezier curve. 
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.Frame.MoveCatmullRom(Csf.Imets.ToolCore.Common.ModelGeometry.Vector,Csf.Imets.ToolCore.Common.ModelGeometry.Vector,Csf.Imets.ToolCore.Common.ModelGeometry.Vector,Csf.Imets.ToolCore.Common.ModelGeometry.Vector,System.Double)">
            Move along a catmullrom curve. 
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.Frame.RotateLocalX(System.Double)">
            Rotate around the local X axis. 
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.Frame.RotateLocalY(System.Double)">
            Rotate around the local Y axis. 
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.Frame.RotateLocalZ(System.Double)">
            Rotate around the local Y axis. 
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.Frame.Rotate(System.Double,System.Double,System.Double,System.Double)">
            Rotate around an arbitrary axis. 
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.Frame.LookAt(Csf.Imets.ToolCore.Common.ModelGeometry.Vector)">
            Orient the frame to look at a point. 
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.Frame.TurnTo(Csf.Imets.ToolCore.Common.ModelGeometry.Vector,System.Double)">
            Turn (angle) degrees toward a point. 
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.Frame.DistanceTo(Csf.Imets.ToolCore.Common.ModelGeometry.Vector)">
            Get the distance from this frame to a point. 
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.Frame.OffsetFrom(Csf.Imets.ToolCore.Common.ModelGeometry.Frame,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            Offset this frame from another frame. 
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.Frame.Follow(Csf.Imets.ToolCore.Common.ModelGeometry.Vector,System.Double)">
            Follow a given point a set distance away. 
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.GeodeticCoordinate.#ctor">
            Constructor 
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.GeodeticCoordinate.#ctor(System.Double,System.Double,System.Double)">
            Constructor. 
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.ModelGeometry.GeodeticFrame.m_earthSemimajorAxis">
            Earth Semimajor Axis. 
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.ModelGeometry.GeodeticFrame.m_flattening">
            Amount of flattening. 
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.GeodeticFrame.LookAt(System.Double,System.Double,System.Double)">
            Look at a position. 
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.GeodeticFrame.LookAt(Csf.Imets.ToolCore.Common.ModelGeometry.Vector)">
            Look at a position. 
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.GeodeticFrame.TurnTo(Csf.Imets.ToolCore.Common.ModelGeometry.Vector,System.Double)">
            Turn (angle) degrees toward a point. 
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.GeodeticFrame.RotateWorldY(System.Double)">
            Rotate around the world Y axis 
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.GeodeticFrame.RotateWorldUp">
            Match the frame with the World Y axis. 
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.GeodeticFrame.ConvertGeodeticToECEF(Csf.Imets.ToolCore.Common.ModelGeometry.GeodeticCoordinate)">
            Convert geodetic coordinates to ECEF (cartesian). 
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.GeodeticFrame.ConvertECEFToGeodetic(Csf.Imets.ToolCore.Common.ModelGeometry.Vector)">
            Convert ECEF to geodetic coordinates. 
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.GeodeticFrame.Update(Csf.Imets.ToolCore.Common.ModelGeometry.Orientation)">
            Use the position and orientation and update the frame. 
            This should get called if the frame members change. 
            This method is called automatially by the set methods. 
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.ModelGeometry.Matrix.XX">
            <summary>
            
            </summary> 
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.ModelGeometry.Matrix.XY">
            <summary>
            
            </summary> 
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.ModelGeometry.Matrix.XZ">
            <summary>
            
            </summary> 
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.ModelGeometry.Matrix.XW">
            <summary>
            
            </summary> 
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.ModelGeometry.Matrix.YX">
            <summary>
            
            </summary> 
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.ModelGeometry.Matrix.YY">
            <summary>
            
            </summary> 
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.ModelGeometry.Matrix.YZ">
            <summary>
            
            </summary> 
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.ModelGeometry.Matrix.YW">
            <summary>
            
            </summary> 
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.ModelGeometry.Matrix.ZX">
            <summary>
            
            </summary> 
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.ModelGeometry.Matrix.ZY">
            <summary>
            
            </summary> 
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.ModelGeometry.Matrix.ZZ">
            <summary>
            
            </summary> 
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.ModelGeometry.Matrix.ZW">
            <summary>
            
            </summary> 
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.ModelGeometry.Matrix.TX">
            <summary>
            
            </summary> 
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.ModelGeometry.Matrix.TY">
            <summary>
            
            </summary> 
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.ModelGeometry.Matrix.TZ">
            <summary>
            
            </summary> 
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.ModelGeometry.Matrix.TW">
            <summary>
            
            </summary> 
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.ModelGeometry.Matrix.AngleX">
            <summary>
            
            </summary>                
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.ModelGeometry.Matrix.AngleY">
            <summary>
            
            </summary>                
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.ModelGeometry.Matrix.AngleZ">
            <summary>
            
            </summary>                
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.ModelGeometry.RotationMatrix.XX">
            <summary>
            
            </summary> 
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.ModelGeometry.RotationMatrix.XY">
            <summary>
            
            </summary> 
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.ModelGeometry.RotationMatrix.XZ">
            <summary>
            
            </summary> 
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.ModelGeometry.RotationMatrix.YX">
            <summary>
            
            </summary> 
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.ModelGeometry.RotationMatrix.YY">
            <summary>
            
            </summary> 
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.ModelGeometry.RotationMatrix.YZ">
            <summary>
            
            </summary> 
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.ModelGeometry.RotationMatrix.ZX">
            <summary>
            
            </summary> 
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.ModelGeometry.RotationMatrix.ZY">
            <summary>
            
            </summary> 
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.ModelGeometry.RotationMatrix.ZZ">
            <summary>
            
            </summary> 
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.ModelGeometry.Vector.X">
            <summary>
            
            </summary>            
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.ModelGeometry.Vector.Y">
            <summary>
            
            </summary>            
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.ModelGeometry.Vector.Z">
            <summary>
            
            </summary>            
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.Vector.IsEqual(System.Double,System.Double)">
            Compares two doubles. Returns true if they are within tollerance (EPSILON). 
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.Vector.IsZero(System.Double)">
            Checks to see if a double is close to zero (EPSILON).  
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.Vector.IsZeroVector">
            Checks to see if all of the components are 0. 
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.Vector.Add(Csf.Imets.ToolCore.Common.ModelGeometry.Vector)">
            Add Vector r to this vector. 
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.Vector.Subtract(Csf.Imets.ToolCore.Common.ModelGeometry.Vector)">
            Subtract Vector r from this vector. 
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.Vector.Multiply(System.Double)">
            Scalor Multiply this vector times s. 
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.Vector.Multiply(Csf.Imets.ToolCore.Common.ModelGeometry.Matrix)">
            Multiply this vector times a matrix (matrix must be 4x4). 
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.Vector.Negate">
            Negate the vector (-1 * this). 
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.Vector.Dot(Csf.Imets.ToolCore.Common.ModelGeometry.Vector)">
            Perform a Dot Product between this vector and r. 
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.Vector.Cross(Csf.Imets.ToolCore.Common.ModelGeometry.Vector)">
            Perform a Cross Product between this vector and r. 
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.Vector.Length">
            Returns the length(magnitude) of the vector. 
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.Vector.LengthSq">
            Returns the length(magnitude) of the vector squared. 
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.Vector.Normalize">
            Normalizes the vector. 
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.Vector.Maximize(Csf.Imets.ToolCore.Common.ModelGeometry.Vector)">
            Sets this vector to the maximum components of this. 
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.Vector.Minimize(Csf.Imets.ToolCore.Common.ModelGeometry.Vector)">
            Sets this vector to the minimum components of this. 
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.Vector.Average(Csf.Imets.ToolCore.Common.ModelGeometry.Vector)">
            Sets this vector to the average of this vector and vector r. 
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.Vector.AngleBetween(Csf.Imets.ToolCore.Common.ModelGeometry.Vector)">
            Finds the angle between this vector and vector r. 
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.Vector.Component(Csf.Imets.ToolCore.Common.ModelGeometry.Vector)">
            Finds the distance this vector points in the direction of r. 
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.Vector.Project(Csf.Imets.ToolCore.Common.ModelGeometry.Vector)">
            Projects this vector onto vector r. 
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ModelGeometry.Vector.Reflect(Csf.Imets.ToolCore.Common.ModelGeometry.Vector)">
            Reflects this vector using vector r as the axis of reflection. 
        </member>
        <member name="T:Csf.Imets.ToolCore.Common.NaturalComparer">
            <summary>
            Natural Comparer class implementing a comparison
            for a natural order sort (abc, abc1, abc2, abc10, ...)
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.NaturalComparer.table">
            <summary>
            Table used for quicker string lookup
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.NaturalComparer.Compare(System.String,System.String)">
            <summary>
            Compare method that compares two strings
            </summary>
            <param name="x">string 1</param>
            <param name="y">string 2</param>
            <returns>stanard -1, 0, 1 comparison return value</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.NaturalComparer.PartCompare(System.String,System.String)">
            <summary>
            Compare two integer parts of the string
            </summary>
            <param name="left">left part of string</param>
            <param name="right">right part of string</param>
            <returns></returns>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Pcap.PacketHeader.TsSecs">
            <summary>
            timestamp seconds
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Pcap.PacketHeader.TsUsecs">
            <summary>
            timestamp microseconds
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Pcap.PacketHeader.InclLength">
            <summary>
            number of octets of packet saved in file
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.Pcap.PacketHeader.OrigLen">
            <summary>
            actual length of packet
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Pcap.GlobalHeader.MagicNumber">
            <summary>
            Magic number
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Pcap.GlobalHeader.VersionMajor">
            <summary>
            Major version number
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Pcap.GlobalHeader.VersionMinor">
            <summary>
            Minor version number
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Pcap.GlobalHeader.ThisZone">
            <summary>
            GMT to local correction
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Pcap.GlobalHeader.SigsFigs">
            <summary>
            Accuracy of timestamps
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Pcap.GlobalHeader.SnapLen">
            <summary>
            Max length of captured packets, in octets
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Common.Pcap.GlobalHeader.Network">
            <summary>
            Data Link Type
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.ClassCreator.m_PropertyRegistry">
            <summary>
            Stores all current properties.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.ClassCreator.m_Created">
            <summary>
            Weather an instance of the type has been created. 
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.ClassCreator.m_TypeBuilder">
            <summary>
            A type builder to build the new class.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ClassCreator.AddProperty(System.String,System.Type)">
            <summary>
            This method dynamically creates a get/set property with name 'propertyName' 
            of type 'propertyType'.  Additionally, as this class implements NotifyPropertyChanged,
            it will call OnPropertyChanged(propertyName) after a set is called.
            </summary>
            <param name="propertyName"></param>
            <param name="propertyType"></param>
            <returns></returns>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.QueuedEvent`1.m_TheEvent">
            <summary>
            The NetVdnClient initiating this event
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.QueuedEvent`1.m_Sender">
            <summary>
            The request that was sent.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Common.QueuedEvent`1.m_Args">
            <summary>
            The request that was sent.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.QueuedEvent`1.#ctor(System.EventHandler{`0},System.Object,`0)">
            <summary>
            Ctor
            </summary>
            <param name="theEvent">The event handler to be executed</param>
            <param name="sender">The object to be passed in as the sender on the event to be executed</param>
            <param name="args">The args to be passed in to the event to be executed.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.QueuedEvent`1.OnEventFired(System.Object)">
            <summary>
            Static method used to execute the event handler specified by the stateObject via
            the thread pool.
            </summary>
            <param name="stateObject">Expects a QueuedEvent object that contains
            a reference to the event, sender, and event args.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.QueuedEvent`1.ThreadPoolExecute(System.EventHandler{`0},System.Object,`0)">
            <summary>
            Method handles pushing the execution of an event handler onto the ThreadPool for execution.
            </summary>
            <param name="theEvent">The event to be executed</param>
            <param name="sender">The object to be used as the sender</param>
            <param name="args">The EventArgs (or parent class of args depending on the eventhandler type.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.StringX.StringToNumber(System.String)">
            <summary>
            Strings to number.
            </summary>
            <param name="number">The number.</param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.StringX.StringToColor(System.String)">
            <summary>
            Converts a string to Color
            </summary>
            <param name="color">The color.</param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.StringX.StringToPoint(System.String)">
            <summary>
            Converts a string to Point
            </summary>
            <param name="pt">The point.</param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.StringX.StringToSize(System.String)">
            <summary>
            Converts a string to Point
            </summary>
            <param name="sz">The number.</param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.StringX.EscapeSQL(System.String,System.Boolean)">
            <summary>
            Either escapes single quotes in a string or removes them from the string.
            The returned string is then adjusted such that it can be used in an SQL statement. 
            </summary>
            <param name="unescaped_str">String to escape.</param>
            <param name="strip">If true any ' appearing in the string are removed.</param>
            <returns>an escaped (or stripped) string.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.StringX.EscapeSQL(System.String)">
            <summary>
            Escapes single quotes in a string to send in an sql statement. 
            </summary>
            <param name="unescaped_str">String to escape.</param>
            <returns>an escaped string.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.StringX.FormatPointFWithYOnly(System.Drawing.PointF)">
            <summary>
            Returns a string with the Y value of Point formatted. To 3 decimal palces.
            </summary>
            <param name="point">The point whose Y value needs to be formated.</param>
            <returns>The string of the format.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.StringX.FormatPointF(System.Drawing.PointF)">
            <summary>
            Returns a string with the X,Y formated to 3 deciaml places.
            </summary>
            <param name="point">The point to format.</param>
            <returns>Point in string format.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ThreadHelper.InvokeAsync(System.MulticastDelegate,System.Object)">
            <summary>
            This method Invokes the specified event in a thread-safe manner. It 
            allows UI threads and other threads to recieve the event without problems.
            It's generic so it can be reused throughout the datamapper.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.ThreadHelper.InvokeAsync(System.MulticastDelegate,System.Object,System.Object)">
            <summary>
            This method Invokes the specified event in a thread-safe manner. It 
            allows UI threads and other threads to recieve the event without problems.
            It's generic so it can be reused throughout the datamapper.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Common.Import.User32">
            <summary>
            An interop class to provide access to User32 methods.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Common.Import.User32.TouchWindowFlag">
            <summary>
            The Window Touch Flags.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Common.Import.User32.RegisterTouchWindow(System.IntPtr,Csf.Imets.ToolCore.Common.Import.User32.TouchWindowFlag)">
            <summary>
            Register a WinForms Control to handle touch input.
            </summary>
            <param name="hWnd">The handle to the control.</param>
            <param name="flags">The type of touches that are handled.</param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Controls.MultiTouchControl.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Controls.MultiTouchControl.MultiTouchGesturePan(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Called when the Multi-Touch Pan gesture occurs.  This function is intended to be overridden.
            </summary>
            <param name="deltaX"></param>
            <param name="deltaY"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Controls.MultiTouchControl.MultiTouchGestureZoom(System.Double,System.Int32,System.Int32)">
            <summary>
            Called when the Multi-Touch Zoom gesture occurs.  This function is intended to be overridden.
            </summary>
            <param name="zoomFactor"></param>
            <param name="centerX"></param>
            <param name="centerY"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Controls.MultiTouchControl.MultiTouchGestureEnd">
            <summary>
            Indicates the end of a multi-touch gesture
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Controls.MultiTouchControl.AllowMultiTouchGestures">
            <summary>
            Property to determine if multi-touch gestures are allowed
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Controls.MultiTouchControl.AllowMultiTouchPanGesture">
            <summary>
            Property to determine if multi-touch pan gesture is allowed
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Controls.MultiTouchControl.AllowMultiTouchZoomGesture">
            <summary>
            Property to determine if multi-touch zoom gestures is allowed
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Controls.MultiTouchControl.AllowMultiTouchRotateGesture">
            <summary>
            Property to determine if multi-touch rotate gestures is allowed
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Controls.MultiTouchControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:Csf.Imets.ToolCore.Dal.Controls.BaseControl.OnNameChanged">
            <summary>
            This event passes through the DataSetManager's name changed event.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.Controls.BaseControl.DataSetBindingSource">
            <summary>
            Gets the DataSetBindingSource.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.Controls.BaseControl.DataSetManager">
            <summary>
            Gets or sets the DataSetManager for the control.
            This will also update event handlers.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.Controls.BaseControl.StatusBarVisible">
            <summary>
            Gets or sets whether or not the Status Bar is visible.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.Controls.BaseControl.LoadData">
            <summary>
            Gets the LoadData Command
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.Controls.BaseControl.SaveData">
            <summary>
            Gets the SaveData Command.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.Controls.BaseControl.UpdateData">
            <summary>
            Gets the UpdateData command.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.Controls.BaseControl.DisplayName">
            <summary>
            Gets or sets the Name of the DataSetManager.
            If DataSetManager is null it returns ""
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Controls.BaseControl.OnDataSetManagerBusyChanged(System.Object,System.EventArgs)">
            <summary>
            Fired when DataSetManager changes or the busy status of the DataSetManager changes.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Controls.BaseControl.DataSetManagerOnNameChanged(System.Object,System.EventArgs)">
            <summary>
            Executed when the DataSetManager's name changes (normally used for updating tabs.)
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Controls.BaseControl.DataSetManagerProgressChanged(System.Object,System.ComponentModel.ProgressChangedEventArgs)">
            <summary>
            Handles the progress changed event provided by the DataSetManager and displays
            progress using the base's progressbar.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Controls.BaseControl.DebugDataSetButtonItemClick(System.Object,System.EventArgs)">
            <summary>
            Occurs when the Debug Data Set Button Item is clicked.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Controls.BaseControl.UpdateExecuted(System.Object,System.EventArgs)">
            <summary>
            Method executed by the UpdateData command.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Controls.BaseControl.SaveExecuted(System.Object,System.EventArgs)">
            <summary>
            Method executed by the SaveData command.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Controls.BaseControl.LoadExecuted(System.Object,System.EventArgs)">
            <summary>
            Method executed by the LoadData command.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Controls.BaseControl.Shutdown(System.Object,DevComponents.DotNetBar.DockTabClosingEventArgs)">
            <summary>
            Handles the shutdown event when the control is closing.
            </summary>
            <param name="sender">N/A</param>
            <param name="args">N/A</param>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.Controls.BaseControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Controls.BaseControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Controls.BaseControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.Controls.GenericEditor.m_ColorizeRows">
            <summary>
            A variable to decide if the rows should be colorized.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.Controls.GenericEditor.DataSetManager">
            <summary>
            Gets or sets the DataSetManager.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.Controls.GenericEditor.ColorizeRows">
            <summary>
            Gets or sets whether or not the rows should be
            colorized. Will update the editor on change.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Controls.GenericEditor.SetTableSelections">
            <summary>
            Clears the selected tables and seets the selected table 
            combo box back to no selected.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Controls.GenericEditor.OnSelectedTableChanged(System.Object,System.EventArgs)">
            <summary>
             Occurs whenever the user selects a new table using the combo box. Updates the
             datagrid with the information with the newly selected table.
            </summary>
            <param name="sender">N/A</param>
            <param name="e">N/A</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Controls.GenericEditor.OnDgvEditorDataError(System.Object,System.Windows.Forms.DataGridViewDataErrorEventArgs)">
            <summary>
            Occurs whenever the DatagridView Editor throws a data error.
            Displays a message box with the current error. 
            And allows the user to cancel the transaction.
            </summary>
            <param name="sender">N/A</param>
            <param name="e">Information about the error that occured.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Controls.GenericEditor.OnDgvEditorCellFormatting(System.Object,System.Windows.Forms.DataGridViewCellFormattingEventArgs)">
            <summary>
            Occurs whenver a cell needs to be formatted for display.
            </summary>
            <param name="sender">N/A</param>
            <param name="e">Information about the cell that needs to be formatted.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Controls.GenericEditor.OnShowModificationsCheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Occurs whenever the Show Modifications button is changed.
            Toggles Colorize Rows.
            </summary>
            <param name="sender">N/A</param>
            <param name="e">N/A</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Controls.GenericEditor.OnDgvEditorColumnAdded(System.Object,System.Windows.Forms.DataGridViewColumnEventArgs)">
            <summary>
            Occurs whenever a column is added to the datagrid editor.
            </summary>
            <param name="sender">N/A</param>
            <param name="e">Information about the column that was added.</param>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.Controls.GenericEditor.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Controls.GenericEditor.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Controls.GenericEditor.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.Controls.NavDataSetEditor.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Controls.NavDataSetEditor.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Controls.NavDataSetEditor.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSet.a664_networkDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSet.a664_end_system_edeDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSet.a664_vl_rxDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSet.a664_vl_txDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSet.a664_subvl_txDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSet.a664_port_payload_mapDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSet.a664_rx_portDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSet.a664_tx_portDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSet.a664_well_known_nameDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSet.a664_well_known_serviceDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSet.a664_end_systemDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSet.a664_networkRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSet.a664_end_system_edeRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSet.a664_vl_rxRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSet.a664_vl_txRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSet.a664_subvl_txRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSet.a664_port_payload_mapRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSet.a664_rx_portRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSet.a664_tx_portRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSet.a664_well_known_nameRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSet.a664_well_known_serviceRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSet.a664_end_systemRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSet.a664_networkRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSet.a664_end_system_edeRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSet.a664_vl_rxRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSet.a664_vl_txRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSet.a664_subvl_txRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSet.a664_port_payload_mapRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSet.a664_rx_portRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSet.a664_tx_portRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSet.a664_well_known_nameRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSet.a664_well_known_serviceRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSet.a664_end_systemRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSetTableAdapters.a664_networkTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSetTableAdapters.a664_end_system_edeTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSetTableAdapters.a664_vl_rxTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSetTableAdapters.a664_vl_txTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSetTableAdapters.a664_subvl_txTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSetTableAdapters.a664_port_payload_mapTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSetTableAdapters.a664_rx_portTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSetTableAdapters.a664_tx_portTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSetTableAdapters.a664_well_known_nameTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSetTableAdapters.a664_well_known_serviceTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSetTableAdapters.a664_end_systemTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSetTableAdapters.TableAdapterManager">
             <summary>
            TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.A664DataSetTableAdapters.TableAdapterManager.UpdateUpdatedRows(Csf.Imets.ToolCore.Dal.A664.A664DataSet,System.Collections.Generic.List{System.Data.DataRow},System.Collections.Generic.List{System.Data.DataRow})">
             <summary>
            Update rows in top-down order.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.A664DataSetTableAdapters.TableAdapterManager.UpdateInsertedRows(Csf.Imets.ToolCore.Dal.A664.A664DataSet,System.Collections.Generic.List{System.Data.DataRow})">
             <summary>
            Insert rows in top-down order.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.A664DataSetTableAdapters.TableAdapterManager.UpdateDeletedRows(Csf.Imets.ToolCore.Dal.A664.A664DataSet,System.Collections.Generic.List{System.Data.DataRow})">
             <summary>
            Delete rows in bottom-up order.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.A664DataSetTableAdapters.TableAdapterManager.GetRealUpdatedRows(System.Data.DataRow[],System.Collections.Generic.List{System.Data.DataRow})">
             <summary>
            Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.A664DataSetTableAdapters.TableAdapterManager.UpdateAll(Csf.Imets.ToolCore.Dal.A664.A664DataSet)">
             <summary>
            Update all changes to the dataset.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSetTableAdapters.TableAdapterManager.UpdateOrderOption">
             <summary>
            Update Order Option
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.A664DataSetTableAdapters.TableAdapterManager.SelfReferenceComparer">
             <summary>
            Used to sort self-referenced table's rows
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.AvionicsPayloadDataSetTableAdapters.avionics_enumTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.AvionicsPayloadDataSetTableAdapters.avionics_payloadTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.AvionicsPayloadDataSetTableAdapters.avionics_data_objectTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.AvionicsPayloadDataSetTableAdapters.vdn_variableTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.AvionicsPayloadDataSetTableAdapters.avionics_enum_valueTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.AvionicsPayloadDataSetTableAdapters.TableAdapterManager">
             <summary>
            TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.AvionicsPayloadDataSetTableAdapters.TableAdapterManager.UpdateUpdatedRows(Csf.Imets.ToolCore.Dal.A664.AvionicsPayloadDataSet,System.Collections.Generic.List{System.Data.DataRow},System.Collections.Generic.List{System.Data.DataRow})">
             <summary>
            Update rows in top-down order.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.AvionicsPayloadDataSetTableAdapters.TableAdapterManager.UpdateInsertedRows(Csf.Imets.ToolCore.Dal.A664.AvionicsPayloadDataSet,System.Collections.Generic.List{System.Data.DataRow})">
             <summary>
            Insert rows in top-down order.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.AvionicsPayloadDataSetTableAdapters.TableAdapterManager.UpdateDeletedRows(Csf.Imets.ToolCore.Dal.A664.AvionicsPayloadDataSet,System.Collections.Generic.List{System.Data.DataRow})">
             <summary>
            Delete rows in bottom-up order.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.AvionicsPayloadDataSetTableAdapters.TableAdapterManager.GetRealUpdatedRows(System.Data.DataRow[],System.Collections.Generic.List{System.Data.DataRow})">
             <summary>
            Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.AvionicsPayloadDataSetTableAdapters.TableAdapterManager.UpdateAll(Csf.Imets.ToolCore.Dal.A664.AvionicsPayloadDataSet)">
             <summary>
            Update all changes to the dataset.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.AvionicsPayloadDataSetTableAdapters.TableAdapterManager.UpdateOrderOption">
             <summary>
            Update Order Option
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.AvionicsPayloadDataSetTableAdapters.TableAdapterManager.SelfReferenceComparer">
             <summary>
            Used to sort self-referenced table's rows
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.AvionicsPayloadDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.AvionicsPayloadDataSet.ClonePayload(Csf.Imets.ToolCore.Dal.A664.AvionicsPayloadDataSet.avionics_payloadRow)">
            <summary>
            This method will clone the passed in row with a new unique id.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.AvionicsPayloadDataSet.avionics_enumDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.AvionicsPayloadDataSet.avionics_payloadDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.AvionicsPayloadDataSet.avionics_data_objectDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.AvionicsPayloadDataSet.vdn_variableDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.AvionicsPayloadDataSet.avionics_enum_valueDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.AvionicsPayloadDataSet.avionics_enumRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.AvionicsPayloadDataSet.avionics_payloadRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.AvionicsPayloadDataSet.avionics_data_objectRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.AvionicsPayloadDataSet.vdn_variableRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.AvionicsPayloadDataSet.avionics_enum_valueRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.AvionicsPayloadDataSet.avionics_enumRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.AvionicsPayloadDataSet.avionics_payloadRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.AvionicsPayloadDataSet.avionics_data_objectRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.AvionicsPayloadDataSet.vdn_variableRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.AvionicsPayloadDataSet.avionics_enum_valueRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.Plugins.A429PhysPort">
            <summary>
             A429PhysPort Object
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.A429PhysPort.direction">
            <summary>
            XML Attribute describing the direction.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.A429PhysPort.bit_rate">
            <summary>
            XML Element describing the bit rate.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.Plugins.A429Signal">
            <summary>
            A429Signal is populated during deserialization of an XML file.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.A429Signal.direction">
            <summary>
            Xml Attribute describing the direction (IN or OUT).
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.A429Signal.element_used">
            <summary>
            XmlElement descibing if the element is used (yes or no).
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.Plugins.A429Word">
            <summary>
            A429Word is populated during deserialization of an XML file.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.A429Word.bit_length">
            <summary>
            XML Element describing the bit length.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.A429Word.SignalFormat">
            <summary>
            Array of XML Elements describing the Signal Format.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.A429Word.rate">
            <summary>
            XML Element describing the rate in Hz.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.A429Word.start_bit">
            <summary>
            XML Element describing the rate in 1-based start bit.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.A429Word.ssm_type">
            <summary>
            XML Element describing the SSM type.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.A429Word.ssm_name">
            <summary>
            XML Element describing the SSM name.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.A429Word.sdi_type">
            <summary>
            XML Element describing the SDI type.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.Plugins.BaseBusClass">
            <summary>
             BaseBusClass is designed to be inherited by other classes.
             It is populated during deserialization of an XML file.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.BaseBusClass.prev">
            <summary>
            Xml Attribute describing the previous id.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.BaseBusClass.id">
            <summary>
            Xml Attribute describing the id.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.BaseBusClass.next">
            <summary>
            Xml Attribute describing the next id.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.Plugins.BaseICDClass">
            <summary>
             BaseICDClass is designed to be inhertied by other ICD classes.
             It is populated during deserialization of an XML file.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.BaseICDClass.guid">
            <summary>
            Global unique identifier attribute which is populated during
            deserialization of an XML file.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.BaseICDClass.id">
            <summary>
            XML attribute describing the identifier.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.BaseICDClass.name">
            <summary>
             XML attribute describing the name.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.AnalogDiscInput">
            <summary>
            Holds Analog Discrete Input information
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.AnalogVarInput">
            <summary>
            Holds Analog Variable Input information
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.AnalogDiscOutput">
            <summary>
            Holds Analog Discrete Output information
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.AnalogVarOutput">
            <summary>
            Holds Analog Variable Output information
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.useZeroBasedOffsets">
            <summary>
            Indicates if using zero based offsets.
            False indicates 1-based offsets .
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.reportModifications">
            <summary>
            Report modifications to a log file
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.writeReportsToFiles">
            <summary>
            Write reports to a file
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.modificationsList">
            <summary>
            Holds a list of modifications
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.fIModel">
            <summary>
            Object to be deserialized
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.enumerationList">
            <summary>List of enumerations</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.prevDatabaseApps">
            <summary>List of Lrms in the database prior to parsing</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.prevDatabaseAppPayloadMaps">
            <summary>List of AppPayloadMaps in the database prior to parsing</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.prevDatabaseBuses">
            <summary>List of Buses in the database prior to parsing</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.prevDatabasePayloads">
            <summary>List of Payloads in the database prior to parsing</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.prevDatabaseDataObjects">
            <summary>List of DataObjects in the database prior to parsing</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.prevDatabaseEnumerations">
            <summary>List of Enumerations in the database prior to parsing</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.prevDatabaseEnumerationValues">
            <summary>List of EnumerationValues in the database prior to parsing</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.prevDatabaseDataObjectAliases">
            <summary>List of DataObjectAliases in the database prior to parsing</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.icdLrms">
            <summary> LRMs which have been added during an ICD parse </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.icdAppPayloadMaps">
            <summary> App Payload maps which have been added during an ICD parse </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.icdBuses">
            <summary> Buses which have been added during an ICD parse </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.icdPayloads">
            <summary> Payloads which have been added during an ICD parse </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.icdDataObjects">
            <summary> DataObjects which have been added during an ICD parse </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.icdDataObjectAliases">
            <summary> DataObjectAliases which have been added during an ICD parse </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.icdEnumerations">
            <summary> Enumerations which have been added during an ICD parse </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.icdEnumerationValues">
            <summary> EnumerationValues which have been added during an ICD parse </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.lrmIcdConflictList">
            <summary>ICD/Database LRM conflicts</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.busIcdConflictList">
            <summary>ICD/Database Bus conflicts</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.payloadIcdConflictList">
            <summary>ICD/Database Payload conflicts</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.dataObjectIcdConflictList">
            <summary>ICD/Database DataObject conflicts</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.dataObjectAliasIcdConflictList">
            <summary>ICD/Database DataObjectAlias conflicts</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.enumerationIcdConflictList">
            <summary>ICD/Database Enumeration conflicts</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.enumerationValueIcdConflictList">
            <summary>ICD/Database EnumerationValue conflicts</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.lrmOrphanList">
            <summary>LRM Database orphans (orphans after the database has been parsed)</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.busOrphanList">
            <summary>Bus Database orphans (orphans after the database has been parsed)</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.payloadOrphanList">
            <summary>Payload Database orphans (orphans after the database has been parsed)</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.dataObjectOrphanList">
            <summary>DataObject Database orphans (orphans after the database has been parsed)</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.dataObjectAliasOrphanList">
            <summary>DataObjectAlias Database orphans (orphans after the database has been parsed)</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.enumerationOrphanList">
            <summary>Enumeration orphans (orphans after the database has been parsed)</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.enumerationValueOrphanList">
            <summary>EnumerationValue orphans (orphans after the database has been parsed)</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.inputPinsDebugList">
            <summary>Holds list of input pins when parsing ICD</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.outputPinsDebugList">
            <summary>Holds list of output pins when parsing ICD</summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.DatabaseMetrics">
            <summary>
            Class used for storing various database metrics
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.DatabaseMetrics.Clear">
            <summary>
            Clears the count for the metrics
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.numVdnVariables">
            <summary>Number of Vdn Variables</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.numLrms">
            <summary>Number of Lrms</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.numAppPayloadMaps">
            <summary>Number of Application Payload Maps</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.numBuses">
            <summary>Number of Buses</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.numPayloads">
            <summary>Number of Payloads</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.numDataObjects">
            <summary>Number of Data Objects</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.numDataObjectAliases">
            <summary>Number of Data Object Aliases</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.numEnumerations">
            <summary>Number of Enumerations</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.numEnumerationValues">
            <summary>Number of Enumeration Values</summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.BoeingIcdFilePath">
            <summary>
            ICD path and filename
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.BoeingIcdEnumsFilePath">
            <summary>
            ICD Enums path and filename
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.LatestConflictFileName">
            <summary>
            Latest conflict File Name
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.BoeingIcdOutputFilePath">
            <summary>
            Get ICD output file path and filename
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.BoeingIcdDirectoryPath">
            <summary>
            ICD directory path only
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.OverwriteAlias">
            <summary>
            Overwrite user-defined alias's when parsing
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.Load">
            <summary>
            Load Boeing ICD
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.ParseBoeingIcd(System.String)">
            <summary>
            Parses the specified Boeing ICD
            </summary>
            <param name="icdFilePath"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.ParseBoeingIcdEnums(System.String)">
            <summary>
            Parses the specified Boeing ICD Enums
            </summary>
            <param name="icdEnumsFilePath"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.CreateConvenienceLists">
            <summary>
            Creates a set of lists for easy searching
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.WriteToDatabase">
            <summary>
            Write to the database
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.DetermineIcdConflicts">
            <summary>
            Make comparisons between ICD and prev database to determine conflicts and orphans
            </summary>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.DetermineDatabaseOrphans">
            <summary>
            Make comparisons within the database to find orphans
            </summary>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.ClearMetrics">
            <summary>
            Clear metrics
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.CleanUp">
            <summary>
            Clean up local lists to free up memory
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.ParsingMetricsString">
            <summary>
            Returns string which reports all the metrics
            </summary>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.MakeDatabaseQueries">
            <summary>
            Make database queries which can be used for future comparisons
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.DeserializeObject(System.String)">
            <summary>
            Deserialize the ICD.  This populates all clases in the
            FIModel.
            </summary>
            <param name="filename"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.DeserializeEnumsObject(System.String)">
            <summary>
            Deserialize the ICD Enums
            </summary>
            <param name="filename"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.WriteICDToDatabase">
            <summary>
            Writes the locally stored ICD to the database
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.WriteDesignPortUsageDataToDatabase(Csf.Imets.ToolCore.Dal.A664.Plugins.DesignPortUsage,Csf.Imets.ToolCore.Dal.A664.Plugins.DesignUsage,System.Boolean,System.Boolean)">
            <summary>
            Helper function for writing DesignPortUsage data to the database
            </summary>
            <param name="designPortUsage"></param>
            <param name="designUsage"></param>
            <param name="isSubscribe"></param>
            <param name="debugData"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.WriteSignalAnalogInputDataToDatabase(Csf.Imets.ToolCore.Dal.A664.Plugins.DesignPortUsage,Csf.Imets.ToolCore.Dal.A664.Plugins.DesignUsage,System.String,System.String,System.Boolean)">
            <summary>
            Write Signal Analog Input information to the database
            </summary>
            <param name="designPortUsage"></param>
            <param name="designUsage"></param>
            <param name="connector"></param>
            <param name="pin"></param>
            <param name="isSubscribe"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.WriteSignalAnalogOutputDataToDatabase(Csf.Imets.ToolCore.Dal.A664.Plugins.DesignPortUsage,Csf.Imets.ToolCore.Dal.A664.Plugins.DesignUsage,System.String,System.String,System.Boolean)">
            <summary>
            Write Signal Analog Output information to the database
            </summary>
            <param name="designPortUsage"></param>
            <param name="designUsage"></param>
            <param name="connector"></param>
            <param name="pin"></param>
            <param name="isSubscribe"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.WriteA429WordInfoToDatabase(Csf.Imets.ToolCore.Dal.A664.Plugins.SigFormat,Csf.Imets.ToolCore.Dal.A664.Plugins.DesignUsage,System.Boolean,Csf.Imets.ToolCore.Dal.A664.Plugins.DesignPortUsage)">
            <summary>
            Helper function for writing A429Word data to the database
            </summary>
            <param name="sigFormat"></param>
            <param name="designUsage"></param>
            <param name="isSubscribe"></param>
            <param name="designPortUsageParam"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.WriteA429GenericBlockInfoToDatabase(Csf.Imets.ToolCore.Dal.A664.Plugins.SigFormat,Csf.Imets.ToolCore.Dal.A664.Plugins.DesignUsage,System.Boolean,Csf.Imets.ToolCore.Dal.A664.Plugins.DesignPortUsage)">
            <summary>
            Helper function for writing A429GenericBlock data to the database
            </summary>
            <param name="sigFormat"></param>
            <param name="designUsage"></param>
            <param name="isSubscribe"></param>
            <param name="designPortUsageParam"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.GetPayloadName(Csf.Imets.ToolCore.Dal.A664.Plugins.SignalFormat[],System.String)">
            <summary>
            Get the payload name from the A429 Word
            </summary>
            <param name="signalFormatArray"></param>
            <param name="payloadName"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.CreateLrmFromDesignPortUsage(Csf.Imets.ToolCore.Dal.A664.Plugins.DesignPortUsage,Csf.Imets.ToolCore.Dal.A664.Plugins.DesignUsage,System.Boolean,System.Boolean)">
            <summary>
            Adds a new LRU/LRM (DesignUsage) which is the parent of the DesignPortUsage
            </summary>
            <param name="targetDesignPortUsage"></param>
            <param name="designUsage"></param>
            <param name="isSubscribe"></param>
            <param name="isOtherLRM"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.PopulateLrm(Csf.Imets.ToolCore.Dal.Avionics.Application,Csf.Imets.ToolCore.Dal.A664.Plugins.DesignUsage,System.Boolean)">
            <summary>
            Populate lrm which is an entry in the application table
            </summary>
            <param name="lrm"></param>
            <param name="designUsage"></param>
            <param name="isOtherLRM"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.InsertLrm(Csf.Imets.ToolCore.Dal.Avionics.Application)">
            <summary>
            Insert LRM
            </summary>
            <param name="lrm"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.LrmInfoString(Csf.Imets.ToolCore.Dal.Avionics.Application)">
            <summary>
            LRM information string
            </summary>
            <param name="lrm"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.PopulateBusFromA429Word(Csf.Imets.ToolCore.Dal.Avionics.Payloads.Payload,Csf.Imets.ToolCore.Dal.A664.Plugins.A429Word,Csf.Imets.ToolCore.Dal.A664.Plugins.DesignUsage,System.Boolean,System.Guid@,Csf.Imets.ToolCore.Dal.A664.Plugins.DesignPortUsage)">
            <summary>
            Populate bus which is an entry in the payload table
            </summary>
            <param name="bus"></param>
            <param name="a429Word"></param>
            <param name="designUsage"></param>
            <param name="isSubscribe"></param>
            <param name="lrmGuid"></param>
            <param name="designPortUsageParam"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.PopulateBusFromA429GenericBlock(Csf.Imets.ToolCore.Dal.Avionics.Payloads.Payload,Csf.Imets.ToolCore.Dal.A664.Plugins.A429GenericBlock,Csf.Imets.ToolCore.Dal.A664.Plugins.DesignUsage,System.Boolean,System.Guid@,Csf.Imets.ToolCore.Dal.A664.Plugins.DesignPortUsage)">
            <summary>
            Populate bus which is an entry in the payload table
            </summary>
            <param name="bus"></param>
            <param name="a429GenericBlock"></param>
            <param name="designUsage"></param>
            <param name="isSubscribe"></param>
            <param name="lrmGuid"></param>
            <param name="designPortUsageParam"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.PopulateUnknownBusTypeFromDesignPortUsage(Csf.Imets.ToolCore.Dal.Avionics.Payloads.Payload,Csf.Imets.ToolCore.Dal.A664.Plugins.DesignPortUsage,Csf.Imets.ToolCore.Dal.A664.Plugins.DesignUsage,System.Boolean,System.Guid@)">
            <summary>
            Populate bus which is an entry in the payload table
            </summary>
            <param name="bus"></param>
            <param name="designPortUsage"></param>
            <param name="designUsage"></param>
            <param name="isSubscribe"></param>
            <param name="lrmGuid"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.InsertBus(Csf.Imets.ToolCore.Dal.Avionics.Payloads.Payload)">
            <summary>
            Insert Bus into the payload table
            </summary>
            <param name="bus"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.BusInfoString(Csf.Imets.ToolCore.Dal.Avionics.Payloads.Payload)">
            <summary>
            Bus information string
            </summary>
            <param name="bus"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.PopulateBusMapping(Csf.Imets.ToolCore.Dal.Avionics.AppPayloadMap,Csf.Imets.ToolCore.Dal.Avionics.Payloads.Payload,Csf.Imets.ToolCore.Dal.A664.Plugins.DesignUsage,System.Boolean,System.Guid)">
            <summary>
            Populate bus mapping
            </summary>
            <param name="appPayloadMap"></param>
            <param name="bus"></param>
            <param name="designUsage"></param>
            <param name="isSubscribe"></param>
            <param name="lrmGuid"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.InsertBusMapping(Csf.Imets.ToolCore.Dal.Avionics.AppPayloadMap)">
            <summary>
            Insert bus mapping
            </summary>
            <param name="appPayloadMap"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.AppPayloadMapInfoString(Csf.Imets.ToolCore.Dal.Avionics.AppPayloadMap)">
            <summary>
            Application paryload information string
            </summary>
            <param name="appPayloadMap"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.PopulatePayload(Csf.Imets.ToolCore.Dal.Avionics.Payloads.Payload,Csf.Imets.ToolCore.Dal.A664.Plugins.A429Word,Csf.Imets.ToolCore.Dal.Avionics.Payloads.Payload)">
            <summary>
            Populate payload
            </summary>
            <param name="payload"></param>
            <param name="a429Word"></param>
            <param name="bus"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.Populate708Payload(Csf.Imets.ToolCore.Dal.Avionics.Payloads.Payload,Csf.Imets.ToolCore.Dal.A664.Plugins.A429GenericBlock,Csf.Imets.ToolCore.Dal.Avionics.Payloads.Payload)">
            <summary>
            Populate 708 payload
            </summary>
            <param name="payload"></param>
            <param name="a429GenericBlock"></param>
            <param name="bus"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.InsertPayload(Csf.Imets.ToolCore.Dal.Avionics.Payloads.Payload)">
            <summary>
            Insert Payload into database
            </summary>
            <param name="payload"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.PayloadInfoString(Csf.Imets.ToolCore.Dal.Avionics.Payloads.Payload)">
            <summary>
            Payload information string
            </summary>
            <param name="payload"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.PopulateDataObject(Csf.Imets.ToolCore.Dal.Avionics.Payloads.DataObject,Csf.Imets.ToolCore.Dal.A664.Plugins.ParamField,Csf.Imets.ToolCore.Dal.Avionics.Payloads.Payload)">
            <summary>
            Populate DataObject
            </summary>
            <param name="dataObject"></param>
            <param name="paramField"></param>
            <param name="payload"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.GetConversionFromDataFormatType(System.String)">
            <summary>
            Returns the DataObject.conversion value from the data_format_type
            </summary>
            <param name="dataFormatType"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.GetTypeFromDataFormatType(System.String)">
            <summary>
            Returns the DataObject.type value from the data_format_type
            Note: this type is not being used in LibApex, but will be represented in RTMM
            </summary>
            <param name="dataFormatType"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.PopulateDataObject(Csf.Imets.ToolCore.Dal.Avionics.Payloads.DataObject,Csf.Imets.ToolCore.Dal.A664.Plugins.SignalFormat,Csf.Imets.ToolCore.Dal.Avionics.Payloads.Payload,System.String,System.String)">
            <summary>
            Populate DataObject
            </summary>
            <param name="dataObject"></param>
            <param name="signalFormat"></param>
            <param name="payload"></param>
            <param name="ssmName"></param>
            <param name="sdiType"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.InsertDataObject(Csf.Imets.ToolCore.Dal.Avionics.Payloads.DataObject)">
            <summary>
            Insert DataObject into database
            </summary>
            <param name="dataObject"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.DataObjectInfoString(Csf.Imets.ToolCore.Dal.Avionics.Payloads.DataObject)">
            <summary>
            DataObject information string
            </summary>
            <param name="dataObject"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.PopulateDataObjectAlias(Csf.Imets.ToolCore.Dal.Avionics.Payloads.DataObjectAlias,Csf.Imets.ToolCore.Dal.Avionics.Payloads.DataObject)">
            <summary>
            Populate DataObjectAlias
            </summary>
            <param name="dataObjectAlias"></param>
            <param name="dataObject"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.InsertDataObjectAlias(Csf.Imets.ToolCore.Dal.Avionics.Payloads.DataObjectAlias)">
            <summary>
            Insert DataObjectAlias
            </summary>
            <param name="dataObjectAlias"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.DataObjectAliasString(Csf.Imets.ToolCore.Dal.Avionics.Payloads.DataObjectAlias)">
            <summary>
            DataObjectAlias information string
            </summary>
            <param name="dataObjectAlias"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.WriteICDEnumsToDatabase">
            <summary>
            Writes the locally stored ICD Enums to the database
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.PopulateEnum(Csf.Imets.ToolCore.Dal.Avionics.Payloads.Enumeration,Csf.Imets.ToolCore.Dal.A664.Plugins.EnumClass)">
            <summary>
            Populate Enum
            </summary>
            <param name="enumeration"></param>
            <param name="enumClass"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.InsertEnum(Csf.Imets.ToolCore.Dal.Avionics.Payloads.Enumeration,Csf.Imets.ToolCore.Dal.A664.Plugins.EnumClass)">
            <summary>
            Insert Enum
            </summary>
            <param name="enumeration"></param>
            <param name="enumClass"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.EnumString(Csf.Imets.ToolCore.Dal.Avionics.Payloads.Enumeration)">
            <summary>
            Returns information in the enumeration
            </summary>
            <param name="enumeration"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.PopulateEnumValue(Csf.Imets.ToolCore.Dal.Avionics.Payloads.EnumerationValue,Csf.Imets.ToolCore.Dal.Avionics.Payloads.Enumeration,System.String,System.String)">
            <summary>
            Populate Enum Value
            </summary>
            <param name="enumerationValue"></param>
            <param name="enumeration"></param>
            <param name="value"></param>
            <param name="key"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.InsertEnumValue(Csf.Imets.ToolCore.Dal.Avionics.Payloads.EnumerationValue)">
            <summary>
            Insert Enum Value
            </summary>
            <param name="enumerationValue"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.EnumValueString(Csf.Imets.ToolCore.Dal.Avionics.Payloads.EnumerationValue)">
            <summary>
            Returns information in the enumeration value string
            </summary>
            <param name="enumerationValue"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.ClearBoeingDatabaseTables">
            <summary>
            Clear all Boeing tables
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.ValidateDatabase">
            <summary>
            Validates the Database in it's current state
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.FormatTime(System.TimeSpan)">
            <summary>
            Formats the time into minutes, seconds, and milliseconds
            </summary>
            <param name="timeSpan"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.WriteNotificationsToFile(System.String,System.Boolean)">
            <summary>
            Writes notifications to file
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.WriteReportsToFiles(System.String)">
            <summary>
            Write reports to files
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.BoeingICDParser.OpenLatestConflictFile">
            <summary>
            Opens the latest conflict file
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.HarvestParser.A429FileParser.GetString(System.String)">
            <summary>
            This method will return the current columns' row data
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.HarvestParser.A429FileParser.GetInt32(System.String)">
            <summary>
            This method will return the current columns' row data
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.HarvestParser.A429FileParser.GetBool(System.String)">
            <summary>
            This method will return the current columns' row data
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.HarvestParser.NDOFileParser.LookupNetworkParent">
            <summary>
            This method searches for the well known service set associated with a particular wks and application name pair.  
            It uses the current line being parsed as the parameters for this search.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.HarvestParser.NDOFileParser.GetString(System.String)">
            <summary>
            This method will return the current columns' row data
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.HarvestParser.NDOFileParser.GetDecimal(System.String)">
            <summary>
            This method will return the current columns' row data
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.HarvestParser.NDOFileParser.GetInt32(System.String)">
            <summary>
            This method will return the current columns' row data
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.HarvestParser.NDOFileParser.GetBool(System.String)">
            <summary>
            This method will return the current columns' row data
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.HarvestPayloadParser.SaveVariableMappings">
            <summary>
            This method attempts to locate all payloads with VDN variables associated with it and 
            then returns the A664 network path associated with the particular payload.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.HarvestPayloadParser.GetSaveVariableMappingsCommand">
            <summary>
            Step 1 - This method is the first of a 5 step process to save off and restore Variable Mappings for A664.
            This should be run before you do the new import of data. This query will save off all 
            of the vdn mappings to a new table called old_vdn_mappings.  Once that is done, the 
            old data can be dropped and the import of the new data can be done.
            </summary>
            <returns>The SQL query to be executed.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.HarvestPayloadParser.CreateVdnMappingsTableCommand">
            <summary>
            Step 2 - This method is the second of a 5 step process to save off and restore Variable 
            Mappings for A664.
            This will create a new table called new_vdn_mappings which holds all of the new payload data.
            </summary>
            <returns>The SQL query to be executed.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.HarvestPayloadParser.JoinVdnMappingTableCommand">
            <summary>
            Step 3 - This method is the third of a 5 step process to save off and restore Variable 
            Mappings for A664.
            This will join the two tables together and stores them into a new table called old_to_new_vdn_mapping.
            </summary>
            <returns>The SQL query to be executed.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.HarvestPayloadParser.UpdateVdnIdsCommand">
            <summary>
            Step 4 - This method is the fourth of a 5 step process to save off and restore Variable 
            Mappings for A664.
            This performs the update process which moves the old vdn variable ids back into the new payloads.
            </summary>
            <returns>The SQL query to be executed.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.HarvestPayloadParser.DropTemporaryTablesCommand">
            <summary>
            Step 5 - This method is the fifth of a 5 step process to save off and restore Variable 
            Mappings for A664.
            This method drops the temporary tables.  It should be called at the beginning and end of
            the process.
            </summary>
            <returns>The SQL query to be executed.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.IOCStructure.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.IOCParser.modificationsList">
            <summary>
            Holds a list of modifications
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.IOCParser.DatabaseMetrics">
            <summary>
            Class used for storing various database metrics
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.IOCParser.DatabaseMetrics.Clear">
            <summary>
            Clears the count for the metrics
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.IOCParser.numVdnVariables">
            <summary>Number of Vdn Variables</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.IOCParser.numLrms">
            <summary>Number of Lrms</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.IOCParser.numAppPayloadMaps">
            <summary>Number of Application Payload Maps</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.IOCParser.numBuses">
            <summary>Number of Buses</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.IOCParser.numPayloads">
            <summary>Number of Payloads</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.IOCParser.numDataObjects">
            <summary>Number of Data Objects</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.IOCParser.numDataObjectAliases">
            <summary>Number of Data Object Aliases</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.IOCParser.numEnumerations">
            <summary>Number of Enumerations</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.IOCParser.numEnumerationValues">
            <summary>Number of Enumeration Values</summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.IOCParser.LatestConflictFileName">
            <summary>
            Latest conflict File Name
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.IOCParser.IOCOutputFilePath">
            <summary>
            Get IOC output file path and filename
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.IOCParser.IOCDirectoryPath">
            <summary>
            IOC directory path only
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.IOCParser.IOCFiles">
            <summary>
            IOC files
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.IOCParser.CurrentFilename">
            <summary>
            Current Filename
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.IOCParser.CurrentASLSocket">
            <summary>
            Current ASLSocket
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.IOCParser.CurrentASLOutputSocket">
            <summary>
            Current ASLOutputSocket
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.IOCParser.OverwriteAlias">
            <summary>
            Overwrite user-defined alias's when parsing
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.IOCParser.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.IOCParser.Load">
            <summary>
            Load Boeing ICD
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.IOCParser.CleanUp">
            <summary>
            Clean up local lists to free up memory
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.IOCParser.ParseIOC(System.String)">
            <summary>
            Parses the IOC files in the specified path
            </summary>
            <param name="directoryPath"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.IOCParser.ClearIOCDatabaseTables">
            <summary>
            Clear all IOC tables
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.IOCParser.FormatTime(System.TimeSpan)">
            <summary>
            Formats the time into minutes, seconds, and milliseconds
            </summary>
            <param name="timeSpan"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.IOCParser.ParsingMetricsString">
            <summary>
            Returns string which reports all the metrics
            </summary>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.IOCParser.WriteToDatabase">
            <summary>
            Write to the database
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.IOCParser.MakeDatabaseQueries">
            <summary>
            Make database queries which can be used for future comparisons
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.IOCParser.ClearMetrics">
            <summary>
            Clear metrics
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.IOCParser.WriteIOCToDatabase">
            <summary>
            Write IOC information to the database
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.IOCParser.ParseIOCFiles(System.String)">
            <summary>
            
            </summary>
            <param name="directoryPath"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.IOCParser.ParseIOCMap(System.String)">
            <summary>
            Parse IOC Map file into a generic IOC structure
            </summary>
            <param name="filename"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.IOCParser.ParseSection(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Parse IOS Map file section into a generic section
            </summary>
            <param name="sectionName"></param>
            <param name="sectionList"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.IOCParser.PrintGenericIOCStructure">
            <summary>
            Print structure of generic IOC
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.IOCParser.PopulateIOCStructure">
            <summary>
            Populate the IOC structure from the already parsed generic structure
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.IOCParser.PrintIOCStructure">
            <summary>
            Print IOC structure
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.reportModifications">
            <summary>
            Report modifications to a log file
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.modificationsList">
            <summary>
            Holds a list of modifications
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.DatabaseMetrics">
            <summary>
            Class used for storing various database metrics
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.DatabaseMetrics.Clear">
            <summary>
            Clears the count for the metrics
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.numVdnVariables">
            <summary>Number of Vdn Variables</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.numLrms">
            <summary>Number of Lrms</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.numAppPayloadMaps">
            <summary>Number of Application Payload Maps</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.numBuses">
            <summary>Number of Buses</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.numPayloads">
            <summary>Number of Payloads</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.numDataObjects">
            <summary>Number of Data Objects</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.numDataObjectAliases">
            <summary>Number of Data Object Aliases</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.numEnumerations">
            <summary>Number of Enumerations</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.numEnumerationValues">
            <summary>Number of Enumeration Values</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.prevDatabaseApps">
            <summary>List of Lrms in the database prior to parsing</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.prevDatabaseAppPayloadMaps">
            <summary>List of AppPayloadMaps in the database prior to parsing</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.prevDatabaseBuses">
            <summary>List of Buses in the database prior to parsing</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.prevDatabasePayloads">
            <summary>List of Payloads in the database prior to parsing</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.prevDatabaseDataObjects">
            <summary>List of DataObjects in the database prior to parsing</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.prevDatabaseEnumerations">
            <summary>List of Enumerations in the database prior to parsing</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.prevDatabaseEnumerationValues">
            <summary>List of EnumerationValues in the database prior to parsing</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.prevDatabaseDataObjectAliases">
            <summary>List of DataObjectAliases in the database prior to parsing</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.icdLrms">
            <summary> LRMs which have been added during an ICD parse </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.icdAppPayloadMaps">
            <summary> App Payload maps which have been added during an ICD parse </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.icdBuses">
            <summary> Buses which have been added during an ICD parse </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.icdPayloads">
            <summary> Payloads which have been added during an ICD parse </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.icdDataObjects">
            <summary> DataObjects which have been added during an ICD parse </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.icdDataObjectAliases">
            <summary> DataObjectAliases which have been added during an ICD parse </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.icdEnumerations">
            <summary> Enumerations which have been added during an ICD parse </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.icdEnumerationValues">
            <summary> EnumerationValues which have been added during an ICD parse </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.csvAppPayloadMaps">
            <summary>List of Lrm to Bus mappings in the CSV files</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.csvLrms">
            <summary>List of Lrms in the CSV files</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.csvBuses">
            <summary>List of Buses in the CSV files</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.csvLabels">
            <summary>List of Payloads in the CSV files</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.csvDataObjects">
            <summary>List of DataObjects in the CSV files</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.csvPreparseAppPayloadMaps">
            <summary>List of Lrm to Bus mappings in the CSV files</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.csvPreparseLrms">
            <summary>List of Lrms in the CSV files</summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.LatestConflictFileName">
            <summary>
            Latest conflict File Name
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.SlateOutputFilePath">
            <summary>
            Get SLATE output file path and filename
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.SlateDirectoryPath">
            <summary>
            SLATE directory path only
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.SlateFiles">
            <summary>
            SLATE files
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.OverwriteAlias">
            <summary>
            Overwrite user-defined alias's when parsing
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.Load">
            <summary>
            Load Boeing ICD
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.CleanUp">
            <summary>
            Clean up local lists to free up memory
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.SeparateSlateCSVs(System.String)">
            <summary>
            
            </summary>
            <param name="directoryPath"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.ParseSlate(System.String)">
            <summary>
            Parses the SLATE files in the specified path
            </summary>
            <param name="directoryPath"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.ClearSlateDatabaseTables">
            <summary>
            Clear all Slate tables
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.FormatTime(System.TimeSpan)">
            <summary>
            Formats the time into minutes, seconds, and milliseconds
            </summary>
            <param name="timeSpan"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.ParsingMetricsString">
            <summary>
            Returns string which reports all the metrics
            </summary>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.WriteToDatabase">
            <summary>
            Write to the database
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.MakeDatabaseQueries">
            <summary>
            Make database queries which can be used for future comparisons
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.ClearMetrics">
            <summary>
            Clear metrics
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.WriteSlateToDatabase">
            <summary>
            Write SLATE information to the database
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.ParseSlateCSVs(System.String)">
            <summary>
            
            </summary>
            <param name="directoryPath"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.InsertLrm(Csf.Imets.ToolCore.Dal.Avionics.Application)">
            <summary>
            Insert LRM
            </summary>
            <param name="lrm"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.LrmInfoString(Csf.Imets.ToolCore.Dal.Avionics.Application)">
            <summary>
            LRM information string
            </summary>
            <param name="lrm"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.InsertBusMapping(Csf.Imets.ToolCore.Dal.Avionics.AppPayloadMap)">
            <summary>
            Insert bus mapping
            </summary>
            <param name="appPayloadMap"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.AppPayloadMapInfoString(Csf.Imets.ToolCore.Dal.Avionics.AppPayloadMap)">
            <summary>
            Application paryload information string
            </summary>
            <param name="appPayloadMap"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.ParsePayloads(System.String)">
            <summary>
            Parse payloads CSV file and populate payloads (buses and labels)
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.InsertPayload(Csf.Imets.ToolCore.Dal.Avionics.Payloads.Payload)">
            <summary>
            Insert Payload into database
            </summary>
            <param name="payload"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.PayloadInfoString(Csf.Imets.ToolCore.Dal.Avionics.Payloads.Payload)">
            <summary>
            Payload information string
            </summary>
            <param name="payload"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.InsertBus(Csf.Imets.ToolCore.Dal.Avionics.Payloads.Payload)">
            <summary>
            Insert Bus into the payload table
            </summary>
            <param name="bus"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.BusInfoString(Csf.Imets.ToolCore.Dal.Avionics.Payloads.Payload)">
            <summary>
            Bus information string
            </summary>
            <param name="bus"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.ParseDataObjects(System.String)">
            <summary>
            Parse DataObjects CSV file and populate DataObjects
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.GetConversionFromDataFormatType(System.String)">
            <summary>
            Returns the DataObject.conversion value from the data_format_type
            </summary>
            <param name="dataFormatType"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.InsertDataObject(Csf.Imets.ToolCore.Dal.Avionics.Payloads.DataObject)">
            <summary>
            Insert DataObject into database
            </summary>
            <param name="dataObject"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.DataObjectInfoString(Csf.Imets.ToolCore.Dal.Avionics.Payloads.DataObject)">
            <summary>
            DataObject information string
            </summary>
            <param name="dataObject"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.PopulateDataObjectAlias(Csf.Imets.ToolCore.Dal.Avionics.Payloads.DataObjectAlias,Csf.Imets.ToolCore.Dal.Avionics.Payloads.DataObject)">
            <summary>
            Populate DataObjectAlias
            </summary>
            <param name="dataObjectAlias"></param>
            <param name="dataObject"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.InsertDataObjectAlias(Csf.Imets.ToolCore.Dal.Avionics.Payloads.DataObjectAlias)">
            <summary>
            Insert DataObjectAlias
            </summary>
            <param name="dataObjectAlias"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.DataObjectAliasString(Csf.Imets.ToolCore.Dal.Avionics.Payloads.DataObjectAlias)">
            <summary>
            DataObjectAlias information string
            </summary>
            <param name="dataObjectAlias"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.SlateParser.WriteNotificationsToFile(System.String,System.Boolean)">
            <summary>
            Writes notifications to file
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.Element.Name">
            <summary>
            XML attribute describing the Name.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.ProjectInterfaceMessage.Name">
            <summary>
            XML attribute describing the Name.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.ProjectInterfaceMessage.Direction">
            <summary>
            XML attribute describing the Direction.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.ProjectInterfaceMessage.Element">
            <summary>
            XML Element describing the Element.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.ServiceInstance.WKN">
            <summary>
            XML attribute describing the WKN.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.ServiceInstance.WKS">
            <summary>
            XML attribute describing the WKS.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.ServiceInstance.IP">
            <summary>
            XML attribute describing the IP.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.ServiceInstance.Port">
            <summary>
            XML attribute describing the Port.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.ProjectInterface.Name">
            <summary>
            XML attribute describing the Name.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.ProjectInterface.ExternalFileName">
            <summary>
            XML attribute describing the ExternalFileName.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.ProjectInterface.Direction">
            <summary>
            XML attribute describing the Direction.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.ProjectInterface.IsOwned">
            <summary>
            XML attribute describing the IsOwned.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.ProjectInterface.ServiceInstance">
            <summary>
            XML Element describing the ServiceInstance.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.ProjectInterface.ProjectInterfaceMessage">
            <summary>
            XML Element describing the Message.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.LogicalInstance.Name">
            <summary>
            XML attribute describing the Name.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.ProjectDevice">
            <summary>
            ProjectDevice is populated during deserialization of an XML file.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.ProjectDevice.Name">
            <summary>
            XML attribute describing the Name.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.ProjectDevice.LogicalInstance">
            <summary>
            XML Element describing the LogicalInstance.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.ProjectDevice.ProjectInterface">
            <summary>
            XML Element Array describing the ProjectInterface's.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.ProjectDevice.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.catalogInterfaceList">
            <summary>
            Object to be deserialized
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.DatabaseMetrics">
            <summary>
            Class used for storing various database metrics
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.DatabaseMetrics.Clear">
            <summary>
            Clears the count for the metrics
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.numVdnVariables">
            <summary>Number of Vdn Variables</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.numWKNs">
            <summary>Number of Well Known Names</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.numWKSs">
            <summary>Number of Well Known Services</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.numWKSPayloadMaps">
            <summary>Number of WEKS to Payload Maps</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.numBuses">
            <summary>Number of Buses</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.numPayloads">
            <summary>Number of Payloads</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.numDataObjects">
            <summary>Number of Data Objects</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.numEnumerations">
            <summary>Number of Enumerations</summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.numEnumerationValues">
            <summary>Number of Enumeration Values</summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.LatestConflictFileName">
            <summary>
            Latest conflict File Name
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.XSDOutputFilePath">
            <summary>
            Get XSD output file path and filename
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.XSDCatalogDirectoryPath">
            <summary>
            XSD catalog directory path only
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.XSDProjectDirectoryPath">
            <summary>
            XSD Project directory path only
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.XSDFiles">
            <summary>
            XSD files
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.XSDProjectFiles">
            <summary>
            XSD files
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.VdnVariableFilePath">
            <summary>
            XSD Vdn Variable File path
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.CurrentFilename">
            <summary>
            Current Filename
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.CurrentASLSocket">
            <summary>
            Current ASLSocket
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.CreateDefaultVdnVariableFile">
            <summary>
            Indicates if we would like to create a default VDN variable file
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.Load">
            <summary>
            Load XSD Files
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.LoadVdnVariables">
            <summary>
            Load Vdn Variables
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.CleanUp">
            <summary>
            Clean up local lists to free up memory
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.ParseXSD(System.String,System.String)">
            <summary>
            Parses the XSD files in the specified path
            </summary>
            <param name="directoryPath"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.ClearXSDDatabaseTables">
            <summary>
            Clear all XSD tables
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.ClearXSDSpecificData">
            <summary>
            Clears the portion of certain tables which is specific to
            the XSD parsing.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.FormatTime(System.TimeSpan)">
            <summary>
            Formats the time into minutes, seconds, and milliseconds
            </summary>
            <param name="timeSpan"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.ParsingMetricsString">
            <summary>
            Returns string which reports all the metrics
            </summary>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.WriteToDatabase">
            <summary>
            Write to the database
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.MakeDatabaseQueries">
            <summary>
            Make database queries which can be used for future comparisons
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.ClearMetrics">
            <summary>
            Clear metrics
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.ParseXSDFiles(System.String,System.String)">
            <summary>
            Parse XSD XML files
            </summary>
            <param name="directoryPath"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.DeserializeProjectDevices(System.String)">
            <summary>
            Deserialize the XML.  This populates all clases in the ProjectDevice.
            </summary>
            <param name="filename"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.DeserializeCatalogInterfaces(System.String)">
            <summary>
            Deserialize the XML.  This populates all clases in the CatalogInterface.
            </summary>
            <param name="filename"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.CreateAllWKNAndWKS(System.Boolean)">
            <summary>
            Create all WKNs and WKSs that will be necessary based on the CatalogInterfaces
            which are located in the XSD files.
            If the createAllEntries is true, then create all WKN and WKS
            </summary>
            <param name="createAllEntries"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.PopulateDatabase">
            <summary>
            Populate the database using Project specific information and XSD information
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.GetValueFromComment(Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.DataElement)">
            <summary>
            Extracts a value from the comment field
            </summary>
            <param name="dataElement"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.GetPayloadType(Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.CatalogInterface,Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.NDOMessage)">
            <summary>
            Returns a payload type string based on CatalogInterface information
            </summary>
            <param name="catalogInterface"></param>
            <param name="ndoMessage"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.ProcessEnumeration(Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.NDOEnumeration)">
            <summary>
            Insert a single enumeration into the database
            </summary>
            <param name="ndoEnumeration"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.CreateNDOIdDataObject(System.String,Csf.Imets.ToolCore.Dal.Avionics.Payloads.Payload)">
            <summary>
            Insert a single "NDO_ID" DataObject into the Database
            </summary>
            <param name="hexValue"></param>
            <param name="payload"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.ProcessDataElement(Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.DataElement,Csf.Imets.ToolCore.Dal.Avionics.Payloads.Payload)">
            <summary>
            Insert a single DataObject into the Database
            </summary>
            <param name="dataElement"></param>
            <param name="payload"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.GetWKNAndWKS(Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.CatalogInterface,Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.DataElement,System.String@,System.String@)">
            <summary>
            Get the WKN and WKS for the XSD DataElement
            </summary>
            <param name="currentCatalogInterface"></param>
            <param name="xsdDataElement"></param>
            <param name="wkn"></param>
            <param name="wks"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.WriteVdnVariableToFile">
            <summary>
            Write information for a single VDN Variable to a CSV file.
            This is used to create a default VDN Variable file.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.ParseVdnVariables(System.String)">
            <summary>
            Parse VDN Variables CSV file and add/update the database.
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.DoesWKSAndWKNMatchPayload(System.String,System.String,System.Collections.Generic.List{Csf.Imets.ToolCore.Dal.Avionics.Asl.WksNdoMap},System.Collections.Generic.List{Csf.Imets.ToolCore.Dal.Avionics.Asl.WellKnownName},Csf.Imets.ToolCore.Dal.Avionics.Payloads.Payload)">
            <summary>
            Returns true if a WKN and WKS are found which match the payload
            </summary>
            <param name="wknName"></param>
            <param name="wksName"></param>
            <param name="wksNdoMaps"></param>
            <param name="wknList"></param>
            <param name="ndoPayload"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.PopulateFullVdnName(System.String[])">
            <summary>
            Populate FullVdnName from the items list
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.XSDParser.ProcessVdnVariable(Csf.Imets.ToolCore.Vdn.FullVdnName,System.Collections.Generic.List{Csf.Imets.ToolCore.Dal.Avionics.Payloads.PayloadVariable},Csf.Imets.ToolCore.Dal.Avionics.Payloads.DataObject)">
            <summary>
            Add or update Vdn variable into the database
            </summary>
            <param name="fullVdnName"></param>
            <param name="payloadVariables"></param>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.Server.WKN">
            <summary>
            XML attribute describing the WKN.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.Server.WKS">
            <summary>
            XML attribute describing the WKS.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.Server.IncomingDataSize">
            <summary>
            XML attribute describing the IncomingDataSize.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.Server.OutgoingDataSize">
            <summary>
            XML attribute describing the OutgoingDataSize.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.TCPConfig.Server">
            <summary>
            XML Element describing the Server.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.UDPConfig.WKS">
            <summary>
            XML attribute describing the WKS.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.UDPConfig.InterfaceType">
            <summary>
            XML attribute describing the InterfaceType.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.InterfaceConfig.TCPConfig">
            <summary>
            XML Element describing the TCPConfig.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.InterfaceConfig.UDPConfig">
            <summary>
            XML Element describing the UDPConfig.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.EnumElement.Name">
            <summary>
            XML attribute describing the Name.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.EnumElement.Default">
            <summary>
            XML attribute describing the Default.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.NDOEnumeration.Name">
            <summary>
            XML attribute describing the Name.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.NDOEnumeration.EnumElement">
            <summary>
            XML Element describing the EnumElement.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.References.NDOEnumeration">
            <summary>
            XML Element describing the NDOEnumeration.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.CommentElement.Value">
            <summary>
            XML Text describing the value.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.DataElement.Name">
            <summary>
            XML attribute describing the Name.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.DataElement.ByteOffset">
            <summary>
            XML attribute describing the ByteOffset.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.DataElement.LsbPosition">
            <summary>
            XML attribute describing the LsbPosition.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.DataElement.DataSize">
            <summary>
            XML attribute describing the DataSize.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.DataElement.Count">
            <summary>
            XML attribute describing the Count.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.DataElement.SizeIn">
            <summary>
            XML attribute describing the SizeIn.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.DataElement.DataType">
            <summary>
            XML attribute describing the DataType.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.DataElement.ElementReference">
            <summary>
            XML attribute describing the ElementReference.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.DataElement.Comment">
            <summary>
            XML attribute describing the Comment.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.DataElement.CommentElement">
            <summary>
            XML Element describing the CommentElement.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.Substructure.Name">
            <summary>
            XML attribute describing the Name.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.Substructure.Size">
            <summary>
            XML attribute describing the Size.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.Substructure.DataElement">
            <summary>
            XML Element Array describing the DataElement's.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.Substructure.NDOEnumeration">
            <summary>
            XML Element describing the NDOEnumeration.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.Message.Name">
            <summary>
            XML attribute describing the Name.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.Message.Direction">
            <summary>
            XML attribute describing the Direction.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.Message.Size">
            <summary>
            XML attribute describing the Size.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.Message.SizeIn">
            <summary>
            XML attribute describing the SizeIn.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.Message.DataElement">
            <summary>
            XML Element Array describing the DataElement's.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.Message.Substructure">
            <summary>
            XML Element Array describing the Substructure's.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.Message.NDOEnumeration">
            <summary>
            XML Element describing the NDOEnumeration.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.NDOMessage.Name">
            <summary>
            XML attribute describing the Name.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.NDOMessage.ID">
            <summary>
            XML attribute describing the ID.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.NDOMessage.ID_Hex">
            <summary>
            XML attribute describing the ID_Hex.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.NDOMessage.Length">
            <summary>
            XML attribute describing the Length.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.NDOMessage.Rate">
            <summary>
            XML attribute describing the Rate.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.NDOMessage.Format">
            <summary>
            XML attribute describing the Format.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.NDOMessage.DataElement">
            <summary>
            XML Element Array describing the DataElement's.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.NDOMessage.NDOEnumeration">
            <summary>
            XML Element describing the NDOEnumeration.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.CatalogInterface">
            <summary>
            CatalogInterface is populated during deserialization of an XML file.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.CatalogInterface.Name">
            <summary>
            XML attribute describing the Name.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.CatalogInterface.Direction">
            <summary>
            XML attribute describing the Direction.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.CatalogInterface.InterfaceType">
            <summary>
            XML attribute describing the InterfaceType.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.CatalogInterface.InterfaceConfig">
            <summary>
            XML Element describing the InterfaceConfig.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.CatalogInterface.Message">
            <summary>
            XML Element Array describing the Message's.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.CatalogInterface.NDOMessage">
            <summary>
            XML Element Array describing the NDOMessage's.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.CatalogInterface.References">
            <summary>
            XML Element Array describing the References.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.Fusion.CatalogInterface.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.Plugins.Connect">
            <summary>
             Connect is populated during deserialization of an XML file.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.Plugins.A429GenericBlockSignal">
            <summary>
             A429GenericBlockSignal Object
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.A429GenericBlockSignal.direction">
            <summary>
            XML Element describing direction (IN or OUT).
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.Plugins.A429GenericBlock">
            <summary>
             A429GenericBlock is populated during deserialization of an XML file.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.A429GenericBlock.bit_length">
            <summary>
            XML Element describing the number of bits.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.A429GenericBlock.SignalFormat">
            <summary>
            Array of XML Elements describing the signal format.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.A429GenericBlock.start_bit">
            <summary>
            XML Element describing the 1-based start bit.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.Plugins.AnalogDiscreteParameter">
            <summary>
            AnalogDiscreteParameter is populatd during deserialization of an XML file.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.AnalogDiscreteParameter.direction">
            <summary>
            XML Attribute describing the direction (IN or OUT).
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.Plugins.AnalogPhysPort">
            <summary>
             AnalogPhysPort is populated during deserialization of an XML file.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.AnalogPhysPort.direction">
            <summary>
            XML Attribute describing the direction (IN or OUT).
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.Plugins.AnalogSignalParameter">
            <summary>
             AnalogSignalParameter is populated during deserialization of an XML file.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.AnalogSignalParameter.direction">
            <summary>
            Xml Attribute describing the direction (IN or OUT).
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.Plugins.Realize">
            <summary>
             Realize is populated during deserialization of an XML file.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.Plugins.ParameterUsage">
            <summary>
             ParameterUsage is populated during deserialization of an XML file.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.ParameterUsage.used">
            <summary>
            XML Attribute describing if this is used (yes or no).
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.ParameterUsage.direction">
            <summary>
            XML Attribute describing the direction (IN or OUT).
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.Plugins.Receive">
            <summary>
             Receive is populated during deserialization of an XML file.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.Plugins.SignalUsage">
            <summary>
             SignalUsage is populated during deserialization of an XML file.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.SignalUsage.used">
            <summary>
            Xml Attribute describing if this is used (yes or no).
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.SignalUsage.element_used">
            <summary>
            Xml Element describing if this element is used (yes or no).
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.Plugins.PhysicalConnector">
            <summary>
             PhysicalConnector is populated during deserialization of an XML file.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.Plugins.Usage2">
            <summary>
             Usage2 is populated during deserialization of an XML file.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Usage2.description">
            <summary>
            Xml Element for the description.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.Plugins.Usage">
            <summary>
             Usage is populated during deserialization of an XML file.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Usage.description">
            <summary>
            Xml Element describing the description.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Usage.Usage2">
            <summary>
            Xml Element describing Usage (This Usage Object can also contain other Usage Objects)
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.Plugins.Design">
            <summary>
             Design is populated during deserialization of an XML file.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Design.DesignUsage">
            <summary>
            DesignUsage is an array of elements which are populated during
            deserialization of an XML file.
            By adding the "XmlElement" attribute, every time this element is seen by the
            (de)serializer it will know to add it to this array.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.Design.ElectricalNetFamily">
            <summary>
             Array of XML Elements describing the ElectricalNetFamily's.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.Plugins.DesignPortUsage">
            <summary>
             DesignPortUsage is populated during deserialization of an XML file.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.DesignPortUsage.used">
            <summary>
            XML Attribute describing the used id.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.DesignPortUsage.direction">
            <summary>
            XML Attribute describing the direction (IN or OUT).
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.DesignPortUsage.element_used">
            <summary>
            ML Attribute describing if the element is used (yes or no).
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.DesignPortUsage.Parent">
            <summary>
            Property which points the DesignUsage parent of this object.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.Plugins.DesignUsage">
            <summary>
             DesignUsage is populated during deserialization of an XML file.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.DesignUsage.DesignPortUsage">
            <summary>
            Array of XML Elements describing the DesignPortUsage's.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.DesignUsage.Usage">
            <summary>
            Array of XML Elements describing the Usage's.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.DesignUsage.SignalUsage">
            <summary>
            Array of XML Elements describing the SignalUsage's.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.DesignUsage.ParameterUsage">
            <summary>
            Array of XML Elements describing the ParameterUsage's.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.Plugins.ElectricalNetFamily">
            <summary>
             ElectricalNetFamily is populated during deserialization of an XML file.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.ElectricalNetFamily.ElectricalPort">
            <summary>
            Array of XML Elements describing the ElectricalPort's.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.Plugins.ElectricalPort">
            <summary>
             ElectricalPort is populated during deserialization of an XML file.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.ElectricalPort.Parent">
            <summary>
            Property which points to the ElectricalNetFamily Parent.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.Plugins.ListValue">
            <summary>
             ListValue is populated during deserialization of an XML file.
             Used whenever an xml tag has an attribute called "list" and
             a value associated with it.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.ListValue.list">
            <summary>
            XML Attribute describing the list.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.ListValue.Value">
            <summary>
            XML Attribute describing the value.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.Plugins.EnumValueClass">
            <summary>
            Holds information about a single value for an enumeration.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.EnumValueClass.guid">
            <summary>
            Global uniuque identifier for the enumeration value.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.EnumValueClass.key">
            <summary>
            Index of the enumeration value.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.EnumValueClass.value">
            <summary>
            Value for enumeration value class.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.EnumValueClass.enumGuid">
            <summary>
            Global uniuque identifier of the enumeration which this enumeration
            value belongs to.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.Plugins.EnumClass">
            <summary>
            Holds information about an enumeration and all of it's values.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.EnumClass.guid">
            <summary>
            Global uniuque identifier for the enumeration.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.EnumClass.name">
            <summary>
            Name of the enumeration.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.EnumClass.enumValues">
            <summary>
            List of enumeration values which belong to this enumeration.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.Plugins.DigitalParameter">
            <summary>
            DigitalParameter is populated during deserialization of an XML file.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.DigitalParameter.direction">
            <summary>
            XML Attribute describing the direction (IN or OUT).
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.DigitalParameter.data_format_type">
            <summary>
            XML Attribute describing the data format type
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.Plugins.ElectronicLRU">
            <summary>
             ElectronicLRU is populated during deserialization of an XML file.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.ElectronicLRU.act_mnemonic">
            <summary>
            XmlElement describing the act mnemonic.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.ElectronicLRU.arinc">
            <summary>
            XmlElement describing the arinc.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.ElectronicLRU.availability">
            <summary>
            XmlElement describing the availability.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.ElectronicLRU.A429Word">
            <summary>
            Array of XML Elements describing the A429Word's.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.ElectronicLRU.A429PhysPort">
            <summary>
            Array of XML Elements describing the A429PhysPort's.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.ElectronicLRU.A429Signal">
            <summary>
            Array of XML Elements describing the A429Signal's.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.ElectronicLRU.A429GenericBlock">
            <summary>
            Array of XML Elements describing the A429GenericBlock's.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.ElectronicLRU.A429GenericBlockSignal">
            <summary>
            Array of XML Elements describing the A429GenericBlockSignal's.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.ElectronicLRU.AnalogPhysPort">
            <summary>
            Array of XML Elements describing the AnalogPhysPort's.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.ElectronicLRU.DigitalParameter">
            <summary>
            Array of XML Elements describing the DigitalParameter's.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.ElectronicLRU.AnalogDiscreteParameter">
            <summary>
            Array of XML Elements describing the AnalogDiscreteParameter's.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.ElectronicLRU.AnalogSignalParameter">
            <summary>
            Array of XML Elements describing the AnalogSignalParameter's.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.ElectronicLRU.DesignUsage">
            <summary>
            Array of XML Elements describing the DesignUsage's.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.Plugins.FIModel">
            <summary>
            FIModel is populated during deserialization of an XML file.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.FIModel.rootDesign">
            <summary>
            XML attribute describing the root design.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.FIModel.act_model_database">
            <summary>
            XML attribute describing the act model database.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.FIModel.xmlSchemaVersion">
            <summary>
            XML attribute describing the XML Schema Version.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.FIModel.xmlns">
            <summary>
            XML attribute describing the XML namespace.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.FIModel.created_by">
            <summary>
            XML attribute describing who created the document.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.FIModel.creation_date">
            <summary>
            XML attribute describing the creation date.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.FIModel.ElectronicLRU">
            <summary>
            XML Element Array describing the ElectronicLRU's.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.FIModel.SigFormat">
            <summary>
            XML Element Array describing the SigFormat's.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.FIModel.SigTransmit">
            <summary>
            XML Element Array describing the SigTransmit's.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.FIModel.PIPlus">
            <summary>
            XML Element Array describing the PIPlus's.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.FIModel.Connect">
            <summary>
            XML Element Array describing the Connect's.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.FIModel.PhysicalConnector">
            <summary>
            XML Element Array describing the PhysicalConnectors.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.FIModel.Design">
            <summary>
            XML Element Array describing the Design's.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.FIModel.Receive">
            <summary>
            XML Element Array describing the Receive's.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.FIModel.Realize">
            <summary>
            XML Element Array describing the Realize's.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.FIModel.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.Plugins.ParamField">
            <summary>
             ParamField is populated during deserialization of an XML file.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.ParamField.par_to_field">
            <summary>
            XML Attribute describing the parameter to field.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.ParamField.bit_length">
            <summary>
            XML Element describing the bit length of the parameter field.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.ParamField.bit_type">
            <summary>
            XML Element describing the bit type of the parameter field.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.ParamField.start_bit">
            <summary>
            XML Element describing the 1-based start bit of the parameter field.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.Plugins.PIPlus">
            <summary>
             PIPlus is populated during deserialization of an XML file.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.Plugins.SigFormat">
            <summary>
             SigFormat is populated during deserialization of an XML file.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.Plugins.SignalFormat">
            <summary>
            SignalFormat is populated during deserialization of an XML file.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.SignalFormat.bit_length">
            <summary>
            XML Element describing the bit length.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.SignalFormat.bit_type">
            <summary>
            XML Element describing the bit type.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.SignalFormat.start_bit">
            <summary>
            XML Element describing the 1-based start bit.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.SignalFormat.value">
            <summary>
            XML Element describing the value.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.A664.Plugins.SignalFormat.ParamField">
            <summary>
            XML Element array describing the ParamFields.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.A664.Plugins.SigTransmit">
            <summary>
             SigTransmit is populated during deserialization of an XML file.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.A664ConfigParseDialog.m_BoeingFileBrowseButton_Click(System.Object,System.EventArgs)">
            <summary>
            Occurs when the Boeing File Browse button is pressed.
            Sets the path of the ICD file.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.A664ConfigParseDialog.m_BoeingIcdEnumsFileBrowseButton_Click(System.Object,System.EventArgs)">
            <summary>
            Occurs when the Boeing Enums File Browse button is pressed.
            Sets the path of the ICD enums file.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.A664ConfigParseDialog.m_BoeingParseButton_Click(System.Object,System.EventArgs)">
            <summary>
            Occurs when the Boeing Parse button is pressed
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.A664ConfigParseDialog.m_OpenDatabaseConflicts_Click(System.Object,System.EventArgs)">
            <summary>
            Occurs when the Boeing File Browse button is pressed.
            Sets the path of the ICD file.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.A664ConfigParseDialog.m_SlateIcdDirectoryBrowseButton_Click(System.Object,System.EventArgs)">
            <summary>
            Occurs when the Slate Directory Browse button is pressed.
            Sets the path of the ICD file.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.A664.Plugins.A664ConfigParseDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.A664ConfigParseDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.A664.Plugins.A664ConfigParseDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.ConnectionPool">
            <summary>
            Provides an application with a pool of OdbcConnections that can be used to 
            keep it from opening and closing too many OdbcConnections.  Typical usage is 
            as follows.
            <example>
            OdbcConnection connection = GetConnection(connectionString);
            // Do stuff with the connection
            ReleaseConnection(connection);
            </example>
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.ConnectionPool.sr_MaxOdbcConnections">
            <summary>
            The maximum number of odbcconnections that will be maintained for a given 
            connection string.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.ConnectionPool.s_Lock">
            <summary>
            Object used for maintaining thread safe access to the static fields.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.ConnectionPool.s_AvailableConnections">
            <summary>
            The library of available OdbcConnections organized by connection string
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.ConnectionPool.s_ConnectionCount">
            <summary>
            The number of connections created for each connection string.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.ConnectionPool.s_InUseConnections">
            <summary>
            The library of in use connections organized by connection string.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.ConnectionPool.GetConnection(System.String)">
            <summary>
            Gets the next available OdbcConnection.  If none are available this blocks
            the caller until one becomes available.  The caller must follow this method
            call with ReleaseConnection() in order to put it back into the pool and 
            make it available for other users.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <returns>An OdbcConnection that can be used by the caller.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.ConnectionPool.ReleaseConnection(System.Data.Odbc.OdbcConnection)">
            <summary>
            Puts the passed connection back into the available list after checking
            for the appropriate states to ensure the user didn't close it or anything.
            </summary>
            <param name="connection">The connection to make available to other users.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.ConnectionPool.InternalGetConnection(System.String)">
            <summary>
            This handles all the logic of creating queues of odbc connections and, 
            popping an available connection off a queue and passing it on to the
            user.
            </summary>
            <param name="connectionString">The connection string for the OdbcConnection to retrieve.</param>
            <returns>An OdbcConnection that can be passed on to the user.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.ConnectionPool.NewConnection(System.String)">
            <summary>
            Creates and opens a new odbc connection for the given connection string
            </summary>
            <param name="connectionString">The connection string that fully specifies 
            the ODBC connection to be made.</param>
            <returns>A valid, open ODBC connection or null.</returns>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.DalUtilities">
            <summary>
            Provided for generic routines that we can't inherit due to C#'s single inheritance and
            the fact that the classes that we want to inherit these routines are autogenerated.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.DalUtilities.InitializeTableAdapters(System.Data.DataTableCollection,System.String,System.Collections.Generic.Dictionary{System.String,Csf.Imets.ToolCore.Dal.GenericTableAdapter})">
            <summary>
            A generic routine to initialize the table adapters for a given dataset.
            </summary>
            <param name="Tables">the DataSet.Tables collection to initialize adapters for.</param>
            <param name="dataSetName">The string name of the dataset in question.</param>
            <param name="adapterList">the adap</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.DalUtilities.RowDataModified(System.Data.DataRow)">
            <summary>
            Checks to see if a row's data has actually changed.  (Often times 
            just selecting a row in a DataGridView will cause it to get the 
            RowState of Modified.)
            </summary>
            <param name="dataRow"></param>
            <returns>True if the row data is different than it's original version.  False if not</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.DalUtilities.TestConnection">
            <summary>
            Tests the current connection string to see if a valid Server/database/uid/pwd 
            combination has been provided.
            </summary>
            <returns>True if the current connection string successfully connects, 
            False if it does not</returns>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.DatabaseTable.IsInDatabase">
            <summary>
            This property implies that either the table was populated with a
            SELECT call or put into the database with an INSERT.  It's not a 
            guarentee that it's in the database, but it will help prevent 
            INSERT/UPDATE conflicts
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.DatabaseTable.Reload">
            <summary>
            This method forces a reload of the particular table
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.DatabaseTable.BeginLoad(System.String)">
            <summary>
            This method is used when a lot of database queries will be issues to the database.  This
            will keep the connection defined by connectionString open until EndLoad() is called.
            </summary>
            <param name="connectionString"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.DatabaseTable.ExecuteReader(System.String,System.String)">
            <summary>
            Users of this method must manually close the Reader when finished
            using it in order to close the connection correctly.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.DatabaseTable.Select">
            <summary>
            Generic method intended to load all elements of this table.  
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Avionics.A664.A664Networks.AddChild(Csf.Imets.ToolCore.Dal.Avionics.AvionicsTable)">
            <summary>
            Adds a child node to be copied to this table
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Avionics.A664.RxPort.AddChild(Csf.Imets.ToolCore.Dal.Avionics.AvionicsTable)">
            <summary>
            Copies a child node to this table
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Avionics.A664.TxPort.AddChild(Csf.Imets.ToolCore.Dal.Avionics.AvionicsTable)">
            <summary>
            Copies a child node to this table
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Avionics.A664.TxSubVirtualLink.AddChild(Csf.Imets.ToolCore.Dal.Avionics.AvionicsTable)">
            <summary>
            Copies a child node to this table
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Avionics.A664.TxVirtualLink.AddChild(Csf.Imets.ToolCore.Dal.Avionics.AvionicsTable)">
            <summary>
            Copies a child node to this table
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Avionics.A664.RxVirtualLink.AddChild(Csf.Imets.ToolCore.Dal.Avionics.AvionicsTable)">
            <summary>
            Copies a child node to this table
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Avionics.A664.Network.AddChild(Csf.Imets.ToolCore.Dal.Avionics.AvionicsTable)">
            <summary>
            Copies a child node to this table
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Avionics.A664.EndSystem.AddChild(Csf.Imets.ToolCore.Dal.Avionics.AvionicsTable)">
            <summary>
            Copies a child node to this table
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Avionics.Application.GetApplications(System.String,System.String)">
            <summary>
            This method will return all applications mapped with the specified where clause
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Avionics.Application.Search(System.String,System.String)">
            <summary>
            This method is intended to only search and return applications who match the pattern. 
            </summary>
            <param name="ConnectionString"></param>
            <param name="pattern"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Avionics.Asl.AslNetworks.AddChild(Csf.Imets.ToolCore.Dal.Avionics.AvionicsTable)">
            <summary>
            Adds a child node to be copied to this table
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Avionics.Asl.WellKnownName.GetWellKnownNames(System.String)">
            <summary>
            Performs a search for WellKnownNames on the given database.
            </summary>
            <param name="ConnectionString">The connectionstring to define the db to retrieve the WellKnownNames from.</param>
            <returns>List of WellKnownName found in the given db.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Avionics.AvionicsTable.AddChild">
            <summary>
            Adds a child node to this table
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Avionics.AvionicsTable.AddChild(Csf.Imets.ToolCore.Dal.Avionics.AvionicsTable)">
            <summary>
            Adds a child node to be copied to this table
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Avionics.AvionicsTable.GetConnectionInfo">
            <summary>
            This method is primarily used by the connections view as the primary information
            conveyed to the user regarding this item's connection.  Used for lower level components
            which actually have connections ( ports )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Avionics.AvionicsTable.GetConnectionDetails">
            <summary>
            This method is primarily used by the connections view as the secondary information
            conveyed to the user regarding this item's connection.  Used for lower level components
            which actually have connections ( ports )
            </summary>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Avionics.Payloads.DataObjectAlias.GetAvionicsDataObjectAliasesWithPattern(System.String,System.String)">
            <summary>
            Returns a list of DataObjectAlias objects which match a pattern
            </summary>
            <param name="connnectionString"></param>
            <param name="pattern"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Avionics.Payloads.DataObject.GetAvionicsDataObjectsWithId(System.String,System.Guid)">
            <summary>
            Returns list of DataObjects with matching id
            </summary>
            <param name="connnectionString"></param>
            <param name="guid"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Avionics.Payloads.Payload.GetAvionicsPayloads(System.String)">
            <summary>
            Gets all relevant avionics payloads
            </summary>
            <param name="connectionString"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Avionics.Payloads.Payload.GetAvionicsBuses(System.String)">
            <summary>
            Gets all relevant avionics buses payloads
            </summary>
            <param name="connectionString"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Avionics.Payloads.Payload.GetPayloadsWithPattern(System.String,System.String,System.String)">
            <summary>
            Gets all payloads containing a pattern
            </summary>
            <param name="connectionString"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Avionics.Payloads.Payload.GetParent">
            <summary>
            This method will return the Parent payload, if one exists.  Null otherwise.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Avionics.Payloads.Payload.GetNDOId">
            <summary>
            This is an expensive method with several calls to the database.  Candidate for optimization
            if it makes sense.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.Avionics.Payloads.Payload.AppDir">
            <summary>
            Class for holding the application and direction in the same area
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Avionics.Payloads.Payload.GetParentApplications">
            <summary>
            Get list of parent applications from a payload
            </summary>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Avionics.Payloads.Payload.Search(System.String,System.String,System.Boolean)">
            <summary>
            This method is intended to only search and return payloads who match the pattern and 
            have associated A664 Ports. 
            </summary>
            <param name="ConnectionString"></param>
            <param name="pattern"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Avionics.Payloads.Payload.SearchA664Payloads(System.String,System.String,System.Boolean)">
            <summary>
            This method is intended to only search and return payloads who match the pattern and 
            have associated A664 Ports. 
            </summary>
            <param name="ConnectionString"></param>
            <param name="pattern"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Avionics.Payloads.Payload.SearchA429Type(System.String,System.String,System.String)">
            <summary>
            This method is intended to only search and return payloads who match the pattern and 
            have a matching type param
            </summary>
            <param name="ConnectionString"></param>
            <param name="pattern"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.Avionics.Payloads.Payload.SearchType(System.String,System.String,System.String)">
            <summary>
            This method is intended to only search and return payloads who match the pattern and 
            have a matching type param
            </summary>
            <param name="ConnectionString"></param>
            <param name="pattern"></param>
            <returns></returns>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.AvioDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.AvioDataSet.avio_429_channelsDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.AvioDataSet.avio_429_channelsRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.AvioDataSet.PasteChannel(System.Windows.Forms.TreeNode,Csf.Imets.ToolCore.Dal.AvioDataSet.avio_modulesRow)">
            <summary>
            Pastes a channel (by generating new records and inserting them into the dataset)
            for the given module row.  The channel name may be changed (by appending an "_#")
            if there is already a child channel for the supplied module with the same name.
            </summary>
            <param name="m_CopyTarget">The root treenode of the channel to be copied.</param>
            <param name="targetModule">The module row that the channel should be a child of</param>
            <returns>The new tree nodes that can be added to the associated tree node
            for </returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.AvioDataSet.PasteCutChannel(System.Windows.Forms.TreeNode,Csf.Imets.ToolCore.Dal.AvioDataSet.avio_modulesRow)">
            <summary>
            Re-parents the cutTarget to the given module row and may add "_#" to the channel
            name if the current one is already present under the given module.
            </summary>
            <param name="cutTarget">The TreeNode of the channel to be reparented</param>
            <param name="targetModule">The module row to re-parent the channel to.</param>
            <returns>Null if action failed or nothing needed to be done, otherwise a reference 
            to the cutTarget so the caling app can reparent the TreeNodes to the right 
            place</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.AvioDataSet.ChannelExists(Csf.Imets.ToolCore.Dal.AvioDataSet.avio_modulesRow,System.String)">
            <summary>
            Utility routine to see if a channel with the same name already exists under
            a givien module.
            </summary>
            <param name="module">The module that is to be checked for a child channel.</param>
            <param name="channelName">The name of the channel to check for.</param>
            <returns>True if the channel name exists as a child of the module, false if not.</returns>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.AvioDataSet.avio_429_labelsDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.AvioDataSet.avio_429_labelsRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.AvioDataSet.avio_708_channelsRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.AvioDataSet.avio_708_framesRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.AvioDataSet.avio_modulesDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.AvioDataSet.avio_modulesRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.AvioDataSet.avio_serversDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.AvioDataSet.avio_serversRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.AvioDataSet.avio_unitsDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.AvioDataSet.avio_unitsRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.AvioDataSet.m_DefaultHwConfigId">
            <summary>
            The ID used in copying and pasting or cutting and pasting channels.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.AvioDataSet.DefaultHwConfigId">
            <summary>
            The Hardware Config ID used when pasting cut or copied records.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.AvioDataSet.SetupInternalRowChangedHandlers">
            <summary>
            Don't call this except from Initialize routines
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.AvioDataSet.SetupUnitNode(Csf.Imets.ToolCore.Dal.AvioDataSet.avio_unitsRow,System.Windows.Forms.TreeNode,System.String)">
            <summary>
            Adds all the subcategories of AVIO busses onto the unit and ensures the unitRow is
            properly initialized.  Note:  This will build subtrees on the AVIO bus categories but it
            is still safe to use for newly generated modules (e.g. by the user).
            </summary>
            <param name="unitRow">The actual datarow this ModuleNode is being generated for.</param>
            <param name="unitNode">The actual TreeNode that is getting set up.</param>
            <param name="pathName">The path to use for building the sub-trees for the different </param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.AvioDataSet.DuplicateRow(System.Data.DataRow)">
            <summary>
            Utiliy routine that generates a duplicate row of the passed data row.
            </summary>
            <param name="row">The row to be duplicated (needs to have a Table 
            reference)</param>
            <returns>Null if error, a new DataRow if successful.</returns>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.AvioDataSet.avio_708_channelsDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.AvioDataSet.avio_708_framesDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.AvioDataSet.sys_enumeratorsDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.AvioDataSet.sys_enumeratorsRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.AvioDataSet.avio_429_channelsRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.AvioDataSet.avio_unitsRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.AvioDataSet.avio_429_labelsRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.AvioDataSet.avio_708_channelsRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.AvioDataSet.avio_708_framesRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.AvioDataSet.avio_modulesRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.AvioDataSet.avio_serversRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.AvioDataSet.sys_enumeratorsRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.AvioDataSetTableAdapters.avio_429_channelsTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.AvioDataSetTableAdapters.avio_unitsTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.AvioDataSetTableAdapters.avio_429_labelsTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.AvioDataSetTableAdapters.avio_708_channelsTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.AvioDataSetTableAdapters.avio_708_framesTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.AvioDataSetTableAdapters.avio_modulesTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.AvioDataSetTableAdapters.avio_serversTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.AvioDataSetTableAdapters.sys_enumeratorsTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.AvioDataSetTableAdapters.TableAdapterManager">
             <summary>
            TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.AvioDataSetTableAdapters.TableAdapterManager.UpdateUpdatedRows(Csf.Imets.ToolCore.Dal.AvioDataSet,System.Collections.Generic.List{System.Data.DataRow},System.Collections.Generic.List{System.Data.DataRow})">
             <summary>
            Update rows in top-down order.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.AvioDataSetTableAdapters.TableAdapterManager.UpdateInsertedRows(Csf.Imets.ToolCore.Dal.AvioDataSet,System.Collections.Generic.List{System.Data.DataRow})">
             <summary>
            Insert rows in top-down order.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.AvioDataSetTableAdapters.TableAdapterManager.UpdateDeletedRows(Csf.Imets.ToolCore.Dal.AvioDataSet,System.Collections.Generic.List{System.Data.DataRow})">
             <summary>
            Delete rows in bottom-up order.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.AvioDataSetTableAdapters.TableAdapterManager.GetRealUpdatedRows(System.Data.DataRow[],System.Collections.Generic.List{System.Data.DataRow})">
             <summary>
            Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.AvioDataSetTableAdapters.TableAdapterManager.UpdateAll(Csf.Imets.ToolCore.Dal.AvioDataSet)">
             <summary>
            Update all changes to the dataset.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.AvioDataSetTableAdapters.TableAdapterManager.UpdateOrderOption">
             <summary>
            Update Order Option
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.AvioDataSetTableAdapters.TableAdapterManager.SelfReferenceComparer">
             <summary>
            Used to sort self-referenced table's rows
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.DatabaseConnectionInfo">
            <summary>
               The DatabaseConnectionInfo class represents the current database connection info.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.DatabaseConnectionInfo.ConnectionMethod">
            <summary>
               Types of used connection methods for PostgreSQL databases.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.DatabaseConnectionInfo.ConnectionMethod.Md5">
            <summary>
               md5 uses normal username and password connections.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.DatabaseConnectionInfo.ConnectionMethod.SspiDomain">
            <summary>
               SSPI domain checks to see that the Windows user is registered to the network.
               Each user will need a windowsusername setup in the PostgreSQL login roles.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.DatabaseConnectionInfo.ConnectionMethod.SspiPeer">
            <summary>
               SSPI peer checks to see that the Windows user exists at the computer host domain and is also registered on the connected computer.
               Each user will need a windowsusername setup in the PostgreSQL login roles of the connected computer.
               User accounts for both Windows computer, connected and host, will need to have the same username and password for the
               Windows login.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.DatabaseConnectionInfo.ConnectionMethod.Gss">
            <summary>
               Linux setup.
            </summary>
        </member>
        <member name="E:Csf.Imets.ToolCore.Dal.DatabaseConnectionInfo.PropertyChanged">
            <summary>
            Event for properties that change.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.DatabaseConnectionInfo.m_ConnectionTested">
            <summary>
               This is false if the connection hasn't been tested or it has and failed the test.  It's true
               if the connection to the database tested fine.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.DatabaseConnectionInfo.MethodPassword">
            <summary>
               Gets or sets the password to access the databse based on the connection method.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.DatabaseConnectionInfo.Password">
            <summary>
               Get and set the password for the connection. Not used in SSPI connections.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.DatabaseConnectionInfo.Method">
            <summary>
               Gets or sets the type of connection method of the database connection.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.DatabaseConnectionInfo.MethodString">
            <summary>
               Gets and sets the connection method using the string value.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.DatabaseConnectionInfo.Name">
            <summary>
               Gets or sets the Name of the database.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.DatabaseConnectionInfo.UserName">
            <summary>
               Gets or sets the username for logging messages to the databse.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.DatabaseConnectionInfo.MethodDatabaseUserName">
            <summary>
               Gets or sets the name of the database user.
               This is the name used to log in to the database.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.DatabaseConnectionInfo.DatabaseUserName">
            <summary>
               Gets and sets the database user name. Not used in SSPI connections.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.DatabaseConnectionInfo.IpAddress">
            <summary>
               Gets or sets the ipaddress for the database.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.DatabaseConnectionInfo.HostName">
            <summary>
               Gets or sets the hostname
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.DatabaseConnectionInfo.Port">
            <summary>
               Gets or sets the port the database is stored on.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.DatabaseConnectionInfo.MethodRealm">
            <summary>
            Gets or sets the network domain or peer computer name of the connection.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.DatabaseConnectionInfo.Timeout">
            <summary>
               Gets the amount of time before timing out.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.DatabaseConnectionInfo.ConnectionString">
            <summary>
               Gets the connectionString used by the database.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.DatabaseConnectionInfo.DbConnectionInfo">
            <summary>
               This public accessor provides a Apex friendly version
               of the current database connection info.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.DatabaseConnectionInfo.#ctor">
            <summary>
               Initializes a new instance of the <cref see="DatabaseConnectionInfo" />
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.DatabaseConnectionInfo.RemoveConnStringSetting(System.String,System.String)">
            <summary>
            Remove the setting from the connection string.
            </summary>
            <param name="settingName">The setting to remove.</param>
            <param name="conn">The connection string.</param>
            <returns>The new connection string.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.DatabaseConnectionInfo.AddConnStringSetting(System.String,System.String,System.String)">
            <summary>
               Adds setting to the end of the string.
            </summary>
            <param name="settingName"></param>
            <param name="value"></param>
            <param name="conn"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.DatabaseConnectionInfo.ReplaceConnStringSetting(System.String,System.String,System.String)">
            <summary>
               Replaces settings in the general connection string with appropriate ones for
               this databaseconnectioninfo object.
            </summary>
            <param name="settingName">The setting name (e.g. "server=", "uid=", "pwd=", etc</param>
            <param name="value">The new value</param>
            <param name="conn">The connection string to modify.</param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.DatabaseConnectionInfo.GetConnStringSetting(System.String,System.String)">
            <summary>
               Returns the setting associated with the settingName
            </summary>
            <param name="settingName">The name of the setting desired (e.g. "server=", "pwd=", etc)</param>
            <param name="conn">The ODBC connection string to retrieve the setting from.</param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.DatabaseConnectionInfo.SettingsMatch(Csf.Imets.ToolCore.Dal.IDalDataSet)">
            <summary>
               Checks if the DatabaseConnectionInfo object's settings match those of
               an object that implements the IDalDataSet.
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.DatabaseConnectionInfo.SettingsMatch(Csf.Imets.ToolCore.Dal.DatabaseConnectionInfo)">
            <summary>
               Checks to see if the properties of the passed DatabaseConnectionInfo object
               match those of this DatabaseConnectionInfo object.
            </summary>
            <param name="info"></param>
            <returns>True if settings match, false if not.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.DatabaseConnectionInfo.SettingsMatch(System.String)">
            <summary>
               Checks to see if the settings in a connection string match those in this
               DatabaseConnectionInfo.
            </summary>
            <param name="connection">A standard ODBC connection string.</param>
            <returns>True if the settings match (Name, DatabaseUserName, Hostname, Port.  False if not.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.DatabaseConnectionInfo.UpdateConnection(Csf.Imets.ToolCore.Dal.IDalDataSet)">
            <summary>
               Updates the passed IDalDataSet's database, pwd, server, and uid properties to
               match the DatabaseConnectionInfo's properties.
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.DatabaseConnectionInfo.TestConnection(System.String@)">
            <summary>
               Tests the current connection string to see if a valid Server/database/uid/pwd
               combination has been provided.
            </summary>
            <returns>
               True if the current connection string successfully connects,
               False if it does not
            </returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.DatabaseConnectionInfo.TableExists(System.String)">
            <summary>
            Checks to see if the table exists the database.
            </summary>
            <param name="tableName">The table to check for.</param>
            <returns>True if the table was found in the database. False otherwise</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.DatabaseConnectionInfo.Clone">
            <summary>
            Create a new DatabaseConnectionInfo object with the same properties as this.
            </summary>
            <returns>The new DatabaseConnectionInfo object.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.DatabaseConnectionInfo.Save(System.Xml.XmlElement)">
            <summary>
               Save the database connection info to a Xml node.
            </summary>
            <param name="dbNode">The xml element where the database connection info is saved.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.DatabaseConnectionInfo.Parse(System.Xml.XmlNode)">
            <summary>
               Retrieve the current database connection info from the xml node.
            </summary>
            <param name="element">The xml element where the database connection info is saved.</param>
            <returns>The database connection info parsed from the xml node.</returns>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.DataSetHelper">
            <summary>
            There is a lot of room for this class to grow...implements the IDalDataSet (and more)
            so that a specific typed dataset doesn't have to implement everything.  (I.e. i was finding
            there was a lot of code being duplicated in making the different datasets adhere to the
            IDalDataSet interface.)  This class could be inherited for any typed dataset specific 
            functionality required.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.DataSetHelper.m_Adapters">
            <summary>
            Contains all the table adapters for all the tables in the dataset, indexed by
            table name.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.DataSetHelper.DatabaseConnectionInfo">
            <summary>
            The database settings used by this helper. 
            Won't do anything on it's own...just resets the settings.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.DataSetHelper.SkipSave">
            <summary>
            Table names in this list are not saved.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.DataSetHelper.SaveOrder">
            <summary>
            This list provides the correct save order for the given
            dataset.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.DataSetHelper.TablesNotInDatabase">
            <summary>
            Contains a list of tables that do not currently exist in the
            database (but do exist in the dataset).  This value is not valid
            until CheckTableExistenceInDatabase() has been executed.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.DataSetHelper.IgnoreTables">
            <summary>
            The table names in this list will be completely ignored for both loading, saving, and updating.
            They recieve similar handling as tables in the dataset that do not exist in the database.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.DataSetHelper.MissingTables">
            <summary>
            True if there are tables in the dataset that do not exist
            on the actual database we're connected to.  This value is
            indeterminate until CheckTableExistenceInDatabase() has been
            executed.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.DataSetHelper.ExceptionList">
            <summary>
            The list of exceptions that occurred during the last save/load/whatever.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.DataSetHelper.CheckForTables">
            <summary>
            Whether or not, when a connection changes, the helper should check to ensure
            the database contains all the tables required for the DataSet.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.DataSetHelper.SaveAllChangesAndUpdate">
            <summary>
            Don't do this unless you want to wait for a long time...
            </summary>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.DataSetHelper.GetModificationCount">
            <summary>
            [Copied from IoDataSet with dataset reference changes]
            Counts up all the changes in the dataset and returns them via a 
            dictionary indexed by DataRowState enum.
            </summary>
            <returns>A dictionary indexed by the DataRowState enum that contains an 
            integer count of all the rows with the given state.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.DataSetHelper.SaveAllChanges">
            <summary>
            Saves all the changes in the DataSet to the database in the order specified by SaveOrder
            and only for tables that exist in the database and that do not appear in SkipSave.
            </summary>
            <returns>True if successful, False otherise</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.DataSetHelper.UpdateDataSet">
            <summary>
            Updates this helper's DataSet with new data from the database in a relatively 
            safe way.  Blocking execution.
            </summary>
            <returns>True if successful, false if not.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.DataSetHelper.UpdateDataSet(System.ComponentModel.BackgroundWorker,System.ComponentModel.DoWorkEventArgs)">
            <summary>
            Updates this helper's DataSet with new data from the database in a relatively 
            safe way.  Designed for background execution.
            </summary>
            <param name="worker"></param>
            <param name="e"></param>
            <returns>string "Success" if it worked, "Error(s) occurred" otherwise.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.DataSetHelper.SchemaErrors(System.Collections.Generic.List{System.Exception})">
            <summary>
            Checks a list of exceptions to see if there was a schema error.
            </summary>
            <param name="list"></param>
            <returns>True if there was, false if not.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.DataSetHelper.SchemaErrors(System.Exception)">
            <summary>
            Checks an exception to see if it indicates there was a schema error.
            </summary>
            <param name="ex"></param>
            <returns>True if there was, false if not</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.DataSetHelper.DataAdapterRowUpdated(System.Object,System.Data.Odbc.OdbcRowUpdatedEventArgs)">
            <summary>
            Method that determines whether or not an error message (when saving) is due to 
            the database carrying out cascading changes or whether there is a real error.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.DataSetHelper.ProcessTable(System.String)">
            <summary>
            When given a table name returns True if the table should be processed (e.g. loaded or filled)
            and false if not.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.DataSetHelper.GetFullConnectionString">
            <summary>
            Gets the full connectionstring (including password) from DataBaseConnectionInfo.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Csf.Imets.ToolCore.Dal.DataSetManager.sr_MaxCachedCompletedTasks">
            <summary>
            The maximum number of completed tasks to cache in the completed tasks list.
            This keeps the required memory / resources under control for long running
            processes.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.DataSetManager.DataSet">
            <summary>
            Gets/Sets the dataset
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.DataSetManager.DataSetHelper">
            <summary>
            Gets the dataset as an IDataSetHelper
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.DataSetManager.Helper">
            <summary>
            Gets the helper class that does the saving and stuff
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.DataSetManager.Name">
            <summary>
            The name assigned to this EditData object
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.DataSetManager.LastLoaded">
            <summary>
            The date/time the data was last loaded (if == DateTime.MinValue then
            it's never been loaded)
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.DataSetManager.SaveDataSync">
            <summary>
            This save operates in the same thread as the calling thread.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.DataSetManager.AddCompletedTask(Csf.Imets.ToolCore.Dal.BackgroundResultArgs)">
            <summary>
            Adds a completed task onto the list of completed tasks, removing the oldest
            completed task if the size of the list exceeds the maximum number to be
            maintained.
            </summary>
            <param name="backgroundResultArgs">The value pushed onto the completed 
            tasks list</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.DataSetManager.GetTotalRowCount">
            <summary>
            Quick little informative method to get the total number of rows across all tables in 
            this dataset.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.General.DatabaseLock.Lock">
            <summary>
            This method will create a new lock in the database or steal the existing one.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.General.DatabaseLock.GetLock(System.String,System.String)">
            <summary>
             This method will attempt to retrieve a lock by the particular name.  
             If the lock exists, it will return the current lock, if not, it will
             generate a new local lock. The lock command must be issued to have it uploaded to the database.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.General.DatabaseLock.ExecuteReader(System.String,System.String)">
            <summary>
            Users of this method must manually close the Reader when finished
            using it in order to close the connection correctly.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.IcDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.IcDataSet.ic_request_parametersDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.IcDataSet.ic_setsDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.IcDataSet.ic_requestsDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.IcDataSet.ic_groupsDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.IcDataSet.sys_enumeratorsDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.IcDataSet.ic_request_parametersRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.IcDataSet.ic_setsRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.IcDataSet.ic_requestsRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.IcDataSet.ic_groupsRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.IcDataSet.sys_enumeratorsRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.IcDataSet.ic_request_parametersRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.IcDataSet.ic_setsRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.IcDataSet.ic_requestsRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.IcDataSet.ic_groupsRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.IcDataSet.sys_enumeratorsRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.IcDataSetTableAdapters.ic_request_parametersTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.IcDataSetTableAdapters.ic_setsTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.IcDataSetTableAdapters.ic_requestsTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.IcDataSetTableAdapters.ic_groupsTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.IcDataSetTableAdapters.sys_enumeratorsTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.ICDDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.ICDDataSet.icd_vl_list_viewDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.ICDDataSet.icd_virtual_linksDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.ICDDataSet.icd_virtual_linksRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.ICDDataSet.icd_vl_list_viewRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.ICDDataSet.icd_virtual_linksRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.ICDDataSet.icd_vl_list_viewRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.ICDDataSetTableAdapters.icd_virtual_linksTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.ICDDataSetTableAdapters.icd_vl_list_viewTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Dal.IDalDataSet.ExceptionList">
            <summary>
            The list of exceptions that occurred during the last save/load/whatever.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.IDalDataSet.Initialize(System.Boolean)">
            <summary>
            Initializes the table adapters and fills the dataset from the database
            if fill is true.
            </summary>
            <param name="fill">Whether or not to fill with data from the database.</param>
            <returns>True if successful, false if not</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.IDalDataSet.SaveAllChangesAndUpdate">
            <summary>
            Attempts to propagate all the changes made to the dataset back to the database.
            </summary>
            <returns>True if successful, false if the dataset was cleared and re-filled.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.IDalDataSet.GetAdapter(System.String)">
            <summary>
            Gets a table adapter for the requested table.
            </summary>
            <param name="tableName">The string name of the table.</param>
            <returns>null if bad tableName, the GenericTableAdapter otherwise.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.IDalDataSet.InitializeTableAdapters">
            <summary>
            Initializes the table adapters for the dataset.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.IDalDataSet.FillDataSet">
            <summary>
            Fills the dataset with data (must be called after InitializeTableAdapters.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.IDalDataSet.SendTableChanges(System.String)">
            <summary>
            Propagates a specific table's changes back to the database.
            </summary>
            <param name="tableName"></param>
            <returns>True if successful, false if not.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.IDalDataSet.TestConnection">
            <summary>
            Allows the user to see if connection settings are valid and will properly cause
            a connection to occur.
            </summary>
            <returns>True if connection settings are valid, false if not</returns>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.IDataSetHelper">
            <summary>
            Unfortunately this interface should really be named IDalDataSet and the IDalDataSet
            should be named IDataSetHelper.  The intention is that this interface would
            be implemented by a typed dataset which would then use its DataSetHelper object 
            to do all the data loading/saving/etc.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.IDataSetHelper.GetNewDataSet">
            <summary>
            Generates a new dataset of the same type.  This method needs to 
            make sure the helper's SaveOrder, SkipSave, IgnoreTables, and TablesNotInDatabase
            fields get transferered to the new table as well.
            </summary>
            <returns>A new DataSet of the same type.</returns>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.ImetsDataSetInterface">
            <summary>
            OBE... use IDalDataSet instead...
            
            This interface is not presently used but is being put together to help standardize the
            IMETS Data Sets generated in the Csf.Imets.ToolCore.Dal.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.ImetsDataSetInterface.GetAdapter(System.String)">
            <summary>
            Allows the user to retrieve a table adapter for the provided table name.
            </summary>
            <param name="tableName">The name of the table to retrieve the table adapter for</param>
            <returns>The GenericTableAdapter reference or null if not found.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.ImetsDataSetInterface.InitializeTableAdapters">
            <summary>
            Should be called in the constructor of the including application, 
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.ImetsDataSetInterface.FillDataSet">
            <summary>
            Loads all data from the database into the local dataset.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.ImetsDataSetInterface.SendTableChanges(System.String)">
            <summary>
            Performs an update to try and send local changes to the database/data source.
            </summary>
            <param name="tableName">The table to send the changes for.</param>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.MpDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.MpDataSet.mp_routeDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.MpDataSet.mp_vehicleDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.MpDataSet.mp_enumerationsDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.MpDataSet.mp_missionDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.MpDataSet.mp_route_legDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.MpDataSet.mp_route_pointDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.MpDataSet.mp_turnDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.MpDataSet.mp_vehicleRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.MpDataSet.mp_enumerationsRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.MpDataSet.mp_missionRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.MpDataSet.mp_route_legRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.MpDataSet.mp_route_pointRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.MpDataSet.mp_turnRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.MpDataSet.mp_routeRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.MpDataSet.mp_vehicleRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.MpDataSet.mp_enumerationsRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.MpDataSet.mp_missionRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.MpDataSet.mp_route_legRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.MpDataSet.mp_route_pointRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.MpDataSet.mp_turnRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.MpDataSet.mp_routeRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.MpDataSetTableAdapters.mp_missionTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.MpDataSetTableAdapters.mp_enumerationsTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.MpDataSetTableAdapters.mp_vehicleTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.MpDataSetTableAdapters.mp_route_legTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.MpDataSetTableAdapters.mp_route_pointTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.MpDataSetTableAdapters.mp_turnTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.MpDataSetTableAdapters.mp_routeTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.MpDataSetTableAdapters.TableAdapterManager">
             <summary>
            TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.MpDataSetTableAdapters.TableAdapterManager.UpdateUpdatedRows(Csf.Imets.ToolCore.Dal.MpDataSet,System.Collections.Generic.List{System.Data.DataRow},System.Collections.Generic.List{System.Data.DataRow})">
             <summary>
            Update rows in top-down order.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.MpDataSetTableAdapters.TableAdapterManager.UpdateInsertedRows(Csf.Imets.ToolCore.Dal.MpDataSet,System.Collections.Generic.List{System.Data.DataRow})">
             <summary>
            Insert rows in top-down order.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.MpDataSetTableAdapters.TableAdapterManager.UpdateDeletedRows(Csf.Imets.ToolCore.Dal.MpDataSet,System.Collections.Generic.List{System.Data.DataRow})">
             <summary>
            Delete rows in bottom-up order.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.MpDataSetTableAdapters.TableAdapterManager.GetRealUpdatedRows(System.Data.DataRow[],System.Collections.Generic.List{System.Data.DataRow})">
             <summary>
            Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Dal.MpDataSetTableAdapters.TableAdapterManager.UpdateAll(Csf.Imets.ToolCore.Dal.MpDataSet)">
             <summary>
            Update all changes to the dataset.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.MpDataSetTableAdapters.TableAdapterManager.UpdateOrderOption">
             <summary>
            Update Order Option
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.MpDataSetTableAdapters.TableAdapterManager.SelfReferenceComparer">
             <summary>
            Used to sort self-referenced table's rows
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.nav_airfieldsDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.nav_vhf_navaidsDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.nav_commDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.nav_ground_positionDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.nav_ilsDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.nav_markerDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.nav_ndb_navaidsDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.nav_parkingDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.nav_updatesDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.vis_airportsDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.vis_runwaysDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.vis_test_patternsDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.vis_modelsDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.nav_runwaysDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.nav_flight_positionsDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.nav_glsDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.nav_gls_path_pointDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.nav_airfieldsRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.nav_vhf_navaidsRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.nav_commRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.nav_ground_positionRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.nav_ilsRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.nav_markerRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.nav_ndb_navaidsRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.nav_parkingRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.nav_updatesRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.vis_airportsRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.vis_runwaysRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.vis_test_patternsRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.vis_modelsRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.nav_runwaysRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.nav_flight_positionsRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.nav_glsRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.nav_gls_path_pointRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.nav_airfieldsRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.nav_vhf_navaidsRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.nav_commRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.nav_ground_positionRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.nav_ilsRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.nav_markerRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.nav_ndb_navaidsRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.nav_parkingRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.nav_updatesRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.vis_airportsRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.vis_runwaysRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.vis_test_patternsRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.vis_modelsRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.nav_runwaysRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.nav_flight_positionsRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.nav_glsRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSet.nav_gls_path_pointRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSetTableAdapters.nav_airfieldsTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSetTableAdapters.nav_vhf_navaidsTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSetTableAdapters.nav_commTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSetTableAdapters.nav_ground_positionTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSetTableAdapters.nav_ilsTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSetTableAdapters.nav_markerTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSetTableAdapters.nav_ndb_navaidsTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSetTableAdapters.nav_parkingTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSetTableAdapters.nav_updatesTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSetTableAdapters.vis_airportsTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSetTableAdapters.vis_runwaysTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSetTableAdapters.vis_test_patternsTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSetTableAdapters.vis_modelsTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSetTableAdapters.nav_runwaysTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSetTableAdapters.nav_flight_positionsTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSetTableAdapters.nav_glsTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.NavDataSetTableAdapters.nav_gls_path_pointTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Dal.RowToControlDisplay">
            <summary>
            Root node of the tree view in the IoNavigatorControl
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.A429Symbol">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.A429Symbol1">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.A664Symbol">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.A664Symbol1">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Accept">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Accept_24x24">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Accept1">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.AcceptFaded_24x24">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Add">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.add_24">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Advisory">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Air_Freighter_Info_24x24">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Airspeed_Freeze_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Altitude_Freeze_46x46">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.arrow_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.arrow_16_copy">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.arrow_16_down">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.arrow_16_up">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.arrow_161">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.ArrowLeft_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.ArrowLeft_64x64">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.ArrowLeftStart_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.ArrowLeftStart_64x64">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.ArrowRight_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.ArrowRight_64x64">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.ArrowRightStart_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.ArrowRightStart_64x64">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Attitude_Freeze_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.AutoScroll">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.bit_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.bit_add_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.bit_add_161">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.bit_close_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.bit_lock_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.bit_ok_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.bit_remove_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.BreakLink">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.BreakLink_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.byte_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.byte_add_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.byte_remove_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Categories">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Caution">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Caution_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Caution1">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Child">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Clipboard">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Close">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Collapse">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.CollapseAll">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.ColorHelp">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.ColorScheme_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Connect">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.ConnectFailed">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.ConnectSucceeded">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.ConnectWait">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.ConnectWait_Off">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Contact_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Copy">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.copy_24">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Customize">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Cut">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.DatabaseTable_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Debug">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Debug_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Default">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Delete">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Delete_24x24">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Delete_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Delete_64x64">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.DeleteAll">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.diskette_24">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Document_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.DocumentEdit">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.DocumentExport_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.DocumentImport_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.DocumentNew">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Download">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Event">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Event_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Execute">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Execute_24x24">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Execute_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Exit">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Exit_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Expand">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Filter16x16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.FilterApply">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.FilterApply_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.FilterDelete">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.first_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.first_161">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Folder">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.FolderClosed_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.FolderOpen">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.FolderOpen_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Freeze">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Freeze_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Freeze_Aft">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Freeze_Aft_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Fuel_Freeze_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Gauge_24x24">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Gear">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.GreenFlag">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Help">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Help_24x24">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Help_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Help_64x64">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Home">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.homework_24">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Hyperlink_24x24">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Icon429">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Icon664">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Icon708">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.IconASL">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Info">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Info_24x24">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Info_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.initialize_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.initialize_48x48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Initializing">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Initializing_Aft">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Initializing_Aft_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.IO">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.LayoutTable_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Linegraph">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Link">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Link_24x24">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.LogView_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Match_Width_Height_Refresh">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Minus">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Motherboard_24x24">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.NoAccess">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.NoColor">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.OK_24x24">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Ok_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.OpenFile">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.OpenFile_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.OverrideLink">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.ParseFiles">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.ParseFiles1">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Paste">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.paste_24">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.PauseBatchButton_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Pencil">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.PhotoNew_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Ping">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Ping_Failed">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Ping_Pending">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Ping_Success">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.PlotAll">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Plus">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.PopUpFilter16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Position_Freeze_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Printer">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Printer_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Refresh">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Refresh_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.RefreshTeal">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Relationship">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.RemoveAll">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Report">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Report_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Report1">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Restart">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.RestartAll">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.CsfLogoWhite">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Route_Map_Refresh">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Run">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Run_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Run_Aft">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Run_Aft_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Save">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Save_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Save1">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.scissors_24">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.ServerExecute">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Settings">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Shutdown">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Shutdown_24x24">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Shutdown_64x64">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Shutdown1">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.StandBy">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.StandbyAll">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.stop_red_24">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Tachometer_24x24">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.TaskList_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.UnCustomized">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Undo">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Undo_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.User5">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.VDN">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.vdn1">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.Warning">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.White">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.window_24">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Properties.Resources.zoom_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Log.LogSeverity">
            <summary>
            
            Debugging information used during development or maintenance.
                  e_debug = 0,
            Event - For logging what the user is doing e.g. an IOS event logger.
                  e_event = 1,
            Advisory - informational only, user can choose to ignore.
                  e_advisory  = 2,
            Caution - can continue training, but needs to be fixed at first opportunity
                  e_caution = 3,
            Warning - must resolve to continue normal operation
                  e_warning = 4
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Log.ILogger">
            <summary>
            This interface is used for components that want to be able to log to an external
            entity such as the LogViewerComponent. 
            
            The following function body is recommended for your log handler:
            
                if (Log != null)
                {
                    ThreadHelper.InvokeAsync(Log, this, new LogEventArgs(message, severity));
                }
             
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Log.ILogger.LogMessage(System.String)">
            <summary>
            Simplest form of the log event
            </summary>
            <param name="message"></param>
        </member>
        <member name="F:Csf.Imets.ToolCore.Log.InternalLogData.m_Data">
            <summary>
            The datatable used for all messages logged by the AddMessage routines.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Log.InternalLogData.AddMessage(System.String,Csf.Imets.ToolCore.Log.LogSeverity)">
            <summary>
            Adds a message to the log's data table. This is also not thread safe.  Use 
            AddMessageThreadSafe.
            </summary>
            <param name="message">The message</param>
            <param name="severity">How severe the message is</param>
            <returns>The index of the message added to the DataGridView or else 0.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Log.InternalLogData.InitializeDataTable">
            <summary>
            Ensures the m_InternalData table is generated.  This is needed
            for application logging and needs to be modified to reflect the current 
            Postgres database structure.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Log.LogData.HelpAvailable">
            <summary>
            Can help be launched from this LogData object.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Log.LogViewerDataSource">
            <summary>
            The possible states of the Log Viewer, either for viewing internal messages
            of an application or database connected.  They can be switched during operation
            by the ChangeLogViewerDisplay method.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Log.LogViewerDataSource.Internal">
            <summary>
            Shows internally logged messages by the AddMessage or threadsafe methods.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Log.LogViewerDataSource.Database">
            <summary>
            Shows messages from the postgres database.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Log.LogViewerControl">
            <summary>
            This provides a log viewing component to any application that needs to see simulation logs as
            captured by the VDN.  
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Log.LogViewerControl.LogDelegate">
            <summary>
            Provides a delegate definition for components that want to allow
            log functions to connect to their logging events.
            </summary>
            <param name="msg">A string of the message to log.</param>
        </member>
        <member name="T:Csf.Imets.ToolCore.Log.LogViewerControl.LogDelegateComplete">
            <summary>
            Provides a delegate definition for components that want to allow
            log functions to connect to their logging events.
            </summary>
            <param name="msg">An array of strings, ordered according to the DgvColumns 
            enumeration (less the SeverityIcon).</param>
        </member>
        <member name="F:Csf.Imets.ToolCore.Log.LogViewerControl.m_DataSource">
            <summary>
            Keeps the internal state of the log viewer.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Log.LogViewerControl.m_SelectedRow">
            <summary>
            This row is for maintaining the selected row when AutoScrolling is off
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Log.LogViewerControl.FilterAtTop">
            <summary>
            When true, the filter widgets are displayed on the top of the log viewer component.  When
            false, they are displayed on the bottom.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Log.LogViewerControl.AutoUpdate">
            <summary>
            Enables the automatic updating of data.  NOTE: when using InternalLogData 
            this must be set to true or else the LogViewerControl will not properly update.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Log.LogViewerControl.RefreshRate">
            <summary>
            Contains the refresh rate of the background timer that updates the database.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Log.LogViewerControl.#ctor">
            <summary>
            This is the default constructor.  It ensures the component is properly initialized.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Log.LogViewerControl.AddMessage(System.String)">
            <summary>
            Adds a message to the log's data table. This is also not thread safe.  Use 
            AddMessageThreadSafe.
            </summary>
            <param name="message">An array of strings, ordered according to the DgvColumns enumeration (less the SeverityIcon).</param>
            <returns>The index of the message added to the DataGridView or else 0.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Log.LogViewerControl.Connect">
            <summary>
            Only useful when the LogViewerControl is used as an internal logger
            (e.g. LogViewerDataSource.Internal). Clears out the data, sets 
            AutoUpdate to true, and connects.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Log.LogViewerControl.Disconnect">
            <summary>
            Only useful when the LogViewerControl is used for an internal
            logger.  (e.g. LogViewerDataSource.Internal) 
            Clears out the data and "disconnects".
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Log.LogViewerControl.SetDataSource(Csf.Imets.ToolCore.Log.LogData)">
            <summary>
            Allows the user to change the display state of the log viewer from
            internal messages to database connected.
            </summary>
            <param name="newSource">The LogData to use as the new data source</param>
            <returns>True if the state changed, false otherwise.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Log.LogViewerControl.BindingSourceListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
            <summary>
            This function is for resetting the selected row if AutoScrolling is on.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Log.LogViewerControl.GetSeverityIcon(System.Int32)">
            <summary>
            Gets the severity bitmap to be used in the DgvLog for 
            </summary>
            <param name="index">The integer representation of the severity.</param>
            <returns>The bitmap associated with the provided severity.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Log.LogViewerControl.LogCellFormatting(System.Object,System.Windows.Forms.DataGridViewCellFormattingEventArgs)">
            <summary>
            Formats the dgvLog columns appropriately based on the underlying data.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Log.LogViewerControl.LogViewerLoad(System.Object,System.EventArgs)">
            <summary>
            This routine is called when the LogViewer is loaded.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Log.LogViewerControl.PopulateSeverityIcons">
            <summary>
            Method attempts to find resources whos names match the LogSeverity enumeration
            and places them in a list used to populate the icons for the severity column.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Log.LogViewerControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Log.LogViewerControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Log.LogViewerControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Log.LogViewerForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Log.LogViewerForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Log.LogViewerForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Log.PostgresLogData.m_TableName">
            <summary>
            The table name that the log viewer will attempt to retrieve log messages from.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Log.PostgresLogData.UpdateRecordsFromDatabase(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            This is called from a background timer thread that works to retrieve data from the database.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Log.PostgresLogData.GetPgLogQuery">
            <summary>
            Generates a query that will work with the Postgres database used by the VDN.
            </summary>
            <returns>A string that contains a select statement that will return a result set 
            of logged messages</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Log.PostgresLogData.GetPgSimStartQuery">
            <summary>
            Generates a query that will work with the Postgres database used by the VDN.
            </summary>
            <returns>A string that contains a select statement that will return a result set 
            of logged messages</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Log.PostgresLogData.GetPgQueryConditions">
            <summary>
            Gets the query conditions as specified by the FilterTimeStamp and FilterUser properties.
            </summary>
            <returns>The appropriate WHERE clause to be appended to the SELECT statement or a zero 
            length string</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.SimDocs.Controls.DocListView.DocListView_ColumnClick(System.Object,System.Windows.Forms.ColumnClickEventArgs)">
            <summary>
            This is an event callback function that gets called when a user clicks any
            of the column headings to sort ascending or descending. We check the column number to determine
            whether the same column was clicked twice or if a different column was clicked the second time. This determines
            if we sort ascending or descending for the clicked column. Also, we return for the document size column
            because this sort does not sort numbers currently.
            </summary>
            <param name="sender">not used</param>
            <param name="e">This is used to check what column number was clicked.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.SimDocs.Controls.DocListView.GetListViewItem(Csf.Imets.ToolCore.SimDocs.IDocument,System.Windows.Forms.ListViewGroup)">
            <summary>
            Looks in the local Documents folder and retrieves all the files. Then it parses through the PDF files
            and extracts the Title of the PDF file if it exists. Then, each document is used to create a ListViewItem
            and each ListViewItem is added to the ListView that is displayed in the HelpForm dialog box.
            </summary>
            <param name="doc">This is the document object that will be used to created the ListViewItem</param>
            <param name="parent">This is used if the ListView belongs to a parent ListViewGroup, otherwise the value is null.</param>
            <returns>The ListViewItem (the document) that will be added to the ListView</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.SimDocs.Controls.DocListView.AddDocumentsToList">
            <summary>
            Looks in the local Documents folder and retrieves all the files. Then it parses through the PDF files
            and extracts the Title of the PDF file if it exists. Then, each document is used to create a ListViewItem
            and each ListViewItem is added to the ListView that is displayed in the HelpForm dialog box.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.SimDocs.Controls.DocListView.DocListMouseDownClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            This sets "m_MouseClicks" to 1 (single click) or 2 (double click). Used below in select document change event
            to make sure user did not do a double click.
            </summary>
            <param name="sender">not used</param>
            <param name="e">used to retrieve number of mouse clicks</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.SimDocs.Controls.DocListView.DocListViewMouseDoubleClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            called when user double clicks a document in the ListView. The document will open
            in its external native application.
            </summary>
            <param name="sender">not used</param>
            <param name="e">used to retrieve what mouse button was clicked and location of mouse cursor when clicked in order
            to make sure an item was selected from the ListView</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.SimDocs.Controls.DocListView.DocListViewItemSelectionChanged(System.Object,System.Windows.Forms.ListViewItemSelectionChangedEventArgs)">
            <summary>
            This is called when a document is selected in a ListView
            </summary>
            <param name="sender">not used</param>
            <param name="e">used to retrieve the selected item</param>
        </member>
        <member name="T:Csf.Imets.ToolCore.SimDocs.Controls.ListViewItemComparer">
            <summary>
            Class that implements the manual sorting of items by columns.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.SimDocs.Controls.ListViewItemComparer.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.SimDocs.Controls.ListViewItemComparer.#ctor(System.Windows.Forms.ListView,System.Int32,System.Windows.Forms.SortOrder)">
            <summary>
            Constructor
            </summary>
            <param name="column">Setting the currently clicked column for subitem comparisons</param>
            <param name="order">The current sort order</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.SimDocs.Controls.ListViewItemComparer.Compare(System.Object,System.Object)">
            <summary>
            This function compares two ListView subitems from a clicked column for sorting purposes.
            </summary>
            <param name="x">ListView subitem 1 from clicked column</param>
            <param name="y">ListView subitem 2 from clicked column</param>
        </member>
        <member name="P:Csf.Imets.ToolCore.SimDocs.Controls.DocTreeView.DocumentLibrary">
            <summary>
            The document library that this control is working with.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.SimDocs.Controls.DocTreeView.ShowDocuments">
            <summary>
            Whether or not documents should be displayed in the treeview.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.SimDocs.Controls.DocTreeView.GetFuzzyDocuments">
            <summary>
            Whether or not the documents retrieved for a given outline item should use the
            "Fuzzy" mode.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.SimDocs.Controls.IDocControl.DocumentLibrary">
            <summary>
            The document library that this control is working with.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.SimDocs.Controls.IDocControl.ShowDocuments">
            <summary>
            Whether or not documents should be displayed in the control.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.SimDocs.Document.m_FileName">
            <summary>
            The path and the file name of the document relative to the
            document library's BasePath;
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.SimDocs.Document.IsFileLocked(System.IO.FileInfo)">
            <summary>
            This function checks to see if the file is locked/open.
            </summary>
            <param name="file">file object containing all the information necessary to open the file</param>
            <returns>true or false if file is locked/open</returns>
        </member>
        <member name="T:Csf.Imets.ToolCore.SimDocs.DocumentLibrary">
            <summary>
            The idea here is to provide an interface to a "set" of documents organized by
            some outline.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.SimDocs.DocumentLibrary.Refresh">
            <summary>
            Starts a refresh operation the cached document library outline information.
            </summary>
            <returns>True if the current refresh operation has been cancelled to perform a refresh.</returns>
        </member>
        <member name="P:Csf.Imets.ToolCore.SimDocs.FileSystemDocumentLibrary.MappedDrive">
            <summary>
            The Mapped drive reference for this document library.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.SimDocs.FileSystemDocumentLibrary.BgLibraryLoaderDoWork(System.Object,System.ComponentModel.DoWorkEventArgs)">
            <summary>
            Background method for loading the library.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.SimDocs.FileSystemDocumentLibrary.GetTableOfContents(System.String,System.Collections.Generic.List{Csf.Imets.ToolCore.SimDocs.OutlineItem}[],System.Int32,System.ComponentModel.BackgroundWorker,System.ComponentModel.DoWorkEventArgs)">
            <summary>
            Recursive routine (used by the backgroundworker) to get all the outline items for a given basepath.
            </summary>
            <param name="BasePath">The base path to recursively get all the directories under.</param>
            <param name="totalList">A reference to the list of all outline items.</param>
            <param name="level">The outline level we're at</param>
            <param name="worker">A reference to the background worker</param>
            <param name="e">A reference to the event args.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.SimDocs.FileSystemDocumentLibrary.GetAllDocuments(Csf.Imets.ToolCore.SimDocs.OutlineItem)">
            <summary>
            Gets a list of all documents associated with the provided outline item.
            </summary>
            <param name="itemDocsRequested">The reference to retrieve all documents for.</param>
            <returns>The documents associated with the given OutlineItem</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.SimDocs.FileSystemDocumentLibrary.GetAllDocuments(Csf.Imets.ToolCore.SimDocs.OutlineItem,System.Boolean)">
            <summary>
            Gets a list of all documents associated with the provided outline item.
            </summary>
            <param name="itemDocsRequested">The reference to retrieve all documents for.</param>
            <param name="fuzzy">Whether any "close" matches are also added (Not working presently)</param>
            <returns>The documents associated with the given OutlineItem</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.SimDocs.FileSystemDocumentLibrary.GenericGetSubOutlineItems(Csf.Imets.ToolCore.SimDocs.OutlineItem,System.Int32)">
            <summary>
            Gets the requested OutlineItems that have been cached.
            </summary>
            <param name="requested">The chapter, section, subsection, code designation to get the subitems of.</param>
            <param name="level">The desired level of outline items to return. (0 for chapter, 
            1 for section, 2 for subsection, 3 for code</param>
            <returns>The found list or null.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.SimDocs.FileSystemDocumentLibrary.GetHelpFile(Csf.Imets.ToolCore.SimDocs.OutlineItem,System.String)">
            <summary>
            Gets the help file associated with the given outline item and shortname. 
            Please note this will only locate help files with the following naming convention:
            *[Tool Short Name]*.chm (e.g. DIOMhelpfile.chm)
            </summary>
            <param name="outlineItem">The outline item of the tool</param>
            <param name="shortName">The short name of the tool (e.g. RTMM)</param>
            <returns>The full name and path of the helpfile found or ""</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.SimDocs.FileSystemDocumentLibrary.GetOutlineItem(System.String)">
            <summary>
            Returns a reference to the actual outline item as generated from
            the HelpDataSet row (i.e. the data in the database.)
            </summary>
            <param name="reference">A string of the format "(chapter)[-(section)[-(subsection)[-(code)]]]" 
            (e.g. "115-8-0-0" or "115" or "115-8")</param>
            <returns>The OutlineItem associated with that reference or null if not found.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.SimDocs.FileSystemDocumentLibrary.FindOutlineItem(Csf.Imets.ToolCore.SimDocs.OutlineItem)">
            <summary>
            Finds the outline item that matches the passed outline item.
            </summary>
            <param name="itemToFind">An outline item with the appropriate chapter, section, 
            subsection etc to match with one of the internal outline items actually associated
            with a directory.</param>
            <returns>Null or the outline item found.</returns>
        </member>
        <member name="T:Csf.Imets.ToolCore.SimDocs.DocumentType">
            <summary>
            May not be needed
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.SimDocs.IDocument.View">
            <summary>
            Opens an external viewer for a given document.
            </summary>
            <returns>True if successfully opened the document viewer, false if not.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.SimDocs.IDocument.ViewInternal">
            <summary>
            Allows a document to be viewed as part of an application.
            </summary>
            <returns>A control that can be added to the current form or null if not supported.</returns>
        </member>
        <member name="P:Csf.Imets.ToolCore.SimDocs.IDocumentLibrary.BasePath">
            <summary>
            The base path of the document library.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.SimDocs.IDocumentLibrary.Available">
            <summary>
            Whether or not the library is cached and available for loading.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.SimDocs.OutlineItem.#ctor(System.String)">
            <summary>
            This will take strings like "115-7-20 The title is this" and set up the outline item with 
            the appropriate numbering level and with the title set to "The title is this".  Please 
            note, for 115-7 the level will be 1, and for 115 the level will be 0.
            </summary>
            <param name="fullName">The string designating the outline item.  DO NOT use 115-09-00 to 
            designate a level 1 outline item because this constructor will force the level to be 2 
            (because there are three numbers...)</param>
        </member>
        <member name="P:Csf.Imets.ToolCore.SimDocs.OutlineItem.Number">
            <summary>
            The heading number.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.SimDocs.OutlineItem.Description">
            <summary>
            A textual description of the heading
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.SimDocs.OutlineItem.Title">
            <summary>
            The heading's title.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.SimDocs.OutlineItem.Level">
            <summary>
            The level this outline element is on.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.SimDocs.OutlineItem.Delimiter">
            <summary>
            The delimiter between the heading numbers (default is "-")
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.SimDocs.OutlineItem.Tag">
            <summary>
            User data
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.SimDocs.OutlineItem.FullNumber">
            <summary>
            Returns the full paragraph number of the outline item.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.SimDocs.OutlineItem.GetOutlineNumberAtLevel(System.Int32)">
            <summary>
            
            </summary>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="T:Csf.Imets.ToolCore.SoftwareVersion">
            <summary>
            Class used to define the current software Release version.
            This class is not static to allow for binding in the XAML code.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.SoftwareVersion.BuildType.Development">
            <summary>
            Development release not guaranteed to be consecutive
            Usually built from a branch. Used for testing and debugging.
            Not reviewed. (NO GUARANTEES)
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.SoftwareVersion.BuildType.Engineering">
            <summary>
            Engineering release this has been formally reviewed and 
            checked in. Not formally tested.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.SoftwareVersion.BuildType.ReleaseCandidate">
            <summary>
            A tagged engineering release used going through
            formal testing to become release.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.SoftwareVersion.BuildType.Release">
            <summary>
            This has been formally reviewed and formally tested.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.SoftwareVersion.c_Instance">
            <summary>
            The instance class is used instead of static class
            to allow binding in XAML.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.SoftwareVersion.c_BuildTypeStrings">
            <summary>
            Strings used to represent the build type to the user.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.SoftwareVersion.c_MajorVersion">
            <summary>
            The major version of the ToolSuite
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.SoftwareVersion.c_MinorVersion">
            <summary>
            The minor version of the ToolSuite
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.SoftwareVersion.c_BugFixVersion">
            <summary>
            The bug fix version of the ToolSuite
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.SoftwareVersion.c_BuildType">
            <summary>
            The build type of the most recent build
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.SoftwareVersion.c_BuildVersion">
            <summary>
            The build version of the current build type for the current version
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.SoftwareVersion.c_CopyrightYear">
            <summary>
            The year this software was copyrighted.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.SoftwareVersion.Instance">
            <summary>
            Gets the instance of the Software Version Class.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.SoftwareVersion.BuildVersion">
            <summary>
            The build version string. (ie  dev8) 
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.SoftwareVersion.InstallVersion">
            <summary>
            The current version of the ToolSuite 
            This is the full version string including the build type.
            ie X.X.X-devX
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.SoftwareVersion.Version">
            <summary>
            The current version of the ToolSuite 
            X.X.X
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.SoftwareVersion.Is64">
            <summary>
            Gets whether the current process is running as a 64 bit process.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.SoftwareVersion.Is32">
            <summary>
            Gets whether the current process is running as a 32 bit process.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.SoftwareVersion.ProcessType">
            <summary>
            Gets a string representation 
            of the current process type (32-bit or 64-bit)
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.SoftwareVersion.CopyrightYear">
            <summary>
             Gets the year of the copyright for the ToolSuite.
            </summary>            
        </member>
        <member name="P:Csf.Imets.ToolCore.SoftwareVersion.Copyright">
            <summary>
            Gets the copyright string.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.SoftwareVersion.#ctor">
            <summary>
            Initializes a new instance of the SoftwareVersion class.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.Controls.ImetsRibbonControl.m_SettingsCollection">
            <summary>
            Reference to Parent Collection
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.Controls.ImetsRibbonControl.m_Initialized">
            <summary>        
            This variable states whether or not the ImetsTools have been initialized.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.Controls.ImetsRibbonControl.DotNetBarManagerControl">
            <summary>
            The DotNetBarManager control used by this tool.  Must be set after
            the specialized class's InitializeComponents() method.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Controls.ImetsRibbonControl.InitializeImetsComponents">
            <summary>
            Creates and adds imets components to the ImetsRibbonControl.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Controls.ImetsRibbonControl.OnMainControlDetach">
            <summary>
            Executed whenever the main control is detached from our ribbon control.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Controls.ImetsRibbonControl.SaveLayout(System.Boolean)">
            <summary>
            Handles saving the doc tab and document layouts to a file.
            </summary>
            <param name="stripDocuments">If true causes the documents portion
            of the layout to be stripped out of the layout file.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Controls.ImetsRibbonControl.LoadLayout">
            <summary>
            Handles loading the doc tab and document layouts from a file.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Controls.ImetsRibbonControl.SimAttached(System.Object,Csf.Imets.ToolCore.Taf.SimAttachedArgs)">
            <summary>
            Handles the SimAttached event by registering required event handlers on the new sim.
            </summary>
            <param name="sender">not used</param>
            <param name="args">not used</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Controls.ImetsToolForm.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Handles saving the layout after the base OnClosing() method returns.
            </summary>
            <param name="e">Passed to base OnClosing but not used otherwise.</param>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.Controls.ImetsToolOpenGlControl.DotNetBarManagerControl">
            <summary>
            The DotNetBarManager control used by this tool.  Must be set after
            the specialized class's InitializeComponents() method.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Controls.ImetsToolOpenGlControl.SimAttached(System.Object,Csf.Imets.ToolCore.Taf.SimAttachedArgs)">
            <summary>
            Handles the simattached event by registering event handlers to the 'new' simconnection.
            </summary>
            <param name="sender">not used</param>
            <param name="args">not used</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Controls.ImetsToolOpenGlControl.OnMainControlDetach">
            <summary>
            Nothing to do for this.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Controls.ImetsToolOpenGlControl.SaveLayout(System.Boolean)">
            <summary>
            No effect for open gl control
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Controls.ImetsToolOpenGlControl.LoadLayout">
            <summary>
            No effect for open gl control.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Controls.ImetsToolRibbonForm.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Handles saving the layout after the base OnClosing() method returns.
            </summary>
            <param name="e">Passed to base OnClosing but not used otherwise.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Controls.ImetsToolRibbonUserControl.Dispose(System.Boolean)">
            <summary>
            Cleans up references this class holds so that objects can be
            properly garbage collected.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.Controls.ImetsToolUserControl.DotNetBarManagerControl">
            <summary>
            The DotNetBarManager control used by this tool.  Must be set after
            the specialized class's InitializeComponents() method.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Controls.ImetsToolUserControl.SimAttached(System.Object,Csf.Imets.ToolCore.Taf.SimAttachedArgs)">
            <summary>
            Handles the simattached event by registering event handlers to the 'new' simconnection.
            </summary>
            <param name="sender">not used</param>
            <param name="args">not used</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Controls.ImetsToolUserControl.OnFirstSeen">
            <summary>
            Loads the layout for the DotNetBarManager if applicable to this tool.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Controls.ImetsToolUserControl.OnMainControlDetach">
            <summary>
            Nothing to do since this is the main control and we can't detach from ourselves.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Controls.ImetsToolUserControl.SaveLayout(System.Boolean)">
            <summary>
            Handles saving the doc tab and document layouts to a file.
            </summary>
            <param name="stripDocuments">If true causes the documents portion
            of the layout to be stripped out of the layout file.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Controls.ImetsToolUserControl.LoadLayout">
            <summary>
            Handles loading the doc tab and document layouts from a file.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Controls.ImetsToolUserControl.GetLayoutFilenameAndPath">
            <summary>
            Constructs the full path and filename for the default layout file
            for the tool.  (e.g [path]\[toolname].layout)
            </summary>
            <returns>The full path and filename for the default layout file for this tool.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Controls.ImetsToolUserControl.Dispose(System.Boolean)">
            <summary>
            Cleans up any references or events that might cause our object (or others) to 
            not get garbage collected.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Controls.SettingsControl.UpdateSettingsListing">
            <summary>
            Updates the selected object. Clears the Current control and adds the needed controls for this object.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Controls.SettingsControl.CreateSimulator(Csf.Imets.ToolCore.Taf.Controls.SettingsControl.ComplexSettingsProperty)">
            <summary>
            Creator method that takes a simulator setting property and generates a
            combo box control for the Settings dialog box.
            </summary>
            <param name="property">The actual property that a control is being created for</param>
            <returns>A combobox with selections for all simulators as defined in the sim 
            suite editor, with the currently selected simulator active.</returns>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.Controls.SettingsForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Controls.SettingsForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Controls.SettingsForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.Controls.SimControllerRibbonTab.m_SyncObject">
            <summary>
            This is going to be a reference to our parent container
            since RibbonTabs live in RibbonControls and RibbonControls
            implement ISynchronizeInvoke, we can use the parent for 
            invocation.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Controls.SimControllerRibbonTab.UpdateSimulator(Csf.Imets.ToolCore.Taf.Simulator)">
            <summary>
            Updates to simulator referenced by 'value' by unregistering all events with the current
            simulator and referencing events with the new simulator.
            </summary>
            <param name="value">The new simulator to be used/connected to</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Controls.SimControllerRibbonTab.IcGroupComboClick(System.Object,System.EventArgs)">
            <summary>
            Update IcGroupList if Modified externally.
            </summary>
            <param name="sender">Not used</param>
            <param name="e">Not used</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Controls.SimControllerRibbonTab.IcSetComboClick(System.Object,System.EventArgs)">
            <summary>
            Update IcSetList if Modified externally.
            </summary>
            <param name="sender">Not used</param>
            <param name="e">Not used</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Controls.SimControllerRibbonTab.InitializeButtonClick(System.Object,System.EventArgs)">
            <summary>
            Handles the click event for the Initialize button on the SimController toolbar
            </summary>
            <param name="sender">not used</param>
            <param name="e">not used</param>
        </member>
        <member name="T:Csf.Imets.ToolCore.Taf.Controls.SimSuite.MethodModel">
            <summary>
            Model to describe the Method ComboBox.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.Controls.SimSuite.MethodModel.MethodList">
            <summary>
            List that respresents the elements in the Method combobox.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Controls.SimSuite.MethodModel.#ctor">
            <summary>
            Constructor for the Method model.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Taf.Controls.SimSuite.SimDatabaseControl">
            <summary>
            Interaction logic for SimDatabaseControl.xaml
            </summary>
            <summary>
            SimDatabaseControl
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.Controls.SimSuite.SimDatabaseControl.IpAddress">
            <summary>
            Gets and sets the ip address of the database.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.Controls.SimSuite.SimDatabaseControl.Port">
            <summary>
            Gets and sets the port of the database.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.Controls.SimSuite.SimDatabaseControl.Username">
            <summary>
            Gets and sets the username used for logging messages in the database.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.Controls.SimSuite.SimDatabaseControl.DatabaseName">
            <summary>
            Gets and sets the name of the database.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.Controls.SimSuite.SimDatabaseControl.Realm">
            <summary>
            Gets and sets the realm name of the server.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.Controls.SimSuite.SimDatabaseControl.IsSelected">
            <summary>
            Gets and sets whether or not this SimDatabaseControl panel is selected.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.Controls.SimSuite.SimDatabaseControl.Database">
            <summary>
            Get the databse connection information.
            </summary>
        </member>
        <member name="E:Csf.Imets.ToolCore.Taf.Controls.SimSuite.SimDatabaseControl.RemoveClick">
            <summary>
            Event regarding the appearance of the remove button.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Controls.SimSuite.SimDatabaseControl.#ctor(Csf.Imets.ToolCore.Dal.DatabaseConnectionInfo)">
            <summary>
            Constructor for the SimDatabaseControl.
            </summary>
            <param name="connInfo">The database connection info.</param>
        </member>
        <member name="E:Csf.Imets.ToolCore.Taf.Controls.SimSuite.SimDatabaseControl.PropertyChanged">
            <summary>
            The property changed event.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Controls.SimSuite.SimDatabaseControl.OnPropertyChanged(System.String)">
            <summary>
            Signals that the parameter's property changed.
            </summary>
            <param name="prop">The changed property.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Controls.SimSuite.SimDatabaseControl.MethodBox_Initialized(System.Object,System.EventArgs)">
            <summary>
            Sets the Method ComboBox to the database connections method on initialization.
            </summary>
            <param name="sender">Object initialization.</param>
            <param name="e">None.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Controls.SimSuite.SimDatabaseControl.MethodBox_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Changes the database connection method based on the selection of the Method ComboBox.
            </summary>
            <param name="sender">Method ComboBox.</param>
            <param name="e">None.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Controls.SimSuite.SimDatabaseControl.RealmBox_Initialized(System.Object,System.EventArgs)">
            <summary>
            Initialized the Realm boxes to check by checking to see if they are needed.
            </summary>
            <param name="sender">Realm TextBox.</param>
            <param name="e">None.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Controls.SimSuite.SimDatabaseControl.ChangeRealmVisibility">
            <summary>
            Hides the Realm when the Realm property is not needed.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Controls.SimSuite.SimDatabaseControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Taf.Controls.SimSuite.SimKernelControl">
            <summary>
            Interaction logic for SimKernelControl.xaml
            </summary>
            <summary>
            SimKernelControl
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Controls.SimSuite.SimKernelControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Taf.Controls.SimSuite.SimSuiteControl">
            <summary>
            Interaction logic for SimSuiteControl.xaml
            </summary>
            <summary>
            SimSuiteControl
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Controls.SimSuite.SimSuiteControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Taf.Controls.SimSuite.SimSuiteEditorWindow">
            <summary>
            Interaction logic for SimSuiteEditorWindow.xaml
            </summary>
            <summary>
            SimSuiteEditorWindow
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Controls.SimSuite.SimSuiteEditorWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Taf.Controls.SimSuite.SimSuiteListControl">
            <summary>
            Interaction logic for SimSuiteList.xaml
            </summary>
            <summary>
            SimSuiteListControl
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Controls.SimSuite.SimSuiteListControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Taf.Controls.SimSuite.SimSystemControl">
            <summary>
            Interaction logic for SimSystemControl.xaml
            </summary>
            <summary>
            SimSystemControl
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Controls.SimSuite.SimSystemControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Taf.Controls.SimSuite.SimSystemModel">
            <summary>
            The purpose of this class is only to act as a wrapper for the SimSystem
            data to make the data more palatable for WPF
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Taf.Controls.SimSuite.SimSystemsListControl">
            <summary>
            Interaction logic for SimSystemsListControl.xaml
            </summary>
            <summary>
            SimSystemsListControl
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Controls.SimSuite.SimSystemsListControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Taf.Controls.SimSuite.SimulatorControl">
             <summary>
             ========================================
             .NET Framework 3.0 Custom Control
             ========================================
            
             Follow steps 1a or 1b and then 2 to use this custom control in a XAML file.
            
             Step 1a) Using this custom control in a XAML file that exists in the current project.
             Add this XmlNamespace attribute to the root element of the markup file where it is 
             to be used:
            
                 xmlns:MyNamespace="clr-namespace:Csf.Imets.ToolCore.Taf.Controls.Settings"
            
            
             Step 1b) Using this custom control in a XAML file that exists in a different project.
             Add this XmlNamespace attribute to the root element of the markup file where it is 
             to be used:
            
                 xmlns:MyNamespace="clr-namespace:Csf.Imets.ToolCore.Taf.Controls.Settings;assembly=Csf.Imets.ToolCore.Taf.Controls.Settings"
            
             You will also need to add a project reference from the project where the XAML file lives
             to this project and Rebuild to avoid compilation errors:
            
                 Right click on the target project in the Solution Explorer and
                 "Add Reference"->"Projects"->[Browse to and select this project]
            
            
             Step 2)
             Go ahead and use your control in the XAML file. Note that Intellisense in the
             XML editor does not currently work on custom controls and its child elements.
            
                 <example><code>MyNamespace:SimulatorControl</code></example>
            
             </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.Controls.TafRibbonTab.SimConnection">
            <summary>
            Simulation Connection
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.Controls.TafRibbonTab.IaPath">
            <summary>
            Path to the Instructor Associate executable.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.Controls.TafRibbonTab.IcProfilePath">
            <summary>
            Path to the IC Profile.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Controls.TafRibbonTab.RefreshTools">
            <summary>
            This clears out any tool buttons in the Tools ribbon control and adds
            them all back in.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Controls.TafRibbonTab.AddIcEditorButton">
            <summary>
            If the button doesn't already exist, creates it and adds it to 
            the tools container with the other IMETS items. If the button
            does exist then it just adds it to the tools container.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Controls.TafRibbonTab.LaunchIcEditorButtonClick(System.Object,System.EventArgs)">
            <summary>
            Handles the click event on the IC Editor tool button.
            </summary>
            <param name="sender">Not used</param>
            <param name="e">Not used</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Herd.Controls.HelpForm.HelpForm_Deactivate(System.Object,System.EventArgs)">
            <summary>
            If user clicks anywhere but this HelpForm dialog box and focus is lost, then this event callback function is called. The purpose of this
            callback function is to set the text to black for all the items in the ListView and unselect the selected item(s). If this is not done,
            then the selected item(s) will disappear because at this point the backcolor of the text is white and when focus is lost, the selection
            disappears making it look like the selected item(s) disappeared even though they are just white on a white background.
            </summary>
            <param name="sender">not used</param>
            <param name="e">not used</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Herd.Controls.HelpForm.BtnOpenStandardHelpClick(System.Object,System.EventArgs)">
            <summary>
            This is a button that opens the default Help document in the ListView. It opens the document externally in its native application.
            </summary>
            <param name="sender">not used</param>
            <param name="e">not used</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Herd.Controls.HelpForm.BtnOpenSelectedDocumentClick(System.Object,System.EventArgs)">
            <summary>
            Select a document or multiple documents (holding down shift or ctrl key)
            then click this open document button to open the document(s) in their
            native application.
            </summary>
            <param name="sender">not used</param>
            <param name="e">not used</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Herd.Controls.HelpForm.buttonItem1_Click(System.Object,System.EventArgs)">
            <summary>
            Event callback function that is called when View Detail/Tile button is pressed on this dialog box.
            Basically, this button changes between ListView "Detail" view and "Tile" view. m_DtvSimDocs.ItemHeight
            is only set when using the DocumentLibrary and not using local Documents.
            </summary>
            <param name="sender">not used</param>
            <param name="e">not used</param>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.Herd.Controls.HelpForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Herd.Controls.HelpForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Herd.Controls.HelpForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Taf.Herd.Controls.PopupForm">
            <summary>
            Produced off the back of HGS Ninja :-)
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.Herd.Controls.PopupForm.m_OpacityStep">
            <summary>
            Used to fade in the form as it is sliding in.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.Herd.Controls.PopupForm.MessagesAvailable">
            <summary>
            If there are Alerts available to be displayed.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.Herd.Controls.PopupForm.EnablePopup">
            <summary>
            If the popup should display when new messages are added.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.Herd.Controls.PopupForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Herd.Controls.PopupForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Herd.Controls.PopupForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.Herd.NotifyLoggedIssueEventArgs.Handled">
            <summary>
            If someone has already notified the user about this event.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Taf.Herd.Scanner">
            <summary>
            Basically this connects to the passed in LogData's update event and whenever
            an update occurrs it grabs the new messages, processes them, and raises 
            it's own NotifyLoggedIssue event that can be handled by whoever is subscribed
            to it.  The log scanning is handled in a background thread and the issue
            event is invoked from the "report progress" method of the background worker.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Taf.LicenseThread">
            <summary>
            A class that runs a thread to constantly check that a 
            license is still connected.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.LicenseThread.c_MaxFailures">
            <summary>
            Max number of failures before shutting down the application.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.LicenseThread.m_NumberFailures">
            <summary>
            Number of consecutive missed licenses.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.LicenseThread.m_BackgroundThread">
            <summary>
            The thread that checks the license constantly.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.LicenseThread.m_License">
            <summary>
            A pointer to the checked out license.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.LicenseThread.m_FeatureMap">
            <summary>
            The feature map to check each frame.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.LicenseThread.m_ProductCode">
            <summary>
            The product code to use for this license thread.
            Default is the Tool Suite Product code.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.LicenseThread.IsLicensed">
            <summary>
            Gets a flag stating whether the tool is currently 
            licesnsed. This is loaded at start and will not change.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.LicenseThread.FeatureMap">
            <summary>
            Gets the feature map that is checked each frame.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.LicenseThread.ProductCode">
            <summary>
            Gets the product code for the checked out license.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.LicenseThread.#ctor">
            <summary>
            Initializes a new instance of the LicenseThread.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.LicenseThread.Initialize">
            <summary>
            Creates a background thread. And attempts to check
            out a license for it.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.LicenseThread.BackgroundThread(System.Object)">
            <summary>
            Check once a second to see if there is still a valid IMETS license connected.
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.LicenseThread.LicenseFailure">
            <summary>
            Displays a message box stating that the license did not validate and then kills the process.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Taf.ProgrammticToolRegistry">
            <summary>
            Adds tools to the ToolRegistry through code rather then through data files.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ProgrammticToolRegistry.LoadToolListing">
            <summary>
            This method is unused in the Programmatic Tool Registry.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ProgrammticToolRegistry.AddToolType(System.String,System.String,System.String,System.Type)">
            <summary>
            Adds a tool to the ToolRegistry given the toolName icon_path and type.
            </summary>
            <param name="toolName">Name of tool to add</param>
            <param name="icon">icon name</param>
            <param name="type">The type of the tool.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.IToolBatchPrint.BatchPrintOperation(System.Boolean)">
            <summary>
            Sets up the printer object to default values and prints the current plot pages 
            without showing any options windows (unless the default printer shows some).
            </summary>
            <param name="saveToFile">If true, saves png images to the default directory.</param>
        </member>
        <member name="T:Csf.Imets.ToolCore.Taf.IToolControl">
            <summary>
            Adds additional properties and method definitions to the IToolChild interface
            specifically for tool controls.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.IToolControl.MainControl">
            <summary>
            A reference to the main control of a tool
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.IToolControl.OnMainControlDetach">
            <summary>
            Method to be called when the main control gets detached or changed.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.IToolControl.DotNetBarManagerControl">
            <summary>
            A reference to the control that manages the dock tab and document layout.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.IToolControl.SaveLayout(System.Boolean)">
            <summary>
            Method that saves the DotNetBarManagerControl's layout to a file.
            </summary>
            <param name="stripDocuments"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.IToolControl.LoadLayout">
            <summary>
            Method that loads a DotNetBarManagerControl's layout from a file.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.SettingsGroup.FindSetting(System.String)">
            <summary>
            This will return the first setting matching the specified key.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Csf.Imets.ToolCore.Taf.SimControl.FacilityManager">
            <summary>
            This class manages three separate types of facilities, the nav database, airways, and 
            custom flight repositions.  The facility types are not loaded unless the user specifically
            enables them to be loaded via the "LoadXXXDatabases" methods.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.SimControl.FacilityManager.m_AirwaysDatabasesEnabled">
            <summary>
            Whether or not the airways databases have been enabled by the consumer of this object.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.SimControl.FacilityManager.m_NavDatabasesEnabled">
            <summary>
            Whether or not the navaids have been enabled by the consumer of this object.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.SimControl.FacilityManager.m_FlightPostitionsDatabaseEnabled">
            <summary>
            Whether or not the flight positions have been enabled by the consumer of this object.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.SimControl.FacilityManager.NavDatabase">
            <summary>
            Provides access to all facility related navaids.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.SimControl.FacilityManager.AirwaysDatabase">
            <summary>
            Provides a listing of all available airways.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.SimControl.FacilityManager.AirwaysDatabaseLoaded">
            <summary>
            When true the AirwaysDatabase has been loaded from the database and
            is available to access.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.SimControl.FacilityManager.AirfieldsDatabase">
            <summary>
            Provides a listing of all available airfields.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.SimControl.FacilityManager.FlightPositionsDatabase">
            <summary>
            Provides a listing of custom flight positions.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.SimControl.FacilityManager.FlightPositionsDatabaseLoaded">
            <summary>
            Returns flag whether FlightPosition Database is loaded or not.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.SimControl.FacilityManager.NavDatabasesLoaded">
            <summary>
            Returns flag whether Nav Database is loaded or not.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.SimControl.FacilityManager.LoadAirwaysDatabases">
            <summary>
            Start Airways Database loading and set enable flag to show
            the consumer has enabled the airways database.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.SimControl.FacilityManager.LoadNavDatabases">
            <summary>
            Start Nav Database loader and enable the flag
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.SimControl.FacilityManager.LoadFlightPositionsDatabases">
            <summary>
            Start FlightPositions Database loader and enable the flag
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.SimControl.FacilityManager.FlightPositionsDatabaseLoadCompleted(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)">
            <summary>
            This method handles the BackgroundWorker.RunWorkerCompleted event. It gets called whenever
            the event occurs.
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">A System.ComponentModel.RunWorkerCompletedEventArgs that contains the event data.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.SimControl.FacilityManager.DatabaseConnectionInfoChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the database connection info changed event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Csf.Imets.ToolCore.Taf.SimControl.AftStatus">
            <summary>
            Corresponds with Aft|Status|AFT_STATUS_VALUES|Outputs|Int64.
            enum
             {
              e_inactive=0,
              e_testDefinitionError,
              e_invalidTestNumber,
              e_caseStarting,
              e_aircraftTrimming,
              e_executing,
              e_flightSegmentComplete,
              e_phaseComplete,
              e_caseComplete,
              e_aircraftTrimError
             };
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.SimControl.SimSystem.LoadSimTree">
            <summary>
            Connects to specified VDN and subscribes to all treenodes
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.SimControl.SimSystem.UnloadSimTree">
            <summary>
            Disconnects from specified VDN and unsubscribes from all treenodes
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Taf.SimControl.SimSystems">
            <summary>
            This is an internal representation of all the Systems ( computers ) 
            on the Simulator
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Taf.SimSuite">
            <summary>
            The SimSuite class contains all information about 
            the simulators defined by SimaticFiles on the current system.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.SimSuite.sc_SimSuiteDir">
            <summary>
            The directory name simsuite files are stored in.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.SimSuite.SimSuitePath">
            <summary>
            The path to the directory containing the global simsuite files.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.SimSuite.ForceUniqueName(Csf.Imets.ToolCore.Taf.Simulator)">
            <summary>
            Force unique name of a Simulator.
            </summary>
            <param name="sim">Simulator</param>
        </member>
        <member name="T:Csf.Imets.ToolCore.Taf.Simulator">
            <summary>
            The simulator class contains all connection information about a simulator
            and the current NetVdnClient to connect to the simulator.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.Simulator.MaxSimNameLength">
            <summary>
            Maximum length of simulator name.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.Simulator.SimaticFile">
            <summary>
            The location of the Simulator file.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Simulator.ToolDetaching(Csf.Imets.ToolCore.Taf.Tool)">
            <summary>
            Occurs when the given tool is disconnecting 
            from the simulator.
            </summary>
            <param name="tool">Tool disconnecting.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Simulator.Save">
            <summary>
            Saves the simulator information to the given path in SimaticFile.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Simulator.Parse(System.String)">
            <summary>
            The parse method parses a file and returns a simulator. 
            </summary>
            <param name="filename">The full path to the Simatic.Xml file to parse</param>
            <returns>A new simulator with the settings parsed from the file.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Simulator.HerdLogScannerNotifyLoggedIssueEvent(System.Object,Csf.Imets.ToolCore.Taf.Herd.NotifyLoggedIssueEventArgs)">
            <summary>
            Connected to the scanner's event so that it gets bubbled up from the simulator
            and not the scanner.
            </summary>
            <param name="sender">m_HerdLogScanner</param>
            <param name="e"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.Tool.OnToolShutdown(System.ComponentModel.CancelEventArgs)">
            <summary>
            Calls shutdown event to inform application this tool has been shutdown.
            If the particular tool needs to be able to cancel it's shutdown then
            it needs to override this routine and provide it's own cancelling logic.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Taf.WellKnownTools">
            <summary>
            This enumeration provides a listing of the well known tools.
            This enumeration is case sensitive as the enumerated name should match
            the ShortName of the tool.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.ToolRegistrationMethod.Registry">
            <summary>
            This method loads all installed tools via the windows registry
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.ToolRegistrationMethod.DataFiles">
            <summary>
            This method loads all installed tools via tool registry files
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.ToolRegistrationMethod.Programmatic">
            <summary>
            This method populates tools manually
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Taf.LaunchToolHandler">
            <summary>
            Represents the method that will handle the events dealing with the launching on a tool.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="tool">The tool that was launched.</param>
        </member>
        <member name="T:Csf.Imets.ToolCore.Taf.LastToolClosedHandler">
            <summary>
            Represents the method that will handle the last event being closed.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Taf.LogMessageHandler">
            <summary>
            Represents the method that will handle <see cref="E:Csf.Imets.ToolCore.Taf.ToolFramework.LogMessage"/> event. 
            </summary>
            <param name="message">The message to log.</param>
            <param name="severity">The severity of the message.</param>
        </member>
        <member name="T:Csf.Imets.ToolCore.Taf.ActiveToolChangedHandler">
            <summary>
            Represents the method that will handle the ToolFramework.ActiveToolChanged event.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Taf.ToolFramework">
            <summary>
            The ToolFramework class is a static class
            that gives overall information about the current ToolFramework application.
            </summary>
        </member>
        <member name="E:Csf.Imets.ToolCore.Taf.ToolFramework.LastToolClosed">
            <summary>
            Occurs when the last open tool is closed.
            </summary>
        </member>
        <member name="E:Csf.Imets.ToolCore.Taf.ToolFramework.LogMessage">
            <summary>
            Occurs when the ToolFramework logs a message.
            </summary>
        </member>
        <member name="E:Csf.Imets.ToolCore.Taf.ToolFramework.ActiveToolChanged">
            <summary>
            Occurs when the currently active tool changes.
            </summary>
        </member>
        <member name="E:Csf.Imets.ToolCore.Taf.ToolFramework.AllToolsShutdown">
            <summary>
            Occurs when A command is sent to shutdown all open tools.
            </summary>
        </member>
        <member name="E:Csf.Imets.ToolCore.Taf.ToolFramework.ToolLaunching">
            <summary>
            Occurs when a tool is launched.
            </summary>
        </member>
        <member name="E:Csf.Imets.ToolCore.Taf.ToolFramework.HerdMonitoringActiveChanged">
            <summary>
            Occurs when the Herd Monitoring is switched between Active and Inactive.
            </summary>
        </member>
        <member name="E:Csf.Imets.ToolCore.Taf.ToolFramework.m_OrderedNotifyLoggedIssueEvent">
            <summary>
            Hidden event that notifies subscribers of Logged Issues that get bubbled up
            from HERD.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.ToolFramework.c_ToolRegistryPath">
            <summary>
            The path where the tool registry exists.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.ToolFramework.c_ToolRegistryExtension">
            <summary>
            The extension for the tool registry file.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.ToolFramework.c_LayoutFileExtension">
            <summary>
            Contains the extension for a tool's layout xml file.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.ToolFramework.s_LicenseThread">
            <summary>
            Thread used to check for license attached at all times.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.ToolFramework.sr_ApplicationDir">
            <summary>
            The path to the application data dir.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.ToolFramework.c_LogDirName">
            <summary>
            The folder name for log files.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.ToolFramework.c_DefaultCoreDir">
            <summary>
            The default root directory of CSF core files.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.ToolFramework.c_ToolDirName">
            <summary>
            The component name for all toolframework files.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.ToolFramework.c_TraceFileExt">
            <summary>
            The extension for the Trace File.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.ToolFramework.c_Root">
            <summary>
            Root path to the CSF core files.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.ToolFramework.c_MaxNumberOfTraceFiles">
            <summary>
            The max number of trace files to log for each tool.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.ToolFramework.m_RegistrationMethod">
            <summary>
            The current method used to register tools.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.ToolFramework.m_ToolRegistry">
            <summary>
            The registry to store all the registered tools.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.ToolFramework.m_ActiveTools">
            <summary>
            The active tools.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.ToolFramework.m_StartupTool">
            <summary>
            The initial tool that was started.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.ToolFramework.m_SimSuite">
            <summary>
            The SimSuite containing the available simulators.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.ToolFramework.m_ActiveTool">
            <summary>
            The currently active tool.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.ToolFramework.m_SimSuiteWindow">
            <summary>
            The SimSuite Editor window used to edit a Simulator.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.ToolFramework.m_NotifyLogPriority">
            <summary>
            A list of log priorities to monitor.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.ToolFramework.m_Shutdown">
            <summary>
            A flag whether the application has been shutdown.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.ToolFramework.m_ToolAtaOutlineItem">
            <summary>
            Ata information for the given tool.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.ToolFramework.m_BufferedMessages">
            <summary>
            A list of buffered messages to send to the Logger.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.ToolFramework.m_LogMessage">
            <summary>
            A handler to store the methods for Logging messages.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.ToolFramework.m_HerdMonitoringActive">
            <summary>
            A flag whether or not the Herd Monitoring is Active.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.ToolFramework.m_TraceListener">
            <summary>
            The trace file listener.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.ToolFramework.m_TraceLog">
            <summary>
            The file stream for the trace log.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.ToolFramework.m_LogTimer">
            <summary>
            Timer that is used to examine the log file
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.ToolFramework.m_MaxLogFileSizeBytes">
            <summary>
            Max log file size in bytes
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.ToolFramework.PrintCommand">
            <summary>
            Command used for printing the tool.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.ToolFramework.ConnectCommand">
            <summary>
            Command used for connecting to the host.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.ToolFramework.SettingsCommand">
            <summary>
            Command used for displaying the settings.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.ToolFramework.HelpCommand">
            <summary>
            Command used for displaying the help dialog.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.ToolFramework.AboutCommand">
            <summary>
            Command used for displaying the about box.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.ToolFramework.EditSimSuiteCommand">
            <summary>
            Command used for displaying the SimSuite Editor.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.ToolFramework.RootPath">
            <summary>
            Core Root path 
            Default: c:\rc_core
            </summary>        
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.ToolFramework.ToolPath">
            <summary>
            The tool path.        
            </summary>        
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.ToolFramework.ToolRegistrationMethod">
            <summary>
            Gets or sets the method used to register Tools.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.ToolFramework.TraceListener">
            <summary>
            Gets the TraceListener.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.ToolFramework.CurrentTraceFile">
            <summary>
            Gets or sets the full path to the current
            trace file.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.ToolFramework.TraceFileExt">
            <summary>
            Gets the extension used for the trace file.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.ToolFramework.TraceFileMaxIndex">
            <summary>
            Gets the max number of trace files to store.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.ToolFramework.TraceDirectory">
            <summary>
            Gets the directory used to store log files.
            </summary>      
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.ToolFramework.IsLicensed">
            <summary>
            Gets a flag indicating whether the application
            is currently licensed.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.ToolFramework.ActiveTools">
            <summary>
            Gets the list of active tools for this process.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.ToolFramework.RegisteredTools">
            <summary>
            Gets the list of registered tools.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.ToolFramework.StartUpTool">
            <summary>
            Gets the first tool that started with the application.
            This property is primarily used in ImetsStartup.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.ToolFramework.SimSuite">
            <summary>
            Gets the suite of simulators available to the application.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.ToolFramework.ActiveTool">
            <summary>
            Gets the currently active tool.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.ToolFramework.ToolRegistry">
            <summary>
            Gets or sets the available registry of Tools.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.ToolFramework.ToolAtaOutlineItem">
            <summary>
            Gets the Tool ATA outline.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.ToolFramework.ExecutiveDirectory">
            <summary>
            Gets the directory where the application 
            is executed from.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.ToolFramework.HerdMonitoringActive">
            <summary>
            Gets or sets a flag indicating if
            HerdMonitoring is Active.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.ToolFramework.LayoutFolder">
            <summary>
            Gets the path to/from which any layout files should be saved/loaded.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.ToolActivated(System.Object,System.EventArgs)">
            <summary>
            Handles the event when a tool becomes active.
            </summary>
            <param name="sender">The tool that became active.</param>
            <param name="args">Not Used.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.ToolLog(System.Object,Csf.Imets.ToolCore.Log.LogEventArgs)">
            <summary>
            Handles when a tool attempts to log a message.
            </summary>
            <param name="sender">The tool that is logging the message.</param>
            <param name="logArgs">The information about the message to log.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.AddTool(Csf.Imets.ToolCore.Taf.Tool)">
            <summary>
            Adds a tool to the Active Tool list
            and connects any needed events.
            </summary>
            <param name="tool">The tool to add.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.RemoveTool(Csf.Imets.ToolCore.Taf.Tool)">
            <summary>
            Removes the tool from the active tool list.
            </summary>
            <param name="tool">The tool to remove.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.CreateDirectoryForEveryone(System.String)">
            <summary>
            This method creates a directory at the given path and sets the permissions to 
            be for everyone.
            </summary>
            <param name="path">The location of the new folder.</param>
            <returns>True if the directory was created or already existed. Otherwise false.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.EnsureRegistryIsValid">
            <summary>
            Checks to see if the registry exists
            if it does not it reloads it.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.SetupEnvironmentVariables">
            <summary>
            Sets up all environment variables needed by the ToolFramework.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.InvokeBufferedLogMessages">
            <summary>
            Thread safe. Locks the list of buffered messages
            and logs them then clears the buffer.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.PrintCommandExecuted(System.Object,System.EventArgs)">
            <summary>
            Executes print for the active tool.
            </summary>
            <param name="sender">Not Used</param>
            <param name="e">Not Used</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.ConnectCommandExecuted(System.Object,System.EventArgs)">
            <summary>
            Calls connect for the active tool.
            </summary>
            <param name="sender">Not Used</param>
            <param name="e">Not Used</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.AboutCommandExecuted(System.Object,System.EventArgs)">
            <summary>
            Displays the about window for the currently active tool.
            </summary>
            <param name="sender">Not Used</param>
            <param name="e">Not Used</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.HelpCommandExecuted(System.Object,System.EventArgs)">
            <summary>
            Displays help for the active tool.
            </summary>
            <param name="sender">Not Used</param>
            <param name="e">Not Used</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.SettingsCommandExecuted(System.Object,System.EventArgs)">
            <summary>
            Displays the settings window for the active tool.
            </summary>
            <param name="sender">Not Used</param>
            <param name="e">Not Used</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.EditSimSuiteCommandExecuted(System.Object,System.EventArgs)">
            <summary>
            Displays the SimSuite editor for the SimSuite.
            </summary>
            <param name="sender">Not Used</param>
            <param name="e">Not Used</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.OpenFile(System.String)">
            <summary>
            Given a full file's path it attempts to open the file in
            a new process by the application that is registered to open
            the requested file.
            </summary>
            <param name="filename">The full path of the file to open.</param>
            <returns>A reference to the process launched if the file exists, 
            null otherwise</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.Initialize">
            <summary>
            Initializes the ToolFramework. This method should
            be called at the start of every program. Runs the license
            check as well as connecting commands.
            </summary>
            <returns>True if the ToolFramework is initially licensed; Otherwise False</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.ResetCurrentDirectory">
            <summary>
            Resets the Current Directory to the Executing Application's directory.  This
            is mostly for relative pathing.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.CreateTool(Csf.Imets.ToolCore.Taf.ToolInfo)">
            <summary>
            Creates the tool based on the ToolInfo.
            </summary>
            <param name="toolInfo">The information about the tool to create.</param>
            <returns>A reference to the tool.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.LaunchStandaloneTool(System.String)">
            <summary>
            Launches the tool with the given name as it's
            own separate process.
            </summary>
            <param name="toolname">The name of the tool to launch.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.LaunchTool(System.String)">
            <summary>
            Launches the tool as a child tool of
            this process.
            </summary>
            <param name="toolname">The name of the tool to launch.</param>
            <returns>The tool that was launched.</returns>
            <exception cref="T:Csf.Imets.ToolCore.Taf.ToolLoadException" />
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.LaunchTool(Csf.Imets.ToolCore.Taf.WellKnownTools)">
            <summary>
            Launches the well known tool as a child of the process.
            </summary>
            <param name="wellknowntool">The tool to launch.</param>
            <returns>A reference to the launched tool.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.LaunchTool(Csf.Imets.ToolCore.Taf.ToolInfo)">
            <summary>
            Launches the tool as a child of the process.
            </summary>
            <param name="toolInfo">The information about the tool to launch.</param>
            <returns>The tool that was launched.</returns>
            <exception cref="T:Csf.Imets.ToolCore.Taf.ToolLoadException" />
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.LaunchTool(Csf.Imets.ToolCore.Taf.Tool)">
            <summary>
            Adds the tool to the active tool registry and 
            tells the tool to begin executing.
            </summary>
            <param name="tool">The tool to launch.</param>
            <returns>The tool that was launched.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.ToolShutdown(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            Handles when a tool shuts down.
            </summary>
            <param name="sender">The tool that shutdown.</param>
            <param name="args">Contains flag for canceling the shutdown process.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.ShutdownTool(Csf.Imets.ToolCore.Taf.Tool)">
            <summary>
            Shuts a tool down cleanly.
            </summary>
            <param name="tool"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.ShutdownAllTools">
            <summary>
            Shuts down all tools controlled by this process.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.Shutdown">
            <summary>
            Releases all data stored for the ToolFramework and returns the license.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.ReloadToolRegistry">
            <summary>
            Reloads the tool registry.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.GetToolInfo(System.String)">
            <summary>
            Retrieves information about the tool
            with the given name.
            </summary>
            <param name="toolname">The name of the tool.</param>
            <returns>Information about the tool or null if it doesn't exist.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.GetToolInfo(Csf.Imets.ToolCore.Taf.WellKnownTools)">
            <summary>
            Gets the ToolInformation for the tool with the wellKnown name.
            </summary>
            <param name="toolname">The well known name of the tool.</param>
            <returns>The ToolInfo or null if the tool cannot be found.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.ToolRegistered(System.String)">
            <summary>
            Checks to see if the name is registered to a tool.
            </summary>
            <param name="toolName">The name to check.</param>
            <returns>True if the Tool name is registered; Otherwise false.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.GetParentTool(System.Windows.Forms.Control)">
            <summary>
            Gets the tool that owns the control.
            </summary>
            <param name="control">The control to check.</param>
            <returns>The tool that owns the control; Null if it is not owned by a Tool</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.Connect">
            <summary>
            Tells the active tool to connect to the host.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.LocateSimConnection(System.Windows.Forms.Control)">
            <summary>
            Recursively searches up the Control hiearchy to find a hosting Control which
            implements the ISimConnection interface.  The first interface that's come across
            is assumed to be the controlling interface. Throws ToolFrameworkException on Failure.
            </summary>
            <param name="control">Child control to be searched</param>
            <returns>Control implementing ISimConnection</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.NotifyLoggedIssueEventHandler(System.Object,Csf.Imets.ToolCore.Taf.Herd.NotifyLoggedIssueEventArgs)">
            <summary>
            Connected to the scanner's event so that it gets bubbled up from the simulator
            and not the scanner.
            </summary>
            <param name="sender">m_HerdLogScanner</param>
            <param name="e"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.AttachToLoggedIssueEvent(Csf.Imets.ToolCore.Taf.Herd.NotifyLoggedIssue,System.Int32)">
            <summary>
            Attaches the supplied handler to receive significant events from "HERD".
            </summary>
            <param name="value">The NotifyLoggedIssue handler</param>
            <param name="priority">The priority this handler should receive, 1 is high priority
            and higher numbers are a lower priority.  The ImetsExecutiveApplication has a 
            priority of 10.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.RemoveLoggedIssueEvent(Csf.Imets.ToolCore.Taf.Herd.NotifyLoggedIssue)">
            <summary>
            Removes the supplied handler from the list of handlers receiving significant 
            events from "HERD".
            </summary>
            <param name="value">The NotifyLoggedIssue handler to be removed.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.StartTraceLog(System.String)">
            <summary>
            Starts the trace log and prints out startup information.
            </summary>
            <param name="toolName">The name of the tool the trace is used for.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.LogTimerElapsed(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            Log timer which performs logic to determine if the log file has exceeded a maximum size
            </summary>
            <param name="sender">Not Used</param>
            <param name="e">Not Used</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.ImmediateStopTraceLog">
            <summary>
            Stops the trace log and closes it.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.StopTraceLog">
            <summary>
            Prints a stop line and closes the trace log.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.GetNextTraceFile(System.String)">
            <summary>
            The purpose of this method is to identify the currently generated trace files and
            return the next trace file to be overwritten, this will be the trace file with the 
            oldest modified date on it.
            </summary>
            <returns>Trace file path</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.GetLayoutFilenameAndPath(System.String)">
            <summary>
            Concatenates the LayoutFolder, filename, and file extension into a full path/filename
            reference for a layout file.
            </summary>
            <param name="filename">The actual filename to use (expects the tool's name)</param>
            <returns>The full path and filename to use to save/load a layout file for a tool</returns>
            <exception cref="T:System.ArgumentException">Throws an argument exception if filename is null or empty.</exception>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.Log(System.String)">
            <summary>
            Logs the message.
            </summary>
            <param name="message">The message to log.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.Log(System.String,Csf.Imets.ToolCore.Log.LogSeverity)">
            <summary>
            Logs the message
            </summary>
            <param name="message">The message to log.</param>
            <param name="severity">The severity of the message.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.Log(Csf.Imets.ToolCore.Taf.Tool,System.String)">
            <summary>
            Prints the name of the tool with the message.
            </summary>
            <example>RTMM : MessageGoesHere.</example>
            <param name="tool">The tool whose name needs to be logged.</param>
            <param name="message">The message to log.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.Log(System.Windows.Forms.Control,System.String)">
            <summary>
            Logs the name of the control along with the message.
            </summary>      
            <param name="control">The control whose name is to be appended to the front of the message.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.Log(Csf.Imets.ToolCore.Taf.Tool,System.Windows.Forms.Control,System.String)">
            <summary>
            Appends the tool name and the control name to the front of the message.
            </summary>
            <param name="tool">The tool whose name needs to be logged.</param>
            <param name="control">The control whose name needs to be logged.</param>
            <param name="message">The message to log.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.Log(Csf.Imets.ToolCore.Taf.Tool,System.String,Csf.Imets.ToolCore.Log.LogSeverity)">
            <summary>
            Appends the tool name to the front of the log message and logs the message.
            </summary>
            <param name="tool">The tool whose name is to be appended to the front of the message.</param>
            <param name="message">The message to log.</param>
            <param name="severity">The severity of the message.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.Log(System.Windows.Forms.Control,System.String,Csf.Imets.ToolCore.Log.LogSeverity)">
            <summary>
            Appends the control name to the front of the log message and logs the message.
            </summary>
            <param name="control">The control whose name is to be appended to the front of the message.</param>
            <param name="message">The message to log.</param>
            <param name="severity">The severity of the message.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.Log(Csf.Imets.ToolCore.Taf.Tool,System.Windows.Forms.Control,System.String,Csf.Imets.ToolCore.Log.LogSeverity)">
            <summary>
            Appends the tool name and the control name to the front of the log message and logs the message.
            </summary>
            <param name="tool">The tool whose name is to be appended to the front of the message.</param>
            <param name="control">The control whose name is to be appended to the front of the messgae.</param>
            <param name="message">The message to log.</param>
            <param name="severity">The severity of the message.</param>
        </member>
        <member name="T:Csf.Imets.ToolCore.Taf.ToolFramework.LogMessageInfo">
            <summary>
            Represents a message to log. This is used 
            for temporary storage for
            buffered messages.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.ToolFramework.LogMessageInfo.Message">
            <summary>
            Gets or sets the message to log.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.ToolFramework.LogMessageInfo.Severity">
            <summary>
            Gets or sets the severity of the log message.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolFramework.LogMessageInfo.#ctor(System.String,Csf.Imets.ToolCore.Log.LogSeverity)">
            <summary>
            Initializes a new instance of the LogMessageInfo class.
            </summary>
            <param name="message">The message to log.</param>
            <param name="severity">The severity of the message.</param>
        </member>
        <member name="T:Csf.Imets.ToolCore.Taf.ToolFrameworkException">
            <summary>
            Generic Base Exception type for use within by the ToolFramework
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Taf.ToolInfo.ToolDataPath">
            <summary>
            This is a relative directory from the path to the assembly.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.ToolInfo.HelpFile">
            <summary>
            This pulls from a helpfile installed with the tool itself.
            Should not be used as the first choice helpfile.  Should
            only be attempted as a last resort. May only return "" if
            the default file doesn't exist.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Taf.ToolInfo.OutlineItem">
            <summary>
            The default is the Tool section (115-07).  This should be set
            by the tool in it's constructor to the appropriate subsection.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Taf.ToolLoadException">
            <summary>
            Exception when there is an issue loading a tool.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Taf.ToolLoadException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ToolLoadException class.
            </summary>
            <param name="message">The message for the exception.</param>
        </member>
        <member name="T:Csf.Imets.ToolCore.InitialConditions.IcGroup">
            <summary>
            Provides a definition of the IcGroup type.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.InitialConditions.IcSet">
            <summary>
            Provides a definition of the IcSet type.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.InitialConditions.IcRequest">
            <summary>
             Provides a definition of the IcRequest type.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.InitialConditions.IcRequestParameter">
            <summary>
            Provides a definition of the IcRequestParameter type.
            </summary>
        </member>
        <member name="E:Csf.Imets.ToolCore.InitialConditions.IcManager.OnBusyChanged">
            <summary>
            Signals when the IC manager is busy performing a 
            background data operation
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.InitialConditions.IcManager.Busy">
            <summary>
            Reports whether or not the IcManager is busy with a background data operation.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.InitialConditions.IcManager.IcGroupCount">
            <summary>
            Gets the total number of IcGroups present in the local dataset's ic_groups table.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.InitialConditions.IcManager.IcSetCount">
            <summary>
            Gets the total number of IcSets present in the local dataset's ic_sets table.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.InitialConditions.IcManager.#ctor(Csf.Imets.ToolCore.Taf.Simulator)">
            <summary>
            This is the default constructor. 
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.InitialConditions.IcManager.Reload">
            <summary>
            This initializes the connection that is necessary for the proper operation of the component.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.InitialConditions.IcManager.GetGroupList">
            <summary>
            This function returns IcGroup as a List. 
            </summary>
            <returns>List of IcGroup elements.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.InitialConditions.IcManager.GetSetList(System.String)">
            <summary>
            This function returns IcSet as a List. 
            </summary>
            <param name="icGroupName"></param>
            <returns>List of IcSet elements.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.InitialConditions.IcManager.Initialize(System.String,System.String)">
            <summary>
            This method sends out all requests defined by the given IcGroup/IcSet combination.
            </summary>
            <param name="groupName"></param>
            <param name="icSetName"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.InitialConditions.IcManager.GetRequestList(System.String,System.String)">
            <summary>
            This function returns IcRequest as a List. 
            </summary>
            <param name="groupName"></param>
            <param name="setName"></param>
            <returns>List of IcRequest elements.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.InitialConditions.IcManager.GetRequestParameterList(System.String,System.String,System.String)">
            <summary>
            This function returns IcRequestParameter as a List. 
            </summary>
            <param name="groupName"></param>
            <param name="setName"></param>
            <returns>List of IcRequestParameter elements.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.InitialConditions.IcManager.GetParameterTypes">
            <summary>
            This function returns parameter data types as a List.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.InitialConditions.IcManager.AddNewIcGroup(System.String)">
            <summary>
            Adds an entry to the ic_groups table in the dataset.
            </summary>
            <param name="name">Name of the entry to be added.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.InitialConditions.IcManager.AddNewIcSet(System.String,System.String)">
            <summary>
            Adds an entry to the ic_set table in the dataset.
            </summary>
            <param name="groupName"></param>
            <param name="name"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.InitialConditions.IcManager.DeleteSetRow(System.String,System.String)">
            <summary>
            Delete a row from the ic_requests table based on the key defined by
            the groupName/setName/name combination.
            </summary>
            <param name="groupName"></param>
            <param name="setName"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.InitialConditions.IcManager.DeleteRequestRow(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Delete a row from the ic_requests table based on the key defined by
            the groupName/setName/name/topic/queue combination.
            </summary>
            <param name="groupName">The name of the IC group that the IC set is in.</param>
            <param name="setName">The name of the IC Set.</param>
            <param name="name">The parameter name.</param>
            <param name="topicName">The parameter's request's topic name</param>
            <param name="queueName">The parameter's request's queue name</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.InitialConditions.IcManager.DeleteParameterRow(System.Int32)">
            <summary>
            Delete a row from the ic_requests table based on its relative
            index from the ic_request_parameter table in the dataset. 
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.InitialConditions.IcManager.AddRequestRow(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Add a new IcRequest in the ic_requests table in the dataset. Each cell 
            in the new entry is defined by the parameters below. 
            </summary>
            <param name="groupName"></param>
            <param name="setName"></param>
            <param name="topicName"></param>
            <param name="queueName"></param>
            <param name="name"></param>
            <param name="common"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.InitialConditions.IcManager.AddParameterRow(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Add a new IcRequestParameter in the ic_request_parameter table in the dataset. Each cell 
            in the new entry is defined by the parameters below.
            </summary>
            <param name="typeId"></param>
            <param name="value"></param>
            <param name="ordering"></param>
            <param name="name"></param>
            <param name="groupName"></param>
            <param name="setName"></param>
            <param name="requestName"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.InitialConditions.IcManager.UpdateRequestRow(System.Int32,System.String[])">
            <summary>
            Update the values of the row defined by its relative index(where) 
            in the ic_requests table. 
            </summary>
            <param name="where">Relative position in the table of the row to be updated.</param>
            <param name="newValues">String array containing all the value of each individual cell in the row.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.InitialConditions.IcManager.UpdateValues(System.Int32,System.String[])">
            <summary>
            Update the values of the row defined by its relative index(where) 
            in the ic_request_parameter table.
            </summary>
            <param name="where">Relative position in the table of the row to be updated.</param>
            <param name="newValues">String array containing all the value of each individual cell in the row.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.InitialConditions.IcManager.AddValues(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String)">
            <summary>
            Add a new IcRequestParameter in the ic_request_parameter table in the dataset. Each cell 
            in the new entry is defined by the parameters below.
            </summary>
            <param name="groupName"></param>
            <param name="setName"></param>
            <param name="requestName"></param>
            <param name="name"></param>
            <param name="value"></param>
            <param name="type"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.InitialConditions.IcManager.GetParameterType(System.String,System.String,System.String,System.String)">
            <summary>
            Returns the parameter type of the parameter based on the key defined by the
            groupName/setName/requestName/name combination.
            </summary>
            <param name="groupName"></param>
            <param name="setName"></param>
            <param name="requestName"></param>
            <param name="name"></param>
            <returns>The index corresponding to the type of the parameter. This is going to be 
                     changed to a string once the database has been changed to have a type_name(string)
                     as opposed to the current type_id(int)</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.InitialConditions.IcManager.SelectFromRequestTable(System.String)">
            <summary>
            Returns the corresponding row from the ic_request table in the dataset
            defined by the filter.
            </summary>
            <param name="filter"></param>
            <returns>DataRow that passes the conditions defined by the filter; null if none.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.InitialConditions.IcManager.FindFromRequestTable(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Locates the relative index of the row defined by the name/groupName/setName/topicName/queueName
            combination from the ic_requests table in the dataset. 
            </summary>
            <param name="name">The parameter name.</param>
            <param name="groupName">The name of the IC group that the IC set is in.</param>
            <param name="setName">The name of the IC Set.</param>
            <param name="topicName">The parameter's request's topic name</param>
            <param name="queueName">The parameter's request's queue name</param>
            <returns>Relative index of the resulting row.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.InitialConditions.IcManager.SelectFromParameterTable(System.String)">
            <summary>
            Returns the corresponding row from the ic_request_parameter table in the dataset
            defined by the filter.
            </summary>
            <param name="filter"></param>
            <returns>DataRow that passes the conditions defined by the filter; null if none.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.InitialConditions.IcManager.FindFromParameterTable(System.String,System.String,System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            Locates the relative index of the row defined by the name/groupName/setName/requestName
            combination from the ic_request_parameter table in the dataset. 
            </summary>
            <param name="name">The parameter name.</param>
            <param name="groupName">The name of the IC group that the IC set is in.</param>
            <param name="setName">The name of the IC Set.</param>
            <param name="requestName">The name of the request</param>
            <param name="order">The order of the parameter in the request.</param>
            <param name="topicName">The parameter's request's topic name</param>
            <param name="queueName">The parameter's request's queue name</param>
            <returns>Relative index of the resulting row.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.InitialConditions.IcManager.FullCommit">
            <summary>
            Synchronizes all the changes made between the dataset and the database. 
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.InitialConditions.IcManager.UpdateIcGroupsAndIcSets">
            <summary>
            Update the Collection of IcGroups from the database
            This will load the IcGroups and IcSets only.
            Requests for individual IcSets are loaded when they are selected.
            This will improve performance, especially on loading
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.InitialConditions.IcManager.IsIcGroupListModified">
            <summary>
            Check if the ICGroup modified, if so update the current groups and sets.
            </summary>
            <returns>true if modified, otherwise false.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.InitialConditions.IcManager.IsIcSetListModified(System.String)">
            <summary>
            Check if the ICSet of a Group modified, if so update the set.
            </summary>
            <param name="groupName"></param>
            <returns>true if modified, otherwise false.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.InitialConditions.IcManager.GetIcGroupAll(System.String)">
            <summary>
            Gets the list of IcGroups stored in the database.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <returns>A list of IcGroups found in the database.</returns>
            <exception cref="T:System.ArgumentNullException">Connection String is null or empty.</exception>
            <exception cref="T:System.ArgumentException">The connection string is not of a valid format.</exception>
            <exception cref="T:System.Exception">Exception caught when trying to communicate with database.</exception>  
        </member>
        <member name="M:Csf.Imets.ToolCore.InitialConditions.IcManager.GetIcSet(System.String,System.String)">
            <summary>
            Gets the list of IcSets stored in the database for a group.
            </summary>
            <param name="icGroupName">The IC Group (parent) of this object</param>
            <param name="connectionString">The connection string to the database.</param>
            <returns>A list of IcSets found in the database.</returns>
            <exception cref="T:System.ArgumentNullException">Connection String is null or empty.</exception>
            <exception cref="T:System.ArgumentException">The connection string is not of a valid format.</exception>
            <exception cref="T:System.Exception">Exception caught when trying to communicate with database.</exception>  
        </member>
        <member name="F:Csf.Imets.ToolCore.ImetsDataSetVisualizer.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.ImetsDataSetVisualizer.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.ImetsDataSetVisualizer.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.UtilityControls.OpenDatabaseConnectionInfoForm.BtnOkClick(System.Object,System.EventArgs)">
            <summary>
            Handles the OK button click.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.UtilityControls.OpenDatabaseConnectionInfoForm.BtnTestClick(System.Object,System.EventArgs)">
            <summary>
            Handles the Test button click.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:Csf.Imets.ToolCore.UtilityControls.OpenDatabaseConnectionInfoForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.UtilityControls.OpenDatabaseConnectionInfoForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.UtilityControls.OpenDatabaseConnectionInfoForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.UtilityControls.OpenIDalDataSetForm.ConnectionSettings">
            <summary>
            Gets/Sets the IDalDataSet that the window will modify the 
            database and server connection settings for.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.UtilityControls.OpenIDalDataSetForm.BtnOkClick(System.Object,System.EventArgs)">
            <summary>
            Handles the OK button click.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.UtilityControls.OpenIDalDataSetForm.BtnTestClick(System.Object,System.EventArgs)">
            <summary>
            Handles the Test button click.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:Csf.Imets.ToolCore.UtilityControls.OpenIDalDataSetForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.UtilityControls.OpenIDalDataSetForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.UtilityControls.OpenIDalDataSetForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.OpenDatabaseForm">
             <summary>
             To be used when needed to allow the user to select a new database/server
             combination to connect a dataset to.  Example of usage is:
             <example>
               OpenDatabaseForm dialog = new OpenDatabaseForm();
               dialog.ConnectionSettings = (IDalDataSet)m_IoDataSet;
            
               if (DialogResult.OK == dialog.ShowDialog())
               {
                  //Re-initializes the dataset by clearing out the current table
                  //adapters and clearing the data then filling the dataset.  Note:
                  //if multiple datasets are used in an application from Csf.Imets.ToolCore.Dal,
                  //the connection string will be reset for all of them even though only
                  //one was passed into the dialog box, so in that case the following routine
                  //needs to clear the table adapters, the data, and fill all datasets.  
                  //Generally speaking, doing a [IDalDataSet].Initialize(true) will do the trick.
                  LoadDatabase();
               }
             </example>
             </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.OpenDatabaseForm.BtnOkClick(System.Object,System.EventArgs)">
            <summary>
            Handles the OK button click.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.OpenDatabaseForm.BtnCancelClick(System.Object,System.EventArgs)">
            <summary>
            Handles the Cancel button click.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.OpenDatabaseForm.BtnTestClick(System.Object,System.EventArgs)">
            <summary>
            Handles the Test button click.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.OpenDatabaseForm.TbxDatabaseTextChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the event where text is changed in the Database text box.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.OpenDatabaseForm.TbxServerTextChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the event where text is changed in the Server text box.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:Csf.Imets.ToolCore.OpenDatabaseForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.OpenDatabaseForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.OpenDatabaseForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.SplashScreen">
             <summary>
             Displays a screen with a marquee progress bar to indicate that
             something is happening in the application and that the user must
             wait until the operation completes.  It's designed to be used
             inside a thread.  If not used inside a thread then it won't update.
             Note:  Right now it uses .NET progress bar versus DotNetBar's
             progressbarX because the progressbarX has a resizing problem that 
             causes it to not fill the space it is supposed to fill. 
             <example>
                 private void TimeConsumingOperation()
                 {
                    Thread th = new Thread(new ThreadStart(DoSplash));
            
                    th.Start();
                    //Lots of processing here!
                    th.Abort();
                }
                
                void DoSplash()
                {
                    SplashScreen form = new SplashScreen();
            
                    form.ProgressBarText = "Loading data from " + m_IoDataSet.Database + ":" + m_IoDataSet.Server;
                    form.ShowDialog();
                }
             </example>
             </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.SplashScreen.Title">
            <summary>
            Allows the user to set/get the title of the reflective text label.  You
            can use markup language here to change fonts, sizes, italics, etc.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.SplashScreen.ProgressBarText">
            <summary>
            Allows the user to get/set the progress bar text that describes the operation
            that is taking forever.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.SplashScreen.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.SplashScreen.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.SplashScreen.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A429DataConfigForm.m_CurrentLabel">
            <summary>
            It contains both the bus and label name format is: Bus.label
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A429DataConfigForm.CurrentLabel">
            <summary>
            It contains both the bus and label name format is: Bus.label
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A429DataConfigForm.PopulateTreeView(System.Windows.Forms.TreeView)">
            <summary>
            It appears that this is no longer used since the treeview used in the control
            is an A429 tree view.  However the selection stuff still needs to happen...
            </summary>
            <param name="origTreeView"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A429DataConfigForm.SelectCurrentLabel">
            <summary>
            Causes the current label to be selected in the browser.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A429DataConfigForm.DisplayList_TableClearing(System.Object,System.Data.DataTableClearEventArgs)">
            <summary>
            Catches the table clearing event for the DisplayList table.
            </summary>
            <param name="sendet"></param>
            <param name="e"></param>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A429DataConfigForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A429DataConfigForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A429DataConfigForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A429MonitorDisplay.A429DisplayColumns">
            <summary>
            The columns used in the DataTable that records all the e_a429Labels
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A429MonitorDisplay.m_A429LabelDataConfigList">
            <summary>
            Contains all the dataConfig information of all the labels in the table
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A429MonitorDisplay.DataFormats">
            <summary>
            Different data format for Arinc label data
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A429MonitorDisplay.InitializeColumns">
            <summary>
            This method is responsible for setting up the datatable which
            the datagridview is bound to.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A429MonitorDisplay.CustomizeColumns">
            <summary>
            This method customizes the datagridview responsible for
            displaying the data
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A429MonitorDisplay.LinkRowToVdn(System.Data.DataRow)">
            <summary>
            Attempts to connect a row from the display list to the VDN.
            </summary>
            <param name="row">Expects a row with the DisplayList table schema.</param>
            <returns>True if successfully linked, false if not.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A429MonitorDisplay.A429DataFormatBinClick(System.Object,System.EventArgs)">
            <summary>
            Format the ARINC Label data as Binary
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A429MonitorDisplay.A429DataFormatHexClick(System.Object,System.EventArgs)">
            <summary>
            Format the ARINC Label data as Hex
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A429MonitorDisplay.A429DataFormatDecimalClick(System.Object,System.EventArgs)">
            <summary>
            Format the ARINC Label data as Decimal
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A429MonitorDisplay.A429DataFormatOctClick(System.Object,System.EventArgs)">
            <summary>
            Format the ARINC Label data as Octal
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A429LabelDataConfig.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="label"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A429LabelDataConfig.ModifyDataBlock(System.Int32,System.Int32,System.String,System.String,Csf.Imets.ToolCore.Vdn.Controls.Avionics.ScalingType,System.Single,System.Int32)">
            <summary>
            Modifies the data block.
            </summary>
            <param name="start">The start.</param>
            <param name="length">The length.</param>
            <param name="groupName">Name of the group.</param>
            <param name="unitName">Name of the unit.</param>
            <param name="scalingType">Type of the scaling.</param>
            <param name="scaling">The scaling.</param>
            <param name="ID">The ID.</param>
            <returns></returns>
        </member>
        <member name="E:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A429TraceDisplay.TracingActiveChange">
            <summary>
            Either a trace has started or has stopped.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A429TraceDisplay.CustomizeColumns">
            <summary>
            This method updates/displays/hides columns applicable to the trace display.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A429TraceDisplay.InternalAddVariableToDisplay(Csf.Imets.ToolCore.Vdn.VdnVariable)">
            <summary>
            Validation and Duplicate checks have already been completed and this function only worries 
            about actually adding the variable.
            </summary>
            <param name="vdnVariable"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A429TraceDisplay.RemoveAllVariables">
            <summary>
            Removes all the variables (specifically A429 variables being traced).
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A429TraceDisplay.LocateTraceVariable(Csf.Imets.ToolCore.Vdn.Avionics.VdnA429Variable)">
            <summary>
            Given an A429 variable it attempts to find the corresponding TraceVariable in the trace list.
            </summary>
            <param name="variable">The variable to find the TraceVariable for.</param>
            <returns>null if unsuccessful, the TraceVariable if successful.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A429TraceDisplay.VariableDataGridViewCellContextMenuStripNeeded(System.Object,System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs)">
            <summary>
            Provides the appropriate context sensitive menu based on what was clicked.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A429TraceDisplay.StopTrace(Csf.Imets.ToolCore.Vdn.Controls.Avionics.A429TraceDisplay.TraceVariable)">
            <summary>
            Stops the trace on a specific trace variable and updates the listviewitem's color
            with the "stopped" trace color.
            </summary>
            <param name="tracer">The TraceVariable to stop tracing.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A429TraceDisplay.RemoveAllTraceVariablesToolStripMenuItemClick(System.Object,System.EventArgs)">
            <summary>
            Handles the click event for the remove all trace variables context menu item by
            clearing out all trace variables.
            </summary>
            <param name="sender">not used</param>
            <param name="e">not used</param>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Packets.IPv4PacketViewModel.Version">
            <summary>
            Bits 0-3 of a standard IPv4 Packet
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Packets.IPv4PacketViewModel.HeaderLength">
            <summary>
            Bits 4-7 of a standard IPv4 Packet;  This length is in bytes.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Packets.IPv4PacketViewModel.DSCP">
            <summary>
            Bits 8-13 of a standard IPv4 Packet; Differentiated Services Code Point field
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Packets.IPv4PacketViewModel.ECN">
            <summary>
            Bits 14-15 of a standard IPv4 Packet; Explicit Congestion Notification 
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Packets.IPv4PacketViewModel.TotalLength">
            <summary>
            Bits 16-31 of a standard IPv4 Packet; Length of the IPv4 Packet
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Packets.IPv4PacketViewModel.Identification">
            <summary>
            Bits 32-47 of a standard IPv4 Packet; ID of the IPv4 Packet
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Packets.IPv4PacketViewModel.Flags">
            <summary>
            Bits 48-50 of a standard IPv4 Packet; Fragmentation Flags of the IPv4
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Packets.IPv4PacketViewModel.FragmentOffset">
            <summary>
            Bits 51-63 of a standard IPv4 Packet; FragmentOffset of the IPv4 Packet
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Packets.IPv4PacketViewModel.TTL">
            <summary>
            Bits 64-71 of a standard IPv4 Packet; TTL of the IPv4 Packet
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Packets.PacketAttribute.StartByte">
            <summary>
            Start Byte of this attribute, relative to the viewmodel
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Packets.PacketAttribute.StartBit">
            <summary>
            Start Bit of this attribute, after the StartByte
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Packets.PacketAttribute.LengthBytes">
            <summary>
            Length in Bytes
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Packets.PacketAttribute.LengthBits">
            <summary>
            Length in Bits in addition to the Length in Bytes
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Packets.PacketViewModel.ViewModels">
            <summary>
            Children View Models
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Packets.PacketViewModel.Packet">
            <summary>
            The Packet this ViewModel decodes
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Packets.PacketViewModel.ViewModelStartByte">
            <summary>
            This is the byte that this viewmodel should start at.  Essentially, where it's parent decoding
            leaves off
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Packets.PacketViewModel.ViewModelLength">
            <summary>
            This is the length in bytes that the viewmodel should expect it should interpret.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Packets.PacketViewModel.Item(System.UInt32)">
            <summary>
            Indexer to access offset packet data relative to start bytes for this view model
            </summary>
            <param name="index">Relative index offset into our packet</param>
            <returns>The byte value at this location; 0 if invalid; Does not throw.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Packets.PacketViewModel.GetUInt16(System.UInt32)">
            <summary>
            Returns an UInt16 converted from 2-bytes starting at the index
            relative to our view model start byte.  This will perform host to net
            </summary>
            <param name="index">Byte index relative to our start byte</param>
            <returns>UInt16 from data; 0 if failure</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Packets.PacketViewModel.GetUInt16(System.UInt32,System.Boolean)">
            <summary>
            Returns an UInt16 converted from 2-bytes starting at the index
            relative to our view model start byte.
            </summary>
            <param name="index">Byte index relative to our start byte</param>
            <returns>UInt16 from data; 0 if failure</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Packets.PacketViewModel.GetUInt32(System.UInt32)">
            <summary>
            Returns an UInt32 converted from 4-bytes starting at the index
            relative to our view model start byte.  This will perform host to net
            </summary>
            <param name="index">Byte index relative to our start byte</param>
            <returns>UInt32 from data; 0 if failure</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Packets.PacketViewModel.GetUInt32(System.UInt32,System.Boolean)">
            <summary>
            Returns an UInt32 converted from 4-bytes starting at the index
            relative to our view model start byte.
            </summary>
            <param name="index">Byte index relative to our start byte</param>
            <returns>UInt32 from data; 0 if failure</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Packets.PacketViewModel.GetUInt64(System.UInt32,System.Boolean)">
            <summary>
            Returns an UInt32 converted from 4-bytes starting at the index
            relative to our view model start byte.
            </summary>
            <param name="index">Byte index relative to our start byte</param>
            <returns>UInt32 from data; 0 if failure</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Packets.PacketViewModel.AddDataPacket">
            <summary>
            Adds the Data packet viewmodel to cover the rest of the unknown data in the packet
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Packets.PacketViewModel.GetViewModel(System.Int32)">
            <summary>
            Attempts to locate packet viewmodel which contains the byte index relative to the start of the packet.  It will
            attempt to get the closest packet to this location ie, if the header contains it.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Packets.EthernetFrameViewModel.DestinationAddress">
            <summary>
            Bytes 0-5 of a standard Ethernet Packet
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Packets.EthernetFrameViewModel.SourceAddress">
            <summary>
            Bytes 6-11 of a standard Ethernet Packet
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Packets.EthernetFrameViewModel.EtherType">
            <summary>
            Bytes 12-13 of a standard Ethernet Packet
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Trace.A664PacketAnalyzerControl">
            <summary>
            Interaction logic for A664PacketAnalyzerControl.xaml
            </summary>
            <summary>
            A664PacketAnalyzerControl
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Trace.A664PacketAnalyzerControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Trace.A664PacketAnalyzerHostControl">
            <summary>
            This is a pass through container class to allow our WPF control to live within
            the WinForms
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Trace.PacketManager.Packets">
            <summary>
            This is all the packets loaded from file, it is assumed
            they are all from the same ethernet adapter
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Trace.PacketManager.FindPacket(System.Double)">
            <summary>
            Attempts to do a smart search to locate this packet and return the index
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Trace.PacketManager.GetVLDelta(Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Packets.PcapPacketViewModel)">
            <summary>
            Returns the delta time in milliseconds between this packet and the previous packet
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Trace.A664TraceDisplay.c_A664TopicName">
            <summary>
            The name of the topic the A664 publishes it's A664_Status request under.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Trace.A664TraceDisplay.c_A664QueueName">
            <summary>
            The name of the queue the A664 publishes it's A664_Status request under.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Trace.A664TraceDisplay.c_A664TraceRequestName">
            <summary>
            The name of the request to watch for when the A664 status changes.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Trace.A664TraceDisplay.DataMapper">
            <summary>
            The NetVdnClient being used by the trace display to communicate with 
            the VDN.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Trace.A664TraceDisplay.PublishA664TraceQueue">
            <summary>
            Connects to the A664 Trace Queue and begins watching for any requests coming in.        
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Trace.A664TraceDisplay.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Trace.PacketTimingDisplayControl">
            <summary>
            Interaction logic for PacketTimingDisplayControl.xaml
            </summary>
            <summary>
            PacketTimingDisplayControl
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Trace.PacketTimingDisplayControl.m_ProcessingLeftVisibleTime">
            <summary>
            This is the left visible time that is currently being processed
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Trace.PacketTimingDisplayControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Trace.StartTraceDialog">
            <summary>
            Interaction logic for StartTraceDialog.xaml
            </summary>
            <summary>
            StartTraceDialog
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Trace.StartTraceDialog.TimeLimit">
            <summary>
            Time in seconds
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.A664.Trace.StartTraceDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.Avionics.ASL.ChangeNDORateDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.ASL.ChangeNDORateDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.ASL.ChangeNDORateDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.Avionics.ASL.NewNdoDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.ASL.NewNdoDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.ASL.NewNdoDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.Controls.Avionics.ASL.NewWksDialog">
            <summary>
            The NewWksDialog is a simple dialog to allow 
            the user to set a name for the WKS and select a protocol type.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Controls.Avionics.ASL.NewWksDialog.Protocol">
            <summary>
            Returns the selected protocol type.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.ASL.NewWksDialog.#ctor">
            <summary>
            Default Constructor for NewWKSDialog.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.Avionics.ASL.NewWksDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.ASL.NewWksDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.ASL.NewWksDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.Avionics.ASL.NewWknDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.ASL.NewWknDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.ASL.NewWknDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.Controls.Avionics.AvionicDataUtil">
            <summary>
            Ported most of the utility functions from Csf/APEX/libApex/Utils/A429Word.cpp .h
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.AvionicDataUtil.GetBitsUInt(System.Int32,System.Int32,System.Int32,System.UInt32,System.UInt32@)">
             @brief  Get value from bit field in Unsigned Integer format
            
                     Get value in Unsigned Integer format from word. The value is 
                     contained in numBits number of bits starting at startBit. The 
                     retrieved value is scaled by multiplying it by valueLSB. This
                     routine returns the value as an Integer.
            
             @pre    startBit > 1, numBits > 1, (startBits + numBits - 1) &lt;32; 
             @param  startBit The start bit
             @param  numBits  Number of bits 
             @param  valueLSB Absolute value of the least significant bit
             @param  origValue The original 32 Bit A429 Label value 
             @param  value    Retrieved value, passed by reference
             @return boolean  Value for success 
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.AvionicDataUtil.GetBits2C(System.Int32,System.Int32,System.Int32,System.UInt32,System.Int32@)">
             @brief  Get value from bit field in Two's Complement format
            
                     Get value in Two's Complement from word. The value is contained in
                     numBits number of bits starting at startBit. The retrieved value is
                     scaled by multiplying it by valueLSB.
            
             @pre    startBit > 1, numBits > 1, (startBits + numBits - 1) &lt;32; 
             @param  startBit The start bit
             @param  numBits  Number of bits 
             @param  valueLSB Absolute value of the least significant bit
             @param  origValue The original 32 Bit A429 Label value 
             @param  value    Retrieved value, passed by reference
             @return boolean  Value for success 
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.AvionicDataUtil.GetBits2CHelper(System.Int32,System.Int32,System.UInt32,System.Int32@)">
             @brief  Helper function for getBits2C
            
             @pre    startBit > 1, numBits > 1, (startBits + numBits - 1) &lt;32; 
             @param  startBit The start bit
             @param  origValue The original 32 Bit A429 Label value 
             @param  value    Retrieved value, passed by reference
             @return boolean  Value for success 
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.AvionicDataUtil.GetBitsBcd(System.Int32,System.Int32,System.UInt32,System.UInt32,System.UInt32@)">
             @brief  Get value from bit field in BCD format
            
                     Get value in BCD format from word. The value is contained in
                     numBits number of bits starting at startBit. The retrieved value is
                     scaled by multiplying it by valueLSB. This routine returns the
                     value as a float.
            
             @pre    startBit > 1, numBits > 1, (startBits + numBits - 1) &lt;32; 
             @param  startBit The start bit
             @param  numBits  Number of bits 
             @param  valueLSB Absolute value of the least significant bit
             @param  origValue The original 32 Bit A429 Label value 
             @param  value    Retrieved value, passed by reference
             @return boolean  Value for success 
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Controls.Avionics.AvionicsPayloadTreeBrowser.ShowAllPayloads">
            <summary>
            If true will show entire hierarchy of payloads; if false
            it will use the filter defined.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.Controls.Avionics.ConnectionsView">
            <summary>
            Interaction logic for ConnectionsView.xaml
            </summary>
            <summary>
            ConnectionsView
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.ConnectionsView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.Controls.Avionics.HardwareConfigForm">
            <summary>
            This partial class extends the A664 components of the HardwareConfigForm.
            They're seperated out into this file to reduce the size of the primary form file.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.Avionics.HardwareConfigForm.m_LastSelectedNode">
            <summary>
            This is the last "selected" node for any menu actions to act upon.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.Avionics.HardwareConfigForm.m_PasteTarget">
            <summary>
            The Node (module level) that the m_CopyTarget channel is to be pasted to.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.Avionics.HardwareConfigForm.m_CopyTarget">
            <summary>
            The Node (channel level) that is to be copied.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.Avionics.HardwareConfigForm.m_Cutting">
            <summary>
            The mode the m_CopyTarget was initialized in...if true it was cut, if false it was copied.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.Avionics.HardwareConfigForm.m_DatabaseConnectionInfo">
            <summary>
            Contains a reference to the current database connection info for the selected simulator.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.Avionics.HardwareConfigForm.m_Shutdown">
            <summary>
            Whether or not a UserClosing reason should actually close the window as
            opposed to just hiding it.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Controls.Avionics.HardwareConfigForm.DatabaseConnectionInfo">
            <summary>
            Contains the current database connection info in use by this form. 
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.HardwareConfigForm.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.HardwareConfigForm.SaveCompleted(Csf.Imets.ToolCore.Dal.BackgroundResultArgs)">
            <summary>
            Handles the DataSetManagerTaskCompleted event for a save task.
            </summary>
            <param name="result"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.HardwareConfigForm.PrintErrors(System.Collections.Generic.List{System.Exception})">
            <summary>
            Prints an exception list of errors to the IMETS ToolCore Log.
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.HardwareConfigForm.AvioDataSetRowChanged(System.Object,System.Data.DataRowChangeEventArgs)">
            <summary>
            Keeps the treeview in sync with the dataset.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.HardwareConfigForm.FindPath(System.String[],System.Data.DataRow,System.Windows.Forms.TreeNodeCollection)">
            <summary>
            Recursive routine that locates the node associated with the passed refdes.
            </summary>
            <param name="path">The path to search.</param>
            <param name="row">The specified row to search for.</param>
            <param name="rootCollection">The TreeNode collection to search</param>
            <returns>Null if not found, otherwise the TreeNode that matches the passed refdes.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.HardwareConfigForm.GetFilterText(System.Windows.Forms.TreeNode)">
            <summary>
            Returns an array of strings that provides the filter text 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.HardwareConfigForm.BrowseTreeViewAfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            Handles the AfterSelect event for the browse treeview
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.HardwareConfigForm.SelectAvionicsTable">
            <summary>
            This method shows and hides the appropriate items when a particular node/element is needed to be seen.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.Avionics.HardwareConfigForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.HardwareConfigForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.HardwareConfigForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.HardwareConfigForm.ShowRow(DevComponents.DotNetBar.Controls.DataGridViewX,System.String)">
            <summary>
            This method will scroll and highlight the dgv  row to the first cell's string value.  This is error prone since there's no guarentee that the 
            first cell is unique.  This isn't a particularly fast method either.
            </summary>
            <param name="firstCellValue"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.HardwareConfigForm.CopyNode(System.Windows.Forms.TreeNode)">
            <summary>
            Copies the passed in node to our internal "clipboard".  This will overwrite any currently copied node.
            </summary>
            <param name="treeNode">The node to be copied</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.HardwareConfigForm.PasteNode(System.Windows.Forms.TreeNode)">
            <summary>
            Pastes a copied node onto the passed in parent node - if it is valid.  If no node has been copied, this method does nothing.
            </summary>
            <param name="parentTreeNode">The parent node to recieve the copied child.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.HardwareConfigForm.CutNode(System.Windows.Forms.TreeNode)">
            <summary>
            Performs a Copy and Delete operation.  Current implementation will retain the copied node and replace it if the cut was never pasted.
            RestoreCutNode will be performed if another copy or cut operation is attempted.
            </summary>
            <param name="treeNode">The node to be copied and deleted.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.HardwareConfigForm.RestoreCutNode">
            <summary>
            Restores a node that has been cut, but the cut was never pasted.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Avionics.HardwareConfigForm.SortPayload(System.Windows.Forms.TreeNode)">
            <summary>
            This method will sort the child nodes of the payload to enforce proper ordering
            </summary>
            <param name="payloadNode"></param>
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.Controls.BrowserTopicNodeTag">
            <summary>
            Class used for the Topic treeviewnodes' Tag property which maintains
            a listing of the variable types, scopes, and sources so that topic
            nodes can either be hidden immediately or it's variables searched for 
            whether or not they should be filtered.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.BrowserTopicNodeTag.TypesIncluded">
            <summary>
            Provides a listing of the different types of variables that are contained
            within this topic.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.BrowserTopicNodeTag.ScopesIncluded">
            <summary>
            Contains a listing of the different scopes for variables that are contained
            within this topic.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.BrowserTopicNodeTag.SourcesIncluded">
            <summary>
            Contains a listing of the different sources of variables that are contained
            within this topic.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.BrowserTopicNodeTag.#ctor">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.BrowserTopicNodeTag.EnsureUnique">
            <summary>
            Takes the lists in this class and replaces them with lists that are 
            guaranteed to be unique.  The "Distinct()" method is a linq extension
            that, when called on a list, removes all the identical items.  The
            ToList() method then returns a new list with only unique entries.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.BrowserTopicNodeTag.AddVariableValues(Csf.Imets.ToolCore.Vdn.VdnVariable)">
            <summary>
            Adds the variable's values to the appropriate lists.
            The value gets added regardless of whether it already exists
            on a list.  Note: After the loop of adding variables is complete
            make sure EnsureUnique() is called to remove any duplicates from the list.
            </summary>
            <param name="var">The variable to grab the different values from.</param>
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.Controls.Filter`1">
            <summary>
            Provides a GUI element with methods for managing filter settings for a specific 
            'column' of data.
            </summary>
            <typeparam name="T">The type of object that is being filtered</typeparam>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.Filter`1.c_FilterItemsNode">
            <summary>
            Constant string that specifies the outer XML tag for the filtered items list
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.Filter`1.c_ItemNode">
            <summary>
            Constant string that specifies the xml tag for a specific filtered item.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.Filter`1.m_AllItems">
            <summary>
            A list of all items that could be displayed.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.Filter`1.m_VisibleItems">
            <summary>
            A list of items that have been selected for viewing.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.Filter`1.m_Name">
            <summary>
            The name of this filter (escaped to make it a valid xml attribute name)
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.Filter`1.m_SavedVisibleItems">
            <summary>
            Maintains the list of visible items when SaveState is called.  Restored
            with "RestoreState"
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.Filter`1.m_StandardParse">
            <summary>
            Attempts to get a reference for the standard Parse method that many types employ to convert from string
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.Filter`1.m_IsEnum">
            <summary>
            Field that indicates whether the type that this filter was created with is an enum.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Filter`1.#ctor(System.String)">
            <summary>
            Ctor
            </summary>
            <param name="name">The name of this filter</param>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Controls.Filter`1.Active">
            <summary>
            Whether or not this filter should actually be filtering the display
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Controls.Filter`1.Name">
            <summary>
            The user readable name of this filter
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Filter`1.IsFiltered(`0)">
            <summary>
            Convenience method for checking to see if a value should be
            filtered from the display or not.
            </summary>
            <param name="value">The value to check</param>
            <returns>True if the item should be filtered, False if it should be displayed</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Filter`1.IsFiltered(System.Collections.Generic.List{`0})">
            <summary>
            Convenience method for checking to see if items in a list
            are filtered from the display or not.
            </summary>
            <param name="items">The list of items to check</param>
            <returns>True if all items in the list are to be filtered, false if any of them are not filtered.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Filter`1.Save(System.Xml.XmlWriter)">
            <summary>
            Saves the current filter settings using the XmlWriter provided.
            </summary>
            <param name="writer">The XmlWriter to write filter settings to.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Filter`1.Load(System.String)">
            <summary>
            Loads the filter settings from the provided XML file.  This will only replace
            the filter settings if there are saved filter items in the file.
            </summary>
            <param name="filename">The xml file to load the filter settings from</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Filter`1.ConvertToItem(System.String)">
            <summary>
            Takes a string and turns it into the generic type this filter was set up for.
            </summary>
            <param name="value">The string to convert to type T</param>
            <returns>The actual item (in the correct type) associated with the passed string value</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Filter`1.Save(System.Xml.XmlWriter,System.String,System.Collections.Generic.List{`0})">
            <summary>
            Generic static saving method for filters
            </summary>
            <param name="writer">The XmlWriter that output should be written using.</param>
            <param name="name">The name of the Filter</param>
            <param name="filterItems">The list of filter items to save.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Filter`1.AddItem(`0)">
            <summary>
            Adds the passed item to the list of all available filterable items
            </summary>
            <param name="item">The item to add to the list</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Filter`1.ClearItems">
            <summary>
            Clears the list of available filterable items.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Filter`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds any number of items to the list of all available filterable items.  
            After adding the items the list is updated to limit it to only unique values.
            </summary>
            <param name="items">The grouping of items to </param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Filter`1.GetAllItems">
            <summary>
            Gets a copy of the list of available filterable items.
            </summary>
            <returns>A copy of the list of available filterable items</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Filter`1.GetVisibleItems">
            <summary>
            Gets a copy of the visible items list (i.e. the items that should be visible)
            </summary>
            <returns>A copy of the visible items list.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Filter`1.SetVisibleItems(System.Collections.Generic.List{`0})">
            <summary>
            Replaces or clears the list of visible items with the passed list. 
            </summary>
            <param name="items">The list of items that will become the visible items list.  
            If null then the filter is deactivated and the current visible items list is cleared. </param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Filter`1.AddVisibleItem(`0)">
            <summary>
            Adds an item to the visible items list provided it doesn't already exist on the list.
            </summary>
            <param name="item">The item to add.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Filter`1.ShowPopUp(System.Drawing.Rectangle)">
            <summary>
            Displays a filter pop up for this filter and allows
            the user to make filtering selections.
            </summary>
            <param name="position">The location converted to window coordinates and 
            the Size of the FilterToolbar </param>
            <returns>True if the filter was modified by the user or false if it 
            was unmodified or the dialog was cancelled</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Filter`1.SaveState">
            <summary>
            Saves off the current visible list which can be restored later
            using RestoreSavedState()
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.Filter`1.RestoreSavedState">
            <summary>
            Restores the visible list saved when "SaveState" was called
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.Controls.FilterPopUp`1">
            <summary>
            A window expected to be a popup window use for selecting filter settings maintained
            by the Filter class.
            </summary>
            <typeparam name="T">The underlying type of object that is being filtered on.  Works with enums and value types.</typeparam>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.FilterPopUp`1.c_SelectAllText">
            <summary>
            Constant string for use in the text field of the select all combo box item.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.FilterPopUp`1.m_SelectAllCheckBoxItem">
            <summary>
            Reference to the "(Select All)" checkboxitem
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.FilterPopUp`1.m_AllItems">
            <summary>
            A list of all the items in their native type displayed on
            the ListItemBox.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.FilterPopUp`1.m_SelectAllWasIndeterminate">
            <summary>
            Keeps track of when the select all was set to indeterminate so we can 
            force a full selection instead of deselecting everything (which is what happens by 
            default for an indeterminate checkbox)
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Controls.FilterPopUp`1.AllSelected">
            <summary>
            Whether or not all the items are selected
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Controls.FilterPopUp`1.NoneSelected">
            <summary>
            Whether or not all the items are selected
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Controls.FilterPopUp`1.Changed">
            <summary>
            Whether or not any settings have changed on this popup.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.FilterPopUp`1.#ctor">
            <summary>
            Default constructor.  The popup needs to be properly initialized and positioned
            or else it will be useless.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.FilterPopUp`1.#ctor(System.Drawing.Rectangle,Csf.Imets.ToolCore.Vdn.Controls.Filter{`0})">
            <summary>
            Constructor for initializing important popup properties.
            </summary>
            <param name="buttonRectangle">The rectangle (window location and size) of the FilterToolBar 
            that this window is being popped up from.</param>
            <param name="filter">The filter that this popup is to provide customization of</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.FilterPopUp`1.InitializeFilterItemPanel(Csf.Imets.ToolCore.Vdn.Controls.Filter{`0})">
            <summary>
            Initializes the FilterItemPanel with checkboxitems and ensures
            their checked status matches the actual filtered settings.
            </summary>
            <param name="filter">The filter to get initialization data from.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.FilterPopUp`1.GetCheckedItems">
            <summary>
            Gets a list of all the checked items in the filter pop up menu.  (Except '(Select All)')
            </summary>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.FilterPopUp`1.FilterItemPanelItemClick(System.Object,System.EventArgs)">
            <summary>
            Handler for the "ItemClick" event on the FilterItemPanel.  Checks
            to see if the (Select All) button was clicked and then updates 
            everything appropriately.  Also sets 'Changed' to true.
            </summary>
            <param name="sender">The CheckBoxItem that was clicked.</param>
            <param name="e">not used</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.FilterPopUp`1.SelectAllItems(System.Boolean)">
            <summary>
            Either selects or de-selects all CheckBoxItems in the FilterItemPanel
            depending on the passed parameter.
            </summary>
            <param name="select">If true selects all CheckBoxItems if False de-selects them.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.FilterPopUp`1.ClearButtonClick(System.Object,System.EventArgs)">
            <summary>
            Handles the click event for the ClearButton by selecting all items,
            setting Changed to true, setting the dialog result to OK and Closing
            the form
            </summary>
            <param name="sender">not used</param>
            <param name="e">not used</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.FilterPopUp`1.FilterPopUp_Deactivate(System.Object,System.EventArgs)">
            <summary>
            This event occurs when another Windows application has focus. Filter Popup dialog box is
            always set to be on top of all windows, but when another non-Tool Suite application  
            has focus, we do not want the Tool Suite filter popup dialog box to be visible, so we close it.
            </summary>
            <param name="sender">Filter Popup Dialog Box Window</param>
            <param name="e">N/A</param>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.FilterPopUp`1.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.FilterPopUp`1.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.FilterPopUp`1.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Controls.IVdnSelector.TargetDisplayer">
            <summary>
            As the result of a display command, the TargetDisplayer 
            is where the selected variables should be routed
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.Controls.ParseVdnVariables">
            <summary>
            This class is used to aid in producing the tree structure for parameters.
            It allows a variable name to get split into it's respective structure, array, 
            matrix parts.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.Controls.ParseVdnVariables.ElementType">
            <summary>
            The type description for split out elements.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.ParseVdnVariables.ElementType.variable">
            <summary>
            Just a plain variable
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.ParseVdnVariables.ElementType.structure">
            <summary>
            A structure
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.ParseVdnVariables.ElementType.array">
            <summary>
            An array which could be multidimensional
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.ParseVdnVariables.ElementType.matrix">
            <summary>
            A matrix
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.ParseVdnVariables.ElementType.index">
            <summary>
            An array or matrix index.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Controls.ParseVdnVariables.SplitName">
            <summary>
            List of all the elements a variable name was split into.
            (Corresponds to SplitNameType.)
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Controls.ParseVdnVariables.SplitNameType">
            <summary>
            List of the types of elements (corresponds to SplitName)
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Controls.ParseVdnVariables.VdnVariable">
            <summary>
            The VdnVariable Reference
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.ParseVdnVariables.#ctor(Csf.Imets.ToolCore.Vdn.VdnVariable)">
            <summary>
            Only constructor, does all the required parsing to generate
            the properties needed for reconstructing a tree.
            </summary>
            <param name="variable">The vdn variable to parse.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.ParseVdnVariables.Compare(Csf.Imets.ToolCore.Vdn.Controls.ParseVdnVariables,Csf.Imets.ToolCore.Vdn.Controls.ParseVdnVariables)">
            <summary>
            Implements the IComparer routine for sorting a list of ParseVdnVariables
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.ParseVdnVariables.GetElementName">
            <summary>
            Utility function to get the element name of this particular ParseVdnVariable object.
            </summary>
            <returns>The element name</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.ParseVdnVariables.GetElementName(System.Int32)">
            <summary>
            Utility function to get the element name at a particular index.
            </summary>
            <param name="snIndex">The index to get the element name at.</param>
            <returns>the element name (i.e. Array[0] or StructureElementBlah) at the given index</returns>
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.Controls.RequestParameterControl">
            <summary>
            A control used to set a request parameter.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.RequestParameterControl.m_ValueType">
            <summary>
            The type of the parameter.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.RequestParameterControl.m_LastValue">
            <summary>
            The value of the parameter.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.RequestParameterControl.m_DefaultMinimumSize">
            <summary>
            The default size of the control.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.RequestParameterControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Csf.Imets.ToolCore.Vdn.Controls.RequestParameterControl"/>
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.RequestParameterControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.RequestParameterControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.RequestParameterControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.VdnBaseControl.m_Vdn">
            <summary>
            A reference to the data mapper.  This needs to be set
            by the application using the control.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Controls.VdnBaseControl.Vdn">
            <summary>
            Gets/Sets the Vdn data mapper reference for this component.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnBaseControl.SetVdn(Csf.Imets.ToolCore.Vdn.NetVdnClient)">
            <summary>
            Sets the NetVdnClient used by the control and unregisters event
            handlers with the old client and registers event handlers with the
            new client.
            </summary>
            <param name="value">The new NetVdnClient to be used.</param>
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.Controls.BrowserView">
            <summary>
            Enumeration for indexing and specifying vdn browser treeviews.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.BrowserView.Unknown">
            <summary>
            An unknown treeview that can't be selected.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.BrowserView.Home">
            <summary>
            The default, home treeview.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.BrowserView.A664">
            <summary>
            The A664 specific treeview
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.BrowserView.ASL">
            <summary>
            The ASL specific treeview.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.BrowserView.A429">
            <summary>
            Specifies the A429 filter setting for the 'home' treeview.  There
            isn't an actual treeview associated with this.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserControl">
            <summary>
            Tool Core component used mainly by the RTMM for browsing and selecting VDN parameters.
            </summary>
            <remarks>
                A major part of this is handling data in the TreeNodes.  See the following for more info
            on customizing tree nodes:
            ms-help://MS.VSCC.v80/MS.MSDN.v80/MS.VisualStudio.v80.en/dv_fxmclictl/html/68be11de-1d5b-430e-901f-cfbe48d14b19.htm
            </remarks>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserControl.m_SourceFilter">
            <summary>
            The filter that manages what vdn variable sources should be visible
            in the browser.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserControl.m_TopicFilter">
            <summary>
            The filter that manages what Topics should be visible in the browser.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserControl.m_ScopeFilter">
            <summary>
            The filter that manages what vdn variable scopes should be visible in the browser.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserControl.m_TypeFilter">
            <summary>
            The filter that manages what vdn variable types should be visible in the browser.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserControl.m_Enable429Button">
            <summary>
            The button used to "enable" the 429 view.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserControl.m_FilterStateSaved">
            <summary>
            Flag used to determine whether to save the state or to restore the state of the
            filters.  Used in concert with the A429 button selection.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserControl.ButtonPositions">
            <summary>
            Provides the available positions for the buttons on the control.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserControl.#ctor">
            <summary>
            Default constructor for the VdnBrowserControl
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserControl.ClearVdnParameters">
            <summary>
            Clears all the treeviews of any nodes displayed.
            And cancels any work being done on adding nodes.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserControl.LoadFilters(System.String)">
            <summary>
            Should be called when a profile load is happening.
            </summary>
            <param name="filename">The full path and name of the file to get filter settings from.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserControl.SaveFilters(System.Xml.XmlWriter)">
            <summary>
            Saves the filter settings using the passed XmlWriter.  (Call when saving
            a profile.)
            </summary>
            <param name="writer">The XmlWriter to use to write filter settings</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserControl.LoadAvailableVdnParameters">
            <summary>
            Fills the TreeView with the parameters currently active on the VDN.
            </summary>
            <returns>The number of parameters retrieved from the Vdn</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserControl.InitializeHomeView">
            <summary>
            This method initializes the "home view".  This view is the primary
            TreeView browser which shows all VDN variables available.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserControl.InitializeAvionicsViews">
            <summary>
            Adds the A664 TreeView to this control, initializes
            buttons with the correct settings and sets the database connection info.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserControl.InitializeFilters">
            <summary>
            This gets the values set up for the Scope and Type filter since the available
            items for those don't change during runtime.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserControl.AddBrowserView(Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserTreeView)">
            <summary>
            Adds a VdnBrowserTreeView to the current available list
            of BrowserViews.
            </summary>
            <param name="browserView">The browser view to add.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserControl.FindContainerNodeFromFullVdnName(System.String,System.Windows.Forms.TreeNode@)">
            <summary>
            Find container mode from the full VDN name
            </summary>
            <param name="fullVdnName"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserControl.AddNodeToTree(System.Windows.Forms.TreeNode,System.Windows.Forms.TreeNode)">
            <summary>
            Add tree node to another tree node
            </summary>
            <param name="parentNode">The parent node to add to.</param>
            <param name="node">The node to be added.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserControl.AddNodesToTree(System.Windows.Forms.TreeNode,System.Windows.Forms.TreeNode)">
            <summary>
            Add nodes to tree
            </summary>
            <param name="treeNode"></param>
            <param name="node"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserControl.RemoveNodesFromTree(System.Windows.Forms.TreeNode,System.Windows.Forms.TreeNode)">
            <summary>
            Remove nodes from tree
            </summary>
            <param name="treeNode"></param>
            <param name="node"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserControl.BrowserViewKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Occurs when ever a KeyDown event happens and the VdnBrowserControl
            has focus. 
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The arguments about the key pressed.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserControl.UpdateAvionicsMode(System.Boolean)">
            <summary>
            Shows/hides relevant avionics treviews/buttons based on the
            new avionics mode.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserControl.ActivateBrowserViewCommandExecuted(System.Object,System.EventArgs)">
            <summary>
            Handles the ActivateBrowserViewCommand's executed event by ensuring the
            correct VdnBrowserTreeView is displayed with the appropriate filter state.
            </summary>
            <param name="sender">Expects an ICommandSource and is used to determine either
            the VdnBrowserTreeView or the browsertype of A429.</param>
            <param name="e">not used</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserControl.ActivateBrowserView(Csf.Imets.ToolCore.Vdn.Controls.BrowserView)">
            <summary>
            Ensures the selected browser view is displayed appropriately with 
            visibility settings and.
            </summary>
            <param name="browserView">The browser tree view to switch to.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserControl.UpdateNodeControls">
            <summary>
            Ensures buttons in the toolbar are activated/deactivated depending on
            the internal control states.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserControl.PopulateTopics(System.Object,System.ComponentModel.DoWorkEventArgs)">
            <summary>
            Background worker's "DoWork" event handler that generates the entire treenodes list
            of topics and variables.  When completed the generated tree of nodes can be used to
            update the internal VdnBrowserTreeView(s) as applicable
            </summary>
            <param name="sender">not used.</param>
            <param name="e">Used to pass information to the background worker (e.g. cancellation)</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserControl.NodeMouseDoubleClick(System.Object,System.Windows.Forms.TreeNodeMouseClickEventArgs)">
            <summary>
            This event is called everytime a node is double clicked on.
            </summary>
            <param name="sender">The treebrowser that owns the node.</param>
            <param name="e">The TreeNodeMouseClickEventArgs</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserControl.DisplaySelectedNodes">
            <summary>
            Verifies that the a Variable Display is exists.
            Then attempts to display the selected variables.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserControl.StackData">
            <summary>
            A class to contain references to the needed properties for the stack
            used to generate the tree structure of variables.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserControl.AddVariablesToTopicNode(System.Windows.Forms.TreeNode,System.Collections.Generic.List{Csf.Imets.ToolCore.Vdn.VdnVariable})">
            <summary>
            This method takes the topicNode and adds subNodes foreach VdnVariable.
            </summary>
            <param name="topicNode">The node representing the topic of the given variables.</param>
            <param name="vdnVariables">A list of the vdn variables found under the topic represented by topic node.</param>
            <returns>Number of nodes added to topic.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserControl.CollapseAllClick(System.Object,System.EventArgs)">
            <summary>
            Gets executed when the Collapse All button is clicked.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserControl.Compare(System.Object,System.Object)">
            <summary>
            Compare method to compare TreeNodes this is how the nodes are sorted
            when add to the treeviews.
            </summary>
            <param name="x">TreeNode</param>
            <param name="y">TreeNode</param>
            <returns>0 if the nodes are equal; 1 if x is greater than y; -1 if y is greater than x; </returns> 
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserControl.SourceFilterButtonClick(System.Object,System.EventArgs)">
            <summary>
            Handles the click event for the SourceFilterButton by popping up
            the filter settings dialog and allowing the user to customize it.
            Calls OnFilterChanged() if the filter settings changed.
            </summary>
            <param name="sender">not used</param>
            <param name="e">not used</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserControl.TopicFilterButtonClick(System.Object,System.EventArgs)">
            <summary>
            Handles the click event for the TopicFilterButton by popping up
            the filter settings dialog and allowing the user to customize it.
            Calls OnFilterChanged() if the filter settings changed.
            </summary>
            <param name="sender">not used</param>
            <param name="e">not used</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserControl.ScopeFilterButtonClick(System.Object,System.EventArgs)">
            <summary>
            Handles the click event for the ScopeFilterButton by popping up
            the filter settings dialog and allowing the user to customize it.
            Calls OnFilterChanged() if the filter settings changed.
            </summary>
            <param name="sender">not used</param>
            <param name="e">not used</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserControl.TypeFilterButtonClick(System.Object,System.EventArgs)">
            <summary>
            Handles the click event for the TypeFilterButton by popping up
            the filter settings dialog and allowing the user to customize it.
            Calls OnFilterChanged() if the filter settings changed.
            </summary>
            <param name="sender">not used</param>
            <param name="e">not used</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserControl.OnFilterChanged">
            <summary>
            This method should be called whenever filtering settings get changed.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserTreeView">
            <summary>
            The default/base treeview for use in the VdnBrowserControl.  It handles
            all filtering for basic variable sources/types/scopes/topics.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserTreeView.m_KernelNodes">
            <summary>
            This represents the entire unfiltered list of kernels from the last attach
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserTreeView.SourceFilter">
            <summary>
            The filter settings for the VDN variable's source.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserTreeView.TopicFilter">
            <summary>
            The filter settings for the VDN variable's topic
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserTreeView.ScopeFilter">
            <summary>
            The filter settings for the VDN variable scope.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserTreeView.TypeFilter">
            <summary>
            The filter settings used for VDN variable type.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserTreeView.UpdateBrowserListing">
            <summary>
            Takes the full TreeNode listing for the VDN variables and
            repopulates the actual treeview with visible nodes.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserTreeView.RecursiveFindVariables(System.Windows.Forms.TreeNode,System.Collections.Generic.List{Csf.Imets.ToolCore.Vdn.VdnVariable})">
            <summary>
            Whenever the user selects something to add this function needs to 
            get called.
            </summary>
            <param name="node">The node this is to be applied to.</param>
            <param name="varList">The vdn variable list.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserTreeView.VdnBrowserTreeViewMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            This method handles the node selection for the VdnBrowserTreeView by selecting
            whatever node was clicked on (either right or left clicking).  Specifically it selects 
            the clicked on node, if the CTRL key is pressed it adds the newly selected node to the
            selection list else if the mousebutton clicked is not the right mouse button or the node isn't
            already in the selection list, the selection list is cleared out.  This conforms better with
            standard multiple selection handling than what was originally happening.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserTreeView.FilterNode(System.Windows.Forms.TreeNode)">
            <summary>
            This recursively filters nodes based on the filter settings for the Source, Topic, Scope, 
            and Type filters passed into this class from the parent VdnBrowserControl.
            </summary>
            <param name="node">The node to be filtered.</param>
            <returns>True if the node should be filtered or false if it should be kept</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserTreeView.FilterTopic(System.Windows.Forms.TreeNode)">
            <summary>
            Handles the logic to determine if a topic node should be filtered out or not
            </summary>
            <param name="node">The topic node to check.</param>
            <returns>True if the node should be displayed, false if it is filtered.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnBrowserTreeView.FilterVariable(Csf.Imets.ToolCore.Vdn.VdnVariable)">
            <summary>
            Checks the passed variable against the filters to see if it should be displayed
            or not.
            </summary>
            <param name="variable">The variable to be checked.</param>
            <returns>True if the node should be filtered, false if the node should be displayed</returns>
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.Controls.VdnControlDelegates.ParameterAdded">
            <summary>
            This is a delegate that the window incorporating this component can attach
            it's own event handler to.  Gets called when a parameter is
            selected from the list.
            </summary>
            <param name="TopicName">The VDN parameter's first name or topic name</param>
            <param name="ParameterName">The VDN parameter's middle name or variable name</param>
            <param name="Units">The VDN parameter's last name or units.</param>
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.Controls.VdnControlDelegates.ParameterRemoved">
            <summary>
            This is a delegate that the window incorporating the component can attach it's own event
            handler to.  Gets called when a parameter is removed from the list.
            </summary>
            <param name="TopicName"></param>
            <param name="ParameterName"></param>
            <param name="Units"></param>
            <returns></returns>
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.Controls.VdnControlDelegates.ResetYesNoToAllVariable">
            <summary>
            Resets the variable that keeps track if repeat variables are added or not.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.Controls.VdnQueueBrowserControl">
            <summary>
            The VdnQueueBrowserControl is a reusable control
            that connects to the given simulator and displays a list
            of all avaiable Vdn queues by topic and allows users
            to send requests.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnQueueBrowserControl.ClearAllQueueListeners">
            <summary>
            Sets queue listening to false. 
            Then sends a request to turn all queue listening off.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnQueueBrowserControl.ClearParameters">
            <summary>
            Clears the currently stored Parameters in the QueueBrowserControl.
            And resets the control height to its original state.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnQueueBrowserControl.GetCurrentRequestObject">
            <summary>
            If a requested object is a leaf node in the Browser queue tree that references a tag, then 
            the selected combo request at the bottom of the Queue window will be checked for parameters.
            The non-null parameters will result in added to the requests.
            The requests are created in a VdnRequestObject.
            </summary>
            
            <returns>VdnRequestObject set up to send to the host</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnQueueBrowserControl.RequestsDataGridViewCellClick(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)">
            <summary>
            This method handles DataGridView events that related to cell or row operations. It gets called everytime
            the user clicks on the Request Cell.
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">A System.Windows.Forms.DataGridViewCellEventArgs that contains the event data</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnQueueBrowserControl.GetParameterObjectFromString(System.String)">
            <summary>
            This function is a mess but may at least parse out bools, ints and doubles.
            </summary>
            <param name="temp"></param>
            <returns></returns>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.VdnQueueBrowserControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnQueueBrowserControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnQueueBrowserControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.VdnQuickDisplay.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnQuickDisplay.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnQuickDisplay.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Controls.VdnQuickSelectControl.Vdn">
            <summary>
            Gets/sets the DataMapper (VDN) connection for this component.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnQuickSelectControl.InitializeVdnQuickSelect(Csf.Imets.ToolCore.Vdn.DataMapper)">
            <summary>
            Initializes the quick select component with the passed DataMapper connection
            and fills the selections with parameters available on the VDN.
            </summary>
            <param name="connectedVdn">The DataMapper connection the component should use.</param>
            <returns>True if successful, false if not successful.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnQuickSelectControl.InitializeVdnQuickSelect">
            <summary>
            Initializes the quick select component with the passed DataMapper connection
            and fills the selections with parameters available on the VDN.
            </summary>
            <returns>True if successful, false if not successful.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnQuickSelectControl.m_CbxQuickSelect_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            This is what activates the event that should be connected to by the component that
            uses this component.
            </summary>
            <param name="sender">The combobox who's selection changed</param>
            <param name="e">The event that occurred.</param>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.VdnQuickSelectControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnQuickSelectControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnQuickSelectControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnSearchControl.Search">
            <summary>
            This method clears out the current search results and kicks off a 
            background worker to search the vdn variable vault with the user entries.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnSearchControl.EscapeSearchText(System.String)">
            <summary>
            Given a search string, escapes entered characters so they can be
            used in a DataTable.Select() method call.
            </summary>
            <param name="origString">The user entered string</param>
            <returns>An escaped string ready for use in a LIKE portion of a DataTable.Select() method call.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnSearchControl.SearchControlSearcherDoWork(System.Object,System.ComponentModel.DoWorkEventArgs)">
            <summary>
            This is the method that is executed by the SearchControlSearcher background worker thread.
            It performs the queries and formats the new datarows outside of the UI thread.
            </summary>
            <param name="sender">not used</param>
            <param name="e">not used</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnSearchControl.AddToViewer(System.Int32)">
            <summary>
            Adds a VDN parameter to whatever is connected to this search control.
            </summary>
            <param name="rowIndex">The index of the row to kick off the delegate for</param>
            <returns>True if it was successful.</returns>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.VdnSearchControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnSearchControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnSearchControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.Controls.VdnVariableDisplay.DisplayColumns">
            <summary>
            The columns used in the DataTable that records all the VDN parameter info.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.Controls.VdnVariableDisplay.VariableStatus">
            <summary>
            Should line up with the m_ImlStatus image list and provide the different 
            status possibilities for the parameter.  The actual status is maintained in the 
            DisplayList table in several "Status" columns.  Not all of these "status" are used,
            some are just there to line up with images on the m_ImlStatus.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.VdnVariableDisplay.m_HighlightTime">
            <summary>
            Time in seconds since a row has changed to change colors
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.VdnVariableDisplay.m_LockedListVariables">
            <summary>
            Keep an internal list of VDN list variables so that we can maintain their lock icon.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnVariableDisplay.UpdateVdnFloatPrecisionFormat(System.String)">
            <summary>
            Update the VdnFloatPrecisionFormat only when the value is valid; otherwise it keeps the default or previous format.
            Float64 or double type would support precision up to 15-16 digits only, therefore set the maximum as 16 digits.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnVariableDisplay.ValidVariable(Csf.Imets.ToolCore.Vdn.VdnVariable)">
            <summary>
            Performs a check on the variable to see if it is valid
            for the display currently.
            </summary>
            <param name="vdnVariable">The VdnVariable to check for Validity.</param>
            <returns>True if it is valid otherwise false.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnVariableDisplay.SyncWithVdn">
            <summary>
            Attempts to connect any variables in the display that aren't connected to
            VDN parameters.  Should be called after a VdnConnect() call in the application
            that uses this control.  NOTE: doesn't work quite right...
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnVariableDisplay.RemoveAllVariables">
            <summary>
            Removes all the variables from the Variable List.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnVariableDisplay.RemoveSelectedVariables">
            <summary>
            Removes the selected variables from the list.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnVariableDisplay.LockSelectedVariables">
            <summary>
             Loops through all SelectedVariables 
             and will lock them if any are unlocked
             If all are locked then they will be unlocked.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnVariableDisplay.WriteVariables(System.Xml.XmlWriter)">
            <summary>
            Saves the current settings of the VdnVariableDisplay to an xml file.
            </summary>
            <param name="xmlWriter">The filename (including path) of the file to save.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnVariableDisplay.ReadVariables(System.String)">
            <summary>
            Loads the profile specified by the fileName parameter.
            </summary>
            <param name="filename">The full path and filename of the file to be loaded.</param>
            <returns>True if successful, false if not.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnVariableDisplay.VdnVariableDisplayLoad(System.Object,System.EventArgs)">
            <summary>
            Occurs when the VdnVariableDisplay is loaded. Initializes the data table
            and binds to the timer tick method and sets the interval to 100ms.
            </summary>
            <param name="sender">VdnVariableDisplay</param>
            <param name="e">N/A</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnVariableDisplay.AddColumn(System.Enum)">
            <summary>
            This defaults the column type to string
            </summary>
            <param name="displayColumn"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnVariableDisplay.CleanUpRowDelete(System.Data.DataRow)">
            <summary>
            Should be called when a row is being deleted, handles the disconnect from the VDN.
            </summary>
            <param name="row">The row that is being deleted.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnVariableDisplay.DisplayListRowDeleting(System.Object,System.Data.DataRowChangeEventArgs)">
            <summary>
            Catches the Row deleting event for the DisplayList table.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnVariableDisplay.DisplayListTableClearing(System.Object,System.Data.DataTableClearEventArgs)">
            <summary>
            Catches the table clearing event for the DisplayList table.
            </summary>
            <param name="sendet"></param>
            <param name="e"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnVariableDisplay.RemoveSelectedClick(System.Object,System.EventArgs)">
            <summary>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnVariableDisplay.VariableDataGridViewCellContextMenuStripNeeded(System.Object,System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs)">
            <summary>
            Provides the appropriate context sensitive menu based on what was clicked.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnVariableDisplay.VariableDataGridViewCellMouseDoubleClick(System.Object,System.Windows.Forms.DataGridViewCellMouseEventArgs)">
            <summary>
            Occurs when a cell is double clicked. Checks to see which cell was double clicked.
            If a value cell it enters edit mode.
            If a lock cell it toggles the lock.
            Otherwise it selects the cell. This will allowing copying and pasting.
            </summary>
            <param name="sender">The Cell</param>
            <param name="e">The mouse events</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnVariableDisplay.VariableDataGridViewCellMouseDown(System.Object,System.Windows.Forms.DataGridViewCellMouseEventArgs)">
            <summary>
            Occurs when the mouse is down on a cell in the data grid view. 
            Will reset the DataGrid SelectionMode to FullRowSelect.
            </summary>
            <param name="sender">The Cell</param>
            <param name="e">The mouse events</param>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.VdnVariableDisplay.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnVariableDisplay.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnVariableDisplay.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Controls.VdnYesNoToAll.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnYesNoToAll.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Controls.VdnYesNoToAll.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Bits.m_Bytes">
            <summary>
            Stores all the bits as an array of bytes
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Bits.FixedBitLength">
            <summary>
            Gets or sets the number of bits this 
            class expects.  If this value is 0, the bit length is not fixed.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Bits.#ctor(System.Object)">
            <summary>
            Creates a bits class providing access to manipulate individual bits.  
            If the class is passed a string, the format expected is of the following format:
            XXXX XXXX XXXX XXXX ...
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Bits.#ctor(System.Object,System.Int32)">
            <summary>
            Creates a bits class providing access to manipulate individual bits.  
            If the class is passed a string, the format expected is of the following format:
            XXXX XXXX XXXX XXXX ...
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.DataMap">
            <summary>
            A DataMap is a collection of VdnConnectors essentially associated with
            a config file
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.DataMap.Refresh">
            <summary>
            This method forces the value stored in the VdnVariable back onto the 
            property for each connection in the datamap, this is intended to be 
            used for resynchronizing the values.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.VdnConnection.m_VdnVariable">
            <summary>
            A direct reference to the VdnInterface's variable...
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.VdnConnection.VdnVariable">
            <summary>
            Allows access to the direct VDN reference that has been connected to.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.VdnConnection.#ctor">
            <summary>
            Initializes an AppVdnConnectorClass object to default values.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.VdnConnection.Refresh">
            <summary>
            This method forces the value stored in the VdnVariable back onto the 
            property, this is intended to be used for resynchronizing the values.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.VdnBlockVariable">
            <summary>
            A class representing a VDN Block data Type.
            This will handle any type specific calls that the 
            VdnVariable class does not.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.VdnBlockVariable.c_NumberOfBytesToDisplay">
            <summary>
            This is the number of bytes to dispaly
            when using the GetFormatValueString().
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.VdnBlockVariable.m_LastValue">
            <summary>
            The last value recieved.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.VdnBlockVariable.Size">
            <summary>
            The size of the Block.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.VdnBlockVariable.Value">
            <summary>
            Gets or sets the value. Can be overriden by the same
            property from its child class
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.VdnBlockVariable.#ctor(System.UInt32)">
            <summary>
            Constructor.
            </summary>
            <param name="size">Size of the block.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.VdnBlockVariable.InitializeBaseData">
            <summary>
            Initializes an instance of the VdnBlock class
            that contains the actual data for the VdnBlock.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.VdnBlockVariable.Compare">
            <summary>
            Compares the current values with the previous value.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.VdnBlockVariable.SendLockRequest(System.Object)">
            <summary>
            Sends a lock request. This is currently not handled.
            </summary>
            <param name="value">The value to lock to.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.VdnBlockVariable.SendOneShotRequest(System.Object)">
            <summary>
            Sends a one shot request for the block.
            Not currently implemented.
            </summary>
            <param name="value">The value to send as a one shot.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.VdnBlockVariable.GetFormatValueString">
            <summary>
            Returns a string representation of the 
            VdnVariable.
            </summary>
            <returns>String representation of a vdn variable.</returns>
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.FullQueueName">
            <summary>
            Possibly could have been named FullRequestName due to the inclusion of the Request property,
            this class provides a mechanism for completely specifying a request queue such that requests
            can be sent using the properties provided.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.FullQueueName.c_Delimiter">
            <summary>
            Delimiter used to separate queue field names.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.FullQueueName.#ctor">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.FullQueueName.#ctor(System.String,System.String)">
            <summary>
            Ctor
            </summary>
            <param name="topic">Sets the Topic property to this value</param>
            <param name="name">Sets the Name property to this value</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.FullQueueName.#ctor(System.String,System.String,System.String)">
            <summary>
            Ctor
            </summary>
            <param name="topic">Sets the Topic property to this value</param>
            <param name="name">Sets the Name property to this value</param>
            <param name="request">Sets the Request property to this value</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.FullQueueName.#ctor(Csf.Imets.ToolCore.Vdn.FullQueueName)">
            <summary>
            Copy Ctor
            </summary>
            <param name="copy">The object to copy.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.FullQueueName.Initialize(System.String,System.String,System.String)">
            <summary>
            Only call from the constructor to set the properties of this object.
            </summary>
            <param name="topic">The topic name to specify for the queue</param>
            <param name="name">The name of the queue</param>
            <param name="request">The request name for this object</param>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.FullQueueName.Topic">
            <summary>
            The topic name for the queue
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.FullQueueName.Name">
            <summary>
            The Queue name 
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.FullQueueName.Request">
            <summary>
            The Request name 
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.FullQueueName.ToString">
            <summary>
            Returns a delimited string specifying the Queue/request.
            </summary>
            <returns>A delimited string specifying the Queue/request</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.FullQueueName.IsValid">
            <summary>
            Whether or not the request queue specification is valid.
            </summary>
            <returns>True if all properties have values, false if not.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.FullQueueName.CompareTo(System.Object)">
            <summary>
            Compares this object to the passed object.
            </summary>
            <param name="obj">The object to compare against this object</param>
            <returns>Whether this object is less than, equal to, or greater than the passed object.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.FullQueueName.Compare(Csf.Imets.ToolCore.Vdn.FullQueueName,Csf.Imets.ToolCore.Vdn.FullQueueName)">
            <summary>
            Compares two FullQueueName objects
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns>an integer describing whether or not x is less than, equal to, or greater than y</returns>
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.VdnConnectionInfo">
            <summary>
            A class designed to contain the connection info for a Virtual Data Network.
            This class is used to connect the vdn client to the host.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.VdnConnectionInfo.m_IPAddress">
            <summary>
            The IPAddress to use for the VdnConnectionInfo
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.VdnConnectionInfo.m_Validating">
            <summary>
            Backing store for a flag to state whether the VdnConnectionInfo is verifying the hostname.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.VdnConnectionInfo.m_IsValid">
            <summary>
            Flag to show whether the connection information is considered valid.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.VdnConnectionInfo.m_Lock">
            <summary>
            Lock to control DNS lookups.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.VdnConnectionInfo.KernelName">
            <summary>
            Gets or sets the name of the Kernel.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.VdnConnectionInfo.Validating">
            <summary>
            Gets a flag stating 
            whether the VdnConnection is 
            currently validating the host name.
            When complete the IPAddress and DNS 
            name will be updated.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.VdnConnectionInfo.Hostname">
            <summary>
            Gets or sets the name of the host.
            This can be a DNS entry or an IP Address.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.VdnConnectionInfo.IsValid">
            <summary>
            Gets whether or not the Hostname is considered Valid
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.VdnConnectionInfo.IP">
            <summary>
            This is the actual IP in XXX.XXX.XXX.XXX format
            Unless the current host name could not be found.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.VdnConnectionInfo.IPAddress">
            <summary>
            The IPAddress to connect to for the host.
            </summary>        
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.VdnConnectionInfo.DnsName">
            <summary>
            Returns the DNS Name of the Hostname.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.VdnConnectionInfo.Port">
            <summary>
            Gets or sets the port to connect to.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.VdnConnectionInfo.Rate">
            <summary>
            Gets or sets the rate
            of the NetVdnClient.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.VdnConnectionInfo.Filesystem">
            <summary>
            Gets or sets the Filesystem.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.VdnConnectionInfo.ConnectionString">
            <summary>
            Gets the connections string Hostname + ":" + port
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.VdnConnectionInfo.Required">
            <summary>
            Gets or sets if this VdnConnectionInfo is required.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.VdnConnectionInfo.IsHost">
            <summary>
            Gets or sets if this connection 
            is the actual host.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.VdnConnectionInfo.IsHealth">
            <summary>
            Gets or sets whether this IsHealth
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.VdnConnectionInfo.CreateDummies">
            <summary>
            Gets or sets if this VdnConnection can create dummies.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.VdnConnectionInfo.VdnConnectionState">
            <summary>
            Gets or sets the current VdnConnectionState.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.VdnConnectionInfo.UpdateHostname(System.String)">
            <summary>
            Updates the IPHostEntry based on the HostName.
            Updates the IPAddress. If the HostName is an IPAddress it uses 
            that one otherwise it searches the IPHostEntry for the first InterNetwork IPAddress.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Avionics.A429ReceiverListener.Pop(Csf.Imets.ToolCore.Vdn.Avionics.A429Label@)">
            <summary>
            Pops a new OneShot label from a queue
            </summary>
            <param name="word"></param>
            <returns></returns>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Avionics.A429Label.IsOneShotLabel">
            <summary>
            A one shot label is a label that came from a subscribed channel
            and is not a "subscribed label".  ( This needs to be seperated out into
            a seperate inherited class )
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.Avionics.A429Receiver">
            <summary>
            Class that handles updates to A429Channels and duplicates/distributes incoming labels
            to listeners of the channel.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Avionics.A429Receiver.m_Listeners">
            <summary>
            The list of registered listeners who need to get the labels popped of the channel.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Avionics.A429Receiver.CreateOneShotLabel">
            <summary>
            This method populates a oneshot label with it's parent queue information
            and returns a reference to it
            </summary>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Avionics.A429Receiver.Compare">
            <summary>
            Overrides the base vdn variable's compare method to pop off labels for each
            of the registered listeners associated with this receiver.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.FullVdnName">
            <summary>
            Class that contains all the types for distinguishing a variable
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.FullVdnName.Scope">
            <summary>
            The parameter's scope name.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.FullVdnName.Topic">
            <summary>
            The parameter's topic name.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.FullVdnName.Variable">
            <summary>
            The parameter's variable name.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.FullVdnName.Units">
            <summary>
            The parameter's units string.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.FullVdnName.Query">
            <summary>
            This generates a query statement for locating this variable
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.FullVdnName.#ctor">
            <summary>
            Initializer for the FullVdnName class (defaults scope to Output and type to null)
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.FullVdnName.#ctor(Csf.Imets.ToolCore.Vdn.FullVdnName)">
            <summary>
            Copy Constructor for the FullVdnName class
            </summary>
            <param name="copy">copy of FullVdnName class.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.FullVdnName.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializer for the FullVdnName class (defaults scope to Output and type to null)
            </summary>
            <param name="topic">The topic of vdn.</param>
            <param name="variable">The variable of vdn</param>
            <param name="units">The units of vdn.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.FullVdnName.#ctor(System.String,System.String,System.String,Csf.Imets.ToolCore.Vdn.VdnType)">
            <summary>
            Initializer for the FullVdnName class (defaults scope to Output)
            </summary>
            <param name="topic">The topic of vdn.</param>
            <param name="variable">The variable of vdn.</param>
            <param name="units">The units of vdn.</param>
            <param name="type">The type of vdn.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.FullVdnName.#ctor(System.String,System.String,System.String,Csf.Imets.ToolCore.Vdn.VdnScope)">
            <summary>
            Initializer for the FullVdnName class (defaults type to null)
            </summary>
            <param name="topic">The topic of vdn.</param>
            <param name="variable">The variable of vdn.</param>
            <param name="units">The units of vdn.</param>
            <param name="scope">The scope of vdn.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.FullVdnName.#ctor(System.String,System.String,System.String,Csf.Imets.ToolCore.Vdn.VdnScope,Csf.Imets.ToolCore.Vdn.VdnType)">
            <summary>
            Initializer for the FullVdnName class
            </summary>
            <param name="topic">The topic of vdn.</param>
            <param name="variable">The variable of vdn.</param>
            <param name="units">The units of vdn.</param>
            <param name="scope">The scope of vdn.</param>
            <param name="type">The type of vdn.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.FullVdnName.ParseScope(System.String)">
            <summary>
            This method parses the VdnScope preventing exceptions from being thrown.
            </summary>
            <param name="scopeString"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.FullVdnName.ParseType(System.String)">
            <summary>
            This method parses the VdnType preventing exceptions from being thrown.
            </summary>
            <param name="typeString"></param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.FullVdnName.Compare(Csf.Imets.ToolCore.Vdn.FullVdnName,Csf.Imets.ToolCore.Vdn.FullVdnName)">
            <summary>
            Implements the IComparer interface.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.HostConnectionState">
            <summary>
            Provides the different states that the data mapper might be in.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.HostConnectionState.Disconnected">
            <summary>
            The state that the data mapper is in before anyone attempts to connect to
            an interface.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.HostConnectionState.Connecting">
            <summary>
            The state while connecting to whatever type of connection was requested.
            Could possibly be hanging in here while waiting for the host to come up.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.HostConnectionState.Connected">
            <summary>
            The normal state where data is being automatically updated and subscriptions/publications 
            can occur.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.RequestSentEventArgs">
            <summary>
            Event arguments specifically for the RequestSentEvent
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.RequestSentEventArgs.SentRequest">
            <summary>
            The request that this event is reporting as having been sent.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.RequestSentEventArgs.#ctor(Csf.Imets.ToolCore.Vdn.Request)">
            <summary>
            Ctor
            </summary>
            <param name="sentRequest"></param>
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.RequestSentQueuedState">
            <summary>
            Internal class needed to push RequestSent events such that they are
            handled off of the NetVdnClient thread and onto the thread pool.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.RequestSentQueuedState.NetVdnClient">
            <summary>
            The NetVdnClient initiating this event
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.RequestSentQueuedState.Request">
            <summary>
            The request that was sent.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.RequestSentQueuedState.#ctor(Csf.Imets.ToolCore.Vdn.NetVdnClient,Csf.Imets.ToolCore.Vdn.Request)">
            <summary>
            Ctor
            </summary>
            <param name="client">Initializes the NetVdnClient field</param>
            <param name="req">Is cloned for the Request field</param>
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.NetVdnClient">
            <summary>
            Defines the NetVdnClient class which handles incoming requests and passes them 
            down to the NetVdnClient wrapped class.  Modifications are made to serialize 
            NetVdnClient accesses to prevent lock ups from the various threads and to 
            report states.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.NetVdnClient.PendingAction">
            <summary>
            This class encapsulates a queued up action to be 
            performed by the NetVdnClient worker thread
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.NetVdnClient.PendingAction.ActionName">
            <summary>
            The name/type of action to be performed
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.NetVdnClient.PendingAction.Args">
            <summary>
            The args it may use
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.NetVdnClient.QueueVaultColumns">
            <summary>
            Columns used for the queue data table
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.NetVdnClient.m_UniqueIndex">
            <summary>
            A unique index to ensure multiple NetVdnClients do not have the same name.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.NetVdnClient.m_DisconnectRequested">
            <summary>
            A boolean variable to show whether the NetVdnClient should disconnect.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.NetVdnClient.m_ConnectRequested">
            <summary>
            A boolean variable to show whether the NetVdnClient should attempt
            to connect.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.NetVdnClient.m_LastConnectFailedMessage">
            <summary>
            Caches the last outputted connection failed message, or reset to "" after a
            successful connection.
            </summary>
        </member>
        <member name="E:Csf.Imets.ToolCore.Vdn.NetVdnClient.NewFrameData">
            <summary>
            Event to inform buffered clients of new frame data
            </summary>
        </member>
        <member name="E:Csf.Imets.ToolCore.Vdn.NetVdnClient.Connected">
            <summary>
            Event to signal the NetVdnClient is now connected
            </summary>
        </member>
        <member name="E:Csf.Imets.ToolCore.Vdn.NetVdnClient.Disconnected">
            <summary>
            Event to signal the NetVdnClient is now disconnected
            </summary>
        </member>
        <member name="E:Csf.Imets.ToolCore.Vdn.NetVdnClient.HostConnectionStateChanged">
            <summary>
            Event to signal the NetVdnClient connection state has changed
            </summary>
        </member>
        <member name="E:Csf.Imets.ToolCore.Vdn.NetVdnClient.VariableCountChanged">
            <summary>
            Event to signal the NetVdnClient's variable count has changed
            </summary>
        </member>
        <member name="E:Csf.Imets.ToolCore.Vdn.NetVdnClient.RequestAllCompleted">
            <summary>
            Event to signal the NetVdnClient has finished requesting all variables and queues
            </summary>
        </member>
        <member name="E:Csf.Imets.ToolCore.Vdn.NetVdnClient.QueueCountChanged">
            <summary>
            Event to signal the NetVdnClient's queue count has changed
            </summary>
        </member>
        <member name="E:Csf.Imets.ToolCore.Vdn.NetVdnClient.RequestSent">
            <summary>
            Event occurs whenever a request gets sent over this interface.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.NetVdnClient.IsConnected">
            <summary>
            Flag to indicate if the NetVdnClient is connected or not
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.NetVdnClient.ConnectionPending">
            <summary>
            Flag to indicate if the connection is pending
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.NetVdnClient.UniversalSimFrame">
            <summary>
            This is the current sim frame that the host is reporting
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.NetVdnClient.VariableCount">
            <summary>
            Current count of variables that the NetVdnClient knows about
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.NetVdnClient.QueueCount">
            <summary>
            Current count of queues published on the host
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.NetVdnClient.Rate">
            <summary>
            Current rate the NetVdnClient is connected at
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.NetVdnClient.NodeName">
            <summary>
            The name of the node as reported by the host
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.NetVdnClient.State">
            <summary>
            Thread safe way to get at the State of the data mapper.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.NetVdnClient.UniqueName">
            <summary>
            Unique namethis netvdnclient is using
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.NetVdnClient.VdnConnectionInfo">
            <summary>
            Connection information
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.Connect(Csf.Imets.ToolCore.Vdn.VdnConnectionInfo,System.Boolean)">
            <summary>
            Method will signal the worker thread to connect to the host simulation
            If the worker thread has not been started it will start it.
            </summary>
            <param name="vdnConnection">Connection information</param>
            <param name="isBuffered">Whether or not this should be a buffered connection</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.Disconnect">
            <summary>
            Method will signal to the worker thread to disconnect the connection
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.RequestAll">
            <summary>
            Sends a request all command to the worker thread to request all variables from the host
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.Subscribe(Csf.Imets.ToolCore.Vdn.FullVdnName)">
            <summary>
            Adds a variable to a subscribe queue to be processed by the worker thread.
            </summary>
            <param name="variableFullName">Name of the variable to be subscribed to</param>
            <returns>A VdnVariable reference</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.Subscribe(Csf.Imets.ToolCore.Vdn.VdnVariable,System.Boolean)">
            <summary>
            Internal method to subscribe to a variable.  
            </summary>
            <param name="variableToSubscribe">Reference to the variable to be subscribed to</param>
            <param name="force">Force will ignore the IsSubscribed flag and attempt to resubscribe.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.InternalSubscribe(Csf.Imets.ToolCore.Vdn.VdnVariable,System.Boolean)">
            <summary>
            Internal method to subscribe to a variable. 
            </summary>
            <param name="variableToSubscribe">Reference to the variable to be subscribed to</param>
            <param name="force">Force will ignore the IsSubscribed flag and attempt to resubscribe.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.Unsubscribe(Csf.Imets.ToolCore.Vdn.VdnVariable)">
            <summary>
            Unsubscribe from the supplied variable
            </summary>
            <param name="variable">Variable to be unsubscribed to</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.UnsubscribeAll">
            <summary>
            Unsubscribe from all variables currently subscribed to
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.AddDataMap(Csf.Imets.ToolCore.Vdn.DataMap)">
            <summary>
            Add a datamap of variables to subscribe to
            </summary>
            <param name="newDataMap">Datamap to subscribe</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.Shutdown">
            <summary>
            Shutsdown the NetVdnClient
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.SendRequest(Csf.Imets.ToolCore.Vdn.Request)">
            <summary>
            Sends a request to the simulation host
            </summary>
            <param name="request">Request to be sent</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.SendRequest(Csf.Imets.ToolCore.Vdn.Request,System.Boolean)">
            <summary>
            Sends a request to the simulation host with the option of not logging 
            the request.
            </summary>
            <param name="request">Request to be sent</param>
            <param name="notify">Whether or not to log the request and notify 
            subscribers of the RequestSent event.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.SendRequest(System.String,System.String,Csf.Imets.ToolCore.Vdn.Request)">
            <summary>
            Sends a request to the simulation host
            </summary>
            <param name="topic">Topic of the request queue</param>
            <param name="queue">Name of the request queue</param>
            <param name="request">Request to be sent</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.SendRequest(System.String,System.String,Csf.Imets.ToolCore.Vdn.Request,System.Boolean)">
            <summary>
            Sends a request to the simulation host with the option of not logging 
            the request.
            </summary>
            <param name="topic">Topic of the request queue</param>
            <param name="queue">Name of the request queue</param>
            <param name="request">Request to be sent</param>
            <param name="notify">Whether or not to log the request and notify 
            subscribers of the RequestSent event.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.PublishRequestQueue(Csf.Imets.ToolCore.Vdn.VdnRequestQueue)">
            <summary>
            Method to publish a request queue.
            </summary>
            <param name="newQueue">Queue to be published</param>
            <returns>True if success; false otherwise</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.UnpublishRequestQueue(Csf.Imets.ToolCore.Vdn.VdnRequestQueue)">
            <summary>
            Unpublish a request queue
            </summary>
            <param name="oldQueue">Queue to be unpublished from</param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.GetTopics">
            <summary>
            Retrieves a list of the topics currently known on the host
            </summary>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.GetVariables(System.String)">
            <summary>
            Retrieves a list of the variables under the given topic
            </summary>
            <param name="topic">Topic to search under</param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.GetAllVariables">
            <summary>
            Gets a list of all the vdn variables available.
            </summary>
            <returns>A list of all the vdn variables.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.GetAllFullNames">
            <summary>
            Gets a list of all the vdn variables FullVdnNames available.
            </summary>
            <returns>A list of all the vdn variables FullVdnNames.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.GetAllFullNames(System.String,System.String,System.String)">
            <summary>
            Gets a list of all the vdn variable FullVdnNames available based on arguments specified.
            </summary>
            <param name="topic">VDN Topic</param>
            <param name="variable">VDN Variable</param>
            <param name="units">VDN Units</param>
            <returns>A list of all the vdn variables FullVdnNames.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.GetQueueTopics">
            <summary>
            Retrieves a list of the queues topics currently known about
            </summary>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.GetQueueNames(System.String)">
            <summary>
            Retrieves a list of the queues under a given topic
            </summary>
            <param name="topic">Queue topic under which the queues are to be retrieved</param>
            <returns>A list of queues from under a topic</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.GetQueue(System.String,System.String)">
            <summary>
            Get a queue with the given topic and queue name
            </summary>
            <param name="topic">The topic the queue is under</param>
            <param name="queue_name">The queue name of the given queue</param>
            <returns></returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.GetFilteredVariables(System.String,System.Boolean)">
            <summary>
            Retrieves a list of variables that match the query filter
            </summary>
            <param name="queryFilter">Filter string to query for variables</param>
            <param name="caseSensitive">If true then the search only returns variables that match 
            the case of the query filter.  If false the search is performed case insensitively.</param>
            <returns>The list of variables that apply to the give query</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.GetFilteredVariables(System.String)">
            <summary>
            Retrieves a list of variables that match the query filter
            </summary>
            <param name="queryFilter">Filter string to query for variables</param>
            <returns>The list of variables that apply to the give query</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.InitializeQueueDataTable">
            <summary>
            Initializes the queue datatable with the appropriate columns
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.Update(System.Object,System.ComponentModel.DoWorkEventArgs)">
            <summary>
            The primary update method for the worker thread. This thread will run until a shutdown command is issued.
            </summary>
            <param name="sender">Standard sender user data object</param>
            <param name="e">Standard Worker event args</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.InternalConnect">
            <summary>
            Attempts a connection.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.InternalDisconnect">
            <summary>
            Disconnects the host and updates the state.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.ProcessHostState">
            <summary>
            Method to ensure that the connection and host states are in sync with the variable
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.ResubscribeVariables">
            <summary>
            This method will resubscribe to variables that were previously subscribed before the 
            connection on the other side was terminated.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.ProcessPendingActions">
            <summary>
            This method checks for any requested actions and processes them
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.ProcessRequestAll">
            <summary>
            Processes a request all variables and queues
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.RequestAllVariables">
            <summary>
            Processes a request all variables in a background thread.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.RequestAllQueues">
            <summary>
            Proceses a "request all queues" event in a background thread.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.ProcessPendingSubscribes">
            <summary>
            Processes pending subscribes.  This method checks for any variables that need to be subscribed and handles it
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.ProcessSubscribe(Csf.Imets.ToolCore.Vdn.VdnVariable)">
            <summary>
            Handles an individual subscribe to the netvdnclient
            </summary>
            <param name="variable">Variable to be subscribed</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.ProcessPendingUnsubscribes">
            <summary>
            Processes any pending unsubscribes
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.ProcessSubscriptions">
            <summary>
            Process all pending subscriptions. This method handles the read() and commit() to the VDN
            as well checks if any variables have changed and sends events.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.UpdateComparables">
            <summary>
            This method iterates through the list of "comparable" variables
            that the NetVdnClient maintains to inform users who are watching
            these variables that their values have changed.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.ProcessPendingOutgoingRequests">
            <summary>
            Locks the pending requests list and iterates through them, passing them
            off to the NetVdnClient to send over the VDN.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.ProcessPendingIncomingRequests">
            <summary>
            Checks all registered queues for 
            incoming requests.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.ProcessPublishRequestQueue(Csf.Imets.ToolCore.Vdn.VdnRequestQueue)">
            <summary>
            This method processes any request queues that are supposed to be published.
            </summary>
            <param name="vdnRequestQueue">Queue to be published</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.ProcessUnpublishRequestQueue(Csf.Imets.ToolCore.Vdn.VdnRequestQueue)">
            <summary>
            This method processes any request queues that are supposed to be unpublished.
            </summary>
            <param name="vdnRequestQueue">Queue to be unpublished</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.CheckVariableCounts">
            <summary>
            This method synchronizes the variables and queue counts with the numbers of variables
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.ProcessShutdown">
            <summary>
            Handles a shutdown flag and terminates the thread.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.UpdateComparable(Csf.Imets.ToolCore.Vdn.VdnVariable)">
            <summary>
            This method is used to check if a variable is being monitored for changes, if so it 
            adds to the watch list, otherwise it will remove it
            </summary>
            <param name="variable"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.VariableValueChangedReferencesChanged(System.Object,System.EventArgs)">
            <summary>
            Handler for event when a variable's references changed
            </summary>
            <param name="sender">User data object</param>
            <param name="e">Unused event args parameter</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.NetVdnClient.OnRequestSent(System.Object)">
            <summary>
            Static method used to execute the RequestSent event handlers by 
            the thread pool.
            </summary>
            <param name="stateObject">Expects a RequestSentQueuedState object that contains
            a reference to the NetVdnClient and a copy of the sent request.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.VariableVault.FindVdnVariable(System.String,System.String,System.String)">
            <summary>
            Scope of e_outputs assumed for this find search.
            </summary>
            <param name="topic"></param>
            <param name="variable"></param>
            <param name="units"></param>
            <returns></returns>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.VdnEnum.Value">
            <summary>
            Gets or sets the value. Can be overriden by the same
            property from its child class
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.VdnEnum.SendLockRequest(System.Object)">
            <summary>
            Sends a lock request for this VdnEnum, potentially converting the passed
            value to the appropriate integer.
            </summary>
            <param name="value">Expects an enumerator string.</param>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.Request.m_Notify">
            <summary>
            Backingstore for Notify property which is used by the
            NetVdnClient to determine if the RequestSent event should be
            fired for his request when sent.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.Request.Notify">
            <summary>
            If true then the RequestSent event gets fired for this
            request when it is sent.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.Request.Clone">
            <summary>
            Creates a clone of the Request. 
            </summary>
            <returns>A copy of the Request.</returns>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.VdnVariable.Topic">
            <summary>
            Gets or sets the topic.
            </summary>
            <value>The topic.</value>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.VdnVariable.Variable">
            <summary>
            Gets or sets the variable.
            </summary>
            <value>The variable.</value>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.VdnVariable.Units">
            <summary>
            Gets or sets the units.
            </summary>
            <value>The units.</value>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.VdnVariable.Value">
            <summary>
            Gets or sets the value. Can be overriden by the same
            property from its child class
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.VdnVariable.Scope">
            <summary>
            Gets or sets the scope.
            </summary>
            <value>The scope.</value>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.VdnVariable.IsSubscribed">
            <summary>
            Gets or sets a value indicating whether this instance is subscribed.
            </summary>
            <value>
            	<c>true</c> if this instance is subscribed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.VdnVariable.IsDummy">
            <summary>
            A dummy variable is one who's been subscribed to, however not published.
            The VDN consequently creates a variable as a "dummy" for the subscriber(s).
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.VdnVariable.AddReference">
            <summary>
            A call to this method indicates this variable is being used externally in a program. 
            Each external use should call AddReference()
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.VdnVariable.GetAssociatedScopeColor">
            <summary>
             Returns the associated color for the VdnVariable 
             based on the source or scope of the variable.
            </summary>
            <returns>Color representing the state of the variable or the scope.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.VdnVariable.CreateVariable(Csf.Imets.ToolCore.Vdn.FullVdnName)">
            <summary>
            Creates a VdnVariable using the given FullVdnName
            </summary>
            <param name="name">The Full name of the vdn variable.</param>
            <returns>A VdnVariable representing the given name.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.VdnVariable.CreateVariable(Csf.Imets.ToolCore.Vdn.FullVdnName,System.UInt32)">
            <summary>
            Creates a VdnVariable using the given FullVdnName
            </summary>
            <param name="name">The Full name of the vdn variable.</param>
            <param name="size">The size of the variable(Only used for the Block Type)</param>
            <returns>A VdnVariable representing the given name.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.VdnVariable.UnlockAllRequest">
            <summary>
            Sends a single request to the host to unlock all.
            Note: If the variable's ParentNetVdnClient is null
            this will have no effect.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.VdnVariable.InitializeBaseData">
            <summary>
            Initializes/creates the base data for the vdn variable based on its VdnType.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.VdnVariable.OnChanged(System.Object)">
            <summary>
            Invokes the changed event. 
            </summary>
            <param name="stateInfo">The variable whose value has changed.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.VdnVariable.SetOverrideLock(System.Boolean)">
            <summary>
            Sends a lock/unlock request to the host for the variable. 
            Note: If ParentNetVdnClient is null this will have no effect.
            </summary>
            <param name="value">True to lock;False to unlock.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.VdnVariable.SendLockRequest(System.Object)">
            <summary>
            Sends a lock request with the provided value that will
            attempt to lock this variable and set its value to 'value'.
            </summary>
            <param name="value">The value to set this variable to.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.VdnVariable.SendUnlockRequest">
            <summary>
            Sends a request to the host to unlock the VdnVariable.
            Note: If ParentNetVdnClient is null this will have no effect.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.VdnVariable.SendOneShotRequest(System.Object)">
            <summary>
            Sends a one shot request to set the value of the 
            variable to the given value.
            Note: If ParentNetVdnClient is null this will have no effect.
            </summary>
            <param name="value">The value to request the variable be set too.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.VdnVariable.GetFormatValueString">
            <summary>
            Returns a string representation of the VdnVariable.
            </summary>
            <returns>String representation of a vdn variable.</returns>
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.VdnVector`1">
            <summary>
            Represents a VdnVector found on the VDN. Connects and monitors the 
            vector and updates to match.
            </summary>
            <typeparam name="T">The class that represents an item in the list. (Must inherit from VdnVectorItem and have a default constructor)</typeparam>
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.VdnVector`1.UpdateListDelegate">
            <summary>
            Used to push the add/remove calls on to the Queue.
            </summary>
            <param name="item">The item to be added/removed from the list.</param>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.VdnVector`1.m_SimConnection">
            <summary>
            The simconnection to monitor for simulator changes.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.VdnVector`1.m_CapacityVdnName">
            <summary>
            The name of the capacity VdnVariable.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.VdnVector`1.m_CapacityVariable">
            <summary>
            The vdnVariable for the capacity variable.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.VdnVector`1.m_EnabledVariables">
            <summary>
            The variables to monitor to see if items have been added or removed from the list.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.VdnVector`1.m_WatchList">
            <summary>
            A list of variables to watch for a frame togather all information before adding to the collection.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.VdnVector`1.m_AddRemoveLock">
            <summary>
            Lock to control adding and removing variables from the list.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.VdnVector`1.Topic">
            <summary>
            The topic of the VdnVector.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.VdnVector`1.Name">
            <summary>
            The name of the VdnVector.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.VdnVector`1.#ctor(Csf.Imets.ToolCore.Taf.ISimConnection,System.String,System.String)">
            <summary>
            Constructor for the VdnVector.
            </summary>
            <exception cref="T:System.ArgumentNullException" />
            <param name="simConnection">The connection to monitor. (HostDataModel.Instance for IA)</param>
            <param name="topic">The topic the VdnVector is published under.</param>
            <param name="name">The name of the VdnVector.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.VdnVector`1.SimDetached(System.Object,Csf.Imets.ToolCore.Taf.SimAttachedArgs)">
            <summary>
            Occurs when the active simulator is detached from the 
            current SimConnection.
            </summary>
            <param name="sender">The SimConnection</param>
            <param name="args">The arguments about the detached simulator.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.VdnVector`1.SimAttached(System.Object,Csf.Imets.ToolCore.Taf.SimAttachedArgs)">
            <summary>
            Occurs when the active simulator is attached to the 
            current SimConnection.
            </summary>
            <param name="sender">The SimConnection</param>
            <param name="args">The arguments about the attached simulator.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.VdnVector`1.HostConnected(System.Object,System.EventArgs)">
            <summary>
            Called when the current simulator completes a connection
            to the host.
            </summary>
            <param name="sender">The connecting Simulator.</param>
            <param name="args">This is null.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.VdnVector`1.HostDisconnected(System.Object,System.EventArgs)">
            <summary>
            Called when the current simulator completes a disconnection
            from the host.
            </summary>
            <param name="sender">The disconnecting Simulator.</param>
            <param name="args">This is null.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.VdnVector`1.CapacityChanged(System.Object,System.Object)">
            <summary>
            Occurs when the Capacity VdnVariable changes. 
            Subscribes to new item enabled variables and monitors them 
            for changes.
            </summary>
            <param name="sender">The VdnVariable</param>
            <param name="lastValue">The last capcity value.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.VdnVector`1.EnabledChanged(System.Object,System.Object)">
            <summary>
            Occurs when an items enabled state changes. 
            Either adds or removes an item from the list.
            </summary>
            <param name="sender">The VdnVariable</param>
            <param name="lastValue">The previous value.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.VdnVector`1.ItemSubscribed(System.Object,System.EventArgs)">
            <summary>
            Occurs when an item succesfully subscribes
            and recieves the first frame of data.
            Once this occurs add it to the vector.
            </summary>
            <param name="sender">Item</param>
            <param name="e">null</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.VdnVector`1.AddItem(`0)">
            <summary>
            This method is used to push a new item on to the collection.
            It should only be called by using Dispatched.BeginInvoke to push it 
            onto the UI thread.
            </summary>
            <param name="item">The item to add to the list.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.VdnVector`1.RemoveItem(`0)">
            <summary>
            This method is used to remove an item from the collection.
            It should only be called by using Dispatched.BeginInvoke to push it 
            onto the UI thread.
            </summary>
            <param name="item">The item to remove from the list.</param>
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.VdnVectorItems.Entity">
            <summary>
            The Entity class represents a single entity in Vdn Vector of entities.    
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.VdnVectorItems.Entity.m_Roll">
            <summary>
            The roll of the entity. (Degrees)
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.VdnVectorItems.Entity.m_Pitch">
            <summary>
            The pitch of the entity. (Degrees)
            </summary>        
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.VdnVectorItems.Entity.m_Yaw">
            <summary>
            The yaw of the entity. (Degrees)
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.VdnVectorItems.Entity.m_Type">
            <summary>
            The type of the entity. 
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.VdnVectorItems.Entity.m_Id">
            <summary>
            The id of the entity. 
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.VdnVectorItems.Entity.Roll">
            <summary>
            Gets or Sets the current roll of the entity.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.VdnVectorItems.Entity.Pitch">
            <summary>
            Gets or Sets the current pitch of the entity.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.VdnVectorItems.Entity.Yaw">
            <summary>
            Gets or Sets the current yaw of the entity.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.VdnVectorItems.Entity.Id">
            <summary>
            Gets or Sets the id of the entity.        
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.VdnVectorItems.Entity.Type">
            <summary>
            Gets or Sets the type of the entity.
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.VdnVectorItems.Position">
            <summary>
            The position class represents a position in the world in geodetic coordinates.    
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.VdnVectorItems.Position.m_Latitude">
            <summary>
            The latitude of the position. (Degrees)
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.VdnVectorItems.Position.m_Longitude">
            <summary>
            The longitude of the position. (Degrees)
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.VdnVectorItems.Position.m_Altitude">
            <summary>
            The altitude of the position. (Feet)
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.VdnVectorItems.Position.Latitude">
            <summary>
            Gets or Sets the Latitude of the position. (Degrees)
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.VdnVectorItems.Position.Longitude">
            <summary>
            Gets or Sets the Longitude of the position. (Degrees)
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.VdnVectorItems.Position.Altitude">
            <summary>
            Gets or Sets the Altitude of the position. (Feet)
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.VdnVectorPropertyAttribute">
            <summary>
            This class is used to identify the needed VdnVariable information.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.VdnVectorPropertyAttribute.Name">
            <summary>
            The name of the Variable.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.VdnVectorPropertyAttribute.Units">
            <summary>
            The units of the Variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.VdnVectorPropertyAttribute.#ctor">
            <summary>
            Use the following defaults for the VdnVariable
            Name = PropertyName        
            Scope = Outputs
            Units = ""        
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.VdnVectorPropertyAttribute.#ctor(System.String)">
            <summary>
            Use the following defaults for the VdnVariable               
            Scope = Outputs
            Units = ""        
            </summary>
            <param name="name">The name for the variable</param>        
        </member>
        <member name="T:Csf.Imets.ToolCore.Vdn.VdnVectorItem">
            <summary>
            This class represents an item in a VdnVector. It is designed to be inherited.
            All inherited classes should implement their own properties to be found on item.
            The user does not need to do any subscription that will be handled internally by the 
            VdnVectorItem.
            </summary>
        </member>
        <member name="E:Csf.Imets.ToolCore.Vdn.VdnVectorItem.PropertyChanged">
            <summary>
             Occurs when a property value changes.
            </summary>
        </member>
        <member name="E:Csf.Imets.ToolCore.Vdn.VdnVectorItem.SubscribeComplete">
            <summary>
             Occurs when a the item has succesfully subscribed and had its values updated at least once.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.VdnVectorItem.m_PropertyRegistry">
            <summary>
            A dictionary to store propertyinfo matched with the VdnVariable that contains the value to store in it.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.VdnVectorItem.m_Subscribed">
            <summary>
            If subscribed has already been called on the item.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.Vdn.VdnVectorItem.m_Index">
            <summary>
            The index of the VdnVectorItem. 
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.Vdn.VdnVectorItem.Index">
            <summary>
            The index of the item in the list.
            </summary>        
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.VdnVectorItem.OnPropertyChanged(System.String)">
            <summary>
            Called when ever a property is changed to fire off 
            the PropertyChanged event.
            </summary>
            <param name="property">Name of the property that changed.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.VdnVectorItem.Subscribe(Csf.Imets.ToolCore.Taf.ISimConnection,System.String,System.String,System.Int32)">
            <summary>
            When called subscribes to all VdnVariables for each property containing 
            the VdnVectorAttribute.
            </summary>
            <param name="simConnection">The simConnection to subscribe to.</param>
            <param name="topic">The topic the VdnVector is under.</param>
            <param name="name">The name of the VdnVector.</param>
            <param name="index">The index of the VdnVectorItem.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.VdnVectorItem.Unsubscribe">
            <summary>
            Unsubscribes the VdnVectorItem from all VdnVariables.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.VdnVectorItem.IndexChanged(System.Object,System.Object)">
            <summary>
            Occurs when the index value of the variable changes.
            Updates the index property.
            </summary>
            <param name="sender">The VdnVariable that changed.</param>
            <param name="lastValue">The previous value of the variable.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.VdnVectorItem.VdnVariableValueChanged(System.Object,System.Object)">
            <summary>
            Occurs when any VdnVariableChangesValue. 
            Updates the corresponding property.
            </summary>
            <param name="sender">The VdnVariable that changed.</param>
            <param name="lastValue">The previous value of the variable.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.VdnVectorItem.GetFullVdnName(System.String,System.String,System.Int32,System.String,System.String,System.Type)">
            <summary>
            Attempts to create and return a FullVdnName object.
            </summary>
            <param name="topic">The topic of the FullVdnName</param>
            <param name="name">The name of the VdnVector.</param>
            <param name="index">The index of the VdnVectorItem.</param>
            <param name="field_name">The name of the field.</param>
            <param name="units">The units for the field.</param>
            <param name="type">The type of the property.</param>
            <returns>Null if it fails to create a FullVdnName.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.Vdn.VdnVectorItem.GetVariableName(System.String,System.Int32,System.String)">
            <summary>
            Creates a variable name based on the parameters.
            VariableName = name[index].Field
            </summary>        
            <param name="name">The name of the VdnVector.</param>
            <param name="index">The index of the VdnVectorItem.</param>        
            <param name="field_name">The name of the Field</param>
            <returns>a concatanated string</returns>
        </member>
        <member name="T:Csf.Imets.ToolCore.WPF.Converters.EqualConverter">
            <summary>
            A converter to compare a bound value to a parameter.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.WPF.Converters.EqualConverter.m_Instance">
            <summary>
            A static instance of the equal converter.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.WPF.Converters.EqualConverter.ProvideValue(System.IServiceProvider)">
            <summary>
            Provides a value of the EqualConverter.
            </summary>
            <param name="serviceProvider">N/A</param>
            <returns>The instance of the Equal Converter.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.WPF.Converters.EqualConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Compares the values as strings.
            </summary>
            <param name="value">The value to compare.</param>
            <param name="targetType">The target type.</param>
            <param name="parameter">The parameter to compare.</param>
            <param name="culture">The culture.</param>
            <returns>True or false.</returns>
        </member>
        <member name="M:Csf.Imets.ToolCore.WPF.Converters.EqualConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            This method does nothing. There is noway to convert a boolean back into a given type.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:Csf.Imets.ToolCore.WPF.ValidationRules.NullOrEmptyValidataionRule">
            <summary>
            Validation rule to verify that a string is not null or empty.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.WPF.ValidationRules.NullOrEmptyValidataionRule.Validate(System.Object,System.Globalization.CultureInfo)">
            <summary>
            Validation rule to verify that a string is not null or empty.
            </summary>
            <param name="value">The value to validate against.</param>
            <param name="cultureInfo">Not Used.</param>
            <returns></returns>
        </member>
        <member name="T:Csf.Imets.ToolCore.WPF.ValidationRules.LimitsValidationRule">
            <summary>
            Validation rule to check a value is within the min and max
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.WPF.ValidationRules.LimitsValidationRule.Minimum">
            <summary>
            The Minium limit
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.WPF.ValidationRules.LimitsValidationRule.Maximum">
            <summary>
            The Maximum limit
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.WPF.ValidationRules.LimitsValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
            <summary>
            Validation rule to verify that the given value is a string and compare with min and max limits.
            </summary>
            <param name="value">The value to validate against.</param>
            <param name="cultureInfo">Not Used.</param>
            <returns></returns>
        </member>
        <member name="T:Csf.Imets.ToolCore.WPF.ValidationRules.ColorValidationRule">
            <summary>
            Provides a rule to validate if the value is a color or not.    
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.WPF.ValidationRules.ColorValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
            <summary>
            The validation method attempts to convert the given object using a color converter.
            </summary>
            <param name="value">The object to convert.</param>
            <param name="cultureInfo">N/A</param>
            <returns>The result of the attempt to convert.</returns>
        </member>
        <member name="T:Csf.Imets.ToolCore.WPF.ValidationRules.FileValidataionRule">
            <summary>
            Validation rule to verify a string is a valid path to a file
            currently on the File System.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.WPF.ValidationRules.FileValidataionRule.Validate(System.Object,System.Globalization.CultureInfo)">
            <summary>
            Validation rule to verify that the given value is a string and a path to an actual file.
            </summary>
            <param name="value">The value to validate against.</param>
            <param name="cultureInfo">Not Used.</param>
            <returns></returns>
        </member>
        <member name="T:Csf.Imets.ToolCore.WPF.ValidationRules.RegExValidationRule">
            <summary>
             This validation rule will validate the given value against the 
             regular expression given as a property. This has no default 
             property and will throw an exception if one is not supplied.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.WPF.ValidationRules.RegExValidationRule.Expression">
            <summary>
            Gets or sets the Expression
            the string needs to match to be valid.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.WPF.ValidationRules.RegExValidationRule.Option">
            <summary>
            Option to apply to regular expression
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.WPF.ValidationRules.RegExValidationRule.Message">
            <summary>
            Gets or sets the message to display when the 
            value does not match the regular expression.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.WPF.ValidationRules.RegExValidationRule.#ctor">
            <summary>
            Initializes a new instance of the 
            RegExValidationRule.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.WPF.ValidationRules.RegExValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
            <summary>
            Validates the value against the Regular Expression stored in Expression.
            If it fails the ValidationResult will return the Message stored in Message.
            </summary>
            <param name="value">The value to match.</param>
            <param name="cultureInfo"></param>
            <returns>Whether or not the value is valid.</returns>
        </member>
        <member name="T:Csf.Imets.ToolCore.WPF.Windows.AboutWindow">
            <summary>
            Interaction logic for the SplashScreen class.
            This is a simple window class with flashy animations
            to show users while loading up the actual applications.
            It contains a Message Property to show users
            loading messages at startup.
            </summary>
            <summary>
            AboutWindow
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.WPF.Windows.AboutWindow.#ctor">
            <summary>
            Initializes a new instance of the AboutWindow.
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.WPF.Windows.AboutWindow.GoToLink(System.String)">
            <summary>
            Opens the link as a new process. This is designed for
            web addresses, but will work with any file type that Windows knows how to open.
            </summary>
            <param name="link"></param>
        </member>
        <member name="M:Csf.Imets.ToolCore.WPF.Windows.AboutWindow.OnHyperlinkClicked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when the Hyperlink is clicked. Passes the Uri to the
            GoToLink method.
            </summary>
            <param name="sender">The clicked Hyperlink.</param>
            <param name="e">Not Used</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.WPF.Windows.AboutWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Csf.Imets.ToolCore.WPF.Windows.SplashScreen">
            <summary>
            Interaction logic for the SplashScreen class.
            This is a simple window class with flashy animations
            to show users while loading up the actual applications.
            It contains a Message Property to show users
            loading messages at startup.
            </summary>
            <summary>
            SplashScreen
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.WPF.Windows.SplashScreen.m_SplashScreenThread">
            <summary>
            Thread to push the display of the SplashScreen on to it's 
            own dispatcher thread.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.WPF.Windows.SplashScreen.m_Message">
            <summary>
            The backing store for the message to display 
            in the loading field.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.WPF.Windows.SplashScreen.m_MainTitle">
            <summary>
            The backing store for the Main Title.
            </summary>
        </member>
        <member name="F:Csf.Imets.ToolCore.WPF.Windows.SplashScreen.m_SubTitle">
            <summary>
            The backing store for the sub title.
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.WPF.Windows.SplashScreen.Message">
            <summary>
            Gets or sets the Message
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.WPF.Windows.SplashScreen.MainTitle">
            <summary>
            Gets or sets the MainTitle
            </summary>
        </member>
        <member name="P:Csf.Imets.ToolCore.WPF.Windows.SplashScreen.SubTitle">
            <summary>
            Gets or sets the SubTitle
            </summary>
        </member>
        <member name="M:Csf.Imets.ToolCore.WPF.Windows.SplashScreen.OnPropertyChanged(System.String)">
            <summary>
            Called whenever a property changed.
            Executes the PropertyChanged Event.
            </summary>
            <param name="property">Name of the property that changed.</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.WPF.Windows.SplashScreen.ShowSplash(System.String)">
            <summary>
            Launches the splash screen using the given name as the title.
            </summary>
            <param name="title">Title to display on the splash screen.(Null will display ToolSuite)</param>        
        </member>
        <member name="M:Csf.Imets.ToolCore.WPF.Windows.SplashScreen.HideSplash">
            <summary>
            Hides the splash screen.
            </summary>                
        </member>
        <member name="M:Csf.Imets.ToolCore.WPF.Windows.SplashScreen.OnLeftMouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Occurs whenever the user clicks the left mouse button down on the window.
            This will allow them to drag the window around.
            </summary>
            <param name="sender">The Window</param>
            <param name="e">N/A</param>
        </member>
        <member name="M:Csf.Imets.ToolCore.WPF.Windows.SplashScreen.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Csf.Imets.Log.IMETSTraceListener.StopLogging">
            <summary>
            Flag to indicate that we should stop logging
            </summary>
        </member>
        <member name="M:Csf.Imets.Log.IMETSTraceListener.WriteLine(System.String)">
            <summary>
            Writes the message to the log
            </summary>
            <param name="message">Message</param>
        </member>
        <member name="F:Csf.Imets.Rtmm.TraceLoadingDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csf.Imets.Rtmm.TraceLoadingDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Csf.Imets.Rtmm.TraceLoadingDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:ISCore.NotifyPropertyChanged.OnPropertyChanged(System.String)">
            <summary>
            Utility function for use by subclasses to notify that a property has changed.
            </summary>
            <param name="propertyName">The name of the property.</param>
        </member>
        <member name="M:ISCore.NotifyPropertyChanged.OnPropertyChangedArgs(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Utility function for use by subclasses to notify that a property has changed.
            </summary>
            <param name="args">The name of the property.</param>
        </member>
        <member name="M:ISCore.NotifyPropertyChanged.OnPropertyChanging(System.String)">
            <summary>
            Utility function for use by subclasses to notify that a property is about to change.
            </summary>
            <param name="propertyName">The name of the property.</param>
        </member>
        <member name="E:ISCore.NotifyPropertyChanged.PropertyChanged">
            <summary>
            PropertyChanged event for INotifyPropertyChanged implementation.
            </summary>
        </member>
        <member name="T:ISCore.CommandArchitecture.BaseCommandModel">
            <summary>
            Model for a command
            </summary>
        </member>
        <member name="M:ISCore.CommandArchitecture.BaseCommandModel.Cancel">
            <summary>
            Cancel's current execution of the command
            </summary>
        </member>
        <member name="M:ISCore.CommandArchitecture.BaseCommandModel.Execute">
            <summary>
            Function to execute the command.
            </summary>
        </member>
        <member name="M:ISCore.CommandArchitecture.BaseCommandModel.Execute(System.Object)">
            <summary>
            Function to execute the command.
            </summary>
        </member>
        <member name="M:ISCore.CommandArchitecture.BaseCommandModel.Execute(System.Object,ISCore.CommandArchitecture.CommandModelEventArgs)">
            <summary>
            Function to execute the command.
            </summary>
        </member>
        <member name="M:ISCore.CommandArchitecture.BaseCommandModel.OnQueryEnabled(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Determines if a command is enabled. Override to provide custom behavior. Do not call the
            base version when overriding.
            </summary>
        </member>
        <member name="M:ISCore.CommandArchitecture.BaseCommandModel.OnExecuted(System.Object,ISCore.CommandArchitecture.CommandModelEventArgs)">
            <summary>
            Function to execute the command.  Can either be overridden or
            public event can be used.  This command should do the actual work, and should 
            already have all information available.
            </summary>
        </member>
        <member name="M:ISCore.CommandArchitecture.BaseCommandModel.OnExecuting(System.Object,ISCore.CommandArchitecture.ExecutingRoutedEventArgs)">
            <summary>
            This method is for use before a command is executed, ie when a trigger is set
            </summary>
        </member>
        <member name="M:ISCore.CommandArchitecture.BaseCommandModel.OnPropertyChanged(System.String)">
            <summary>
            Utility function for use by subclasses to notify that a property has changed.
            </summary>
            <param name="propertyName">The name of the property.</param>
        </member>
        <member name="E:ISCore.CommandArchitecture.BaseCommandModel.PropertyChanged">
            <summary>
            PropertyChanged event for INotifyPropertyChanged implementation.
            </summary>
        </member>
    </members>
</doc>
