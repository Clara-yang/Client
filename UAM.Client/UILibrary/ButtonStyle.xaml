<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:cuc="clr-namespace:UAM.Client.UILibrary"
                    xmlns:Behaviors="http://schemas.microsoft.com/xaml/behaviors">
    <Style x:Key="ParallelogramButton" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="btn" DataContext="{TemplateBinding DataContext}">
                        <Button  Height="45"  
                                 Content="{Binding Text }"
                                 FontSize="18"
                                 FontWeight="Bold"
                                 BorderBrush="{DynamicResource PrimaryHueLightBrush}"
                                 Command="{TemplateBinding Command}"
                                 CommandParameter="{TemplateBinding CommandParameter}"
                                 BorderThickness="2"  
                                 Background="{TemplateBinding Background}">
                            <Button.RenderTransform>
                                <SkewTransform AngleX="25"/>
                            </Button.RenderTransform>
                        </Button>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsChecked}" Value="true">
                            <Setter Property="Background" Value="{DynamicResource SecondaryAccentBrush}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BtnItemSytle" TargetType="ListBoxItem">
        <!--<Setter Property="Margin" Value="5"/>-->
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="btn" DataContext="{TemplateBinding DataContext}" Margin="5,10">
                        <Button  Height="45"   
                                 Width="115"
                                 FontWeight="Bold"
                                 FontStyle="Normal"
                                 Content="{Binding Text}" 
                                 Command="{Binding BtnClickCommand}"
                                 CommandParameter="{Binding}"
                                 Background="{TemplateBinding Background}" 
                                 BorderThickness="2"
                                 BorderBrush="{DynamicResource PrimaryHueLightBrush}">
                            <Button.RenderTransform>
                                <SkewTransform AngleX="25"/>
                            </Button.RenderTransform>
                            <Behaviors:Interaction.Triggers>
                                <Behaviors:EventTrigger EventName="MouseUp">
                                    <Behaviors:InvokeCommandAction 
                                        Command="{Binding BtnClickCommand}" 
                                        CommandParameter="{Binding}" />
                                </Behaviors:EventTrigger>
                            </Behaviors:Interaction.Triggers>
                        </Button>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsChecked}" Value="true">
                            <Setter Property="Background"  Value="{DynamicResource SecondaryAccentBrush}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BottomRowButton" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Button Name="btn"  
                                Width="200"
                                Margin="13,3" 
                                Content="{Binding Text}"
                                Command="{Binding BtnClickCommand}"
                                CommandParameter="{Binding}" 
                                HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Behaviors:Interaction.Triggers>
                            <Behaviors:EventTrigger EventName="MouseUp">
                                <Behaviors:InvokeCommandAction Command="{Binding BtnClickCommand}" CommandParameter="{Binding}" />
                            </Behaviors:EventTrigger>
                        </Behaviors:Interaction.Triggers>
                    </Button>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsChecked}" Value="true">
                            <Setter TargetName="btn" Property="Background"  Value="{DynamicResource SecondaryAccentBrush}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GeneralButton" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Margin" Value="3,5"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="genBtn" 
                            CornerRadius="10" 
                            BorderThickness="0.2" 
                            Width="160" 
                            Height="35"
                            Background="{DynamicResource PrimaryHueMidBrush}" >
                        <ContentPresenter x:Name="lbl" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="StrengthButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="74"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="Background" Value="#FFCCCCCC"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="#FF808080"/>
        <Setter Property="cuc:ButtonHelper.CornerRadius" Value="5"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{Binding RelativeSource={RelativeSource AncestorType=Button},Path=(cuc:ButtonHelper.CornerRadius),Mode=OneWay}"
                                Margin="{TemplateBinding Margin}">
                        <Grid Width="{TemplateBinding Width}"
                                  Height="{TemplateBinding Height}">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Text="{TemplateBinding Content}"
                                           FontSize="{TemplateBinding FontSize}"
                                           Foreground="{TemplateBinding Foreground}"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Image x:Name="img_bar" 
                                       Source="{DynamicResource Icon_cloud_bar}"
                                       Stretch="None"
                                       Margin="0"
                                       Grid.Row="1"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Color_Normal}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self},Path=(cuc:ButtonHelper.IsSelected),Mode=OneWay}" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Color_Normal}"/>
                            <Setter TargetName="img_bar" Property="Source" Value="{DynamicResource Icon_cloud_bar_Pressed}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>